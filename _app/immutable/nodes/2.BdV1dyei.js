var NN=Object.defineProperty;var PN=(s,e,t)=>e in s?NN(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Ln=(s,e,t)=>PN(s,typeof e!="symbol"?e+"":e,t);import{P as Oi,Q as pr,R as qr,A as kN,s as oo,c as Cu,u as Tu,g as Eu,b as Au,q as Pc,e as vr,f as wr,h as Ua,k as qt,y as Yi,m as xn,S as $N,x as wh,B as mg,T as t2,d as Kn,v as gf,l as jn,U as i1,V as r1,W as o1,X as DN,Y as n2,n as kc,z as Zs,o as Ii,t as Yl,j as Zl,p as gg,Z as s2}from"../chunks/scheduler.Cr3rLStw.js";import{S as ao,i as lo,t as Ct,a as Lt,b as Tn,d as En,m as An,e as In,g as $c,c as Dc}from"../chunks/index.C8a1Aq-c.js";import{d as i2,w as Kr,r as LN}from"../chunks/index.BgstnLE6.js";function ON(s,e){for(var t=0;t<e.length;t++){const n=e[t];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}function a1(s){return(s==null?void 0:s.length)!==void 0?s:Array.from(s)}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Sh="159",FN={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},UN={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},r2=0,xg=1,o2=2,BN=3,zN=0,Zx=1,Kf=2,lr=3,jr=0,Fs=1,hr=2,VN=2,zr=0,Pa=1,yg=2,bg=3,vg=4,a2=5,Ao=100,l2=101,u2=102,wg=103,Sg=104,c2=200,h2=201,d2=202,f2=203,xf=204,yf=205,p2=206,m2=207,g2=208,x2=209,y2=210,b2=211,v2=212,w2=213,S2=214,_2=0,C2=1,T2=2,Lc=3,E2=4,A2=5,I2=6,R2=7,_h=0,M2=1,N2=2,Vr=0,P2=1,k2=2,$2=3,Jx=4,D2=5,_g="attached",L2="detached",jf=300,Yr=301,Fo=302,Oc=303,Fc=304,Iu=306,Uc=1e3,Es=1001,Bc=1002,zn=1003,bf=1004,WN=1004,Sc=1005,GN=1005,Vn=1006,Qx=1007,HN=1007,Uo=1008,XN=1008,Wr=1009,O2=1010,F2=1011,Yf=1012,ey=1013,Br=1014,Ji=1015,lu=1016,ty=1017,ny=1018,No=1020,U2=1021,ei=1023,B2=1024,z2=1025,Po=1026,Ba=1027,V2=1028,sy=1029,W2=1030,iy=1031,ry=1033,sf=33776,rf=33777,of=33778,af=33779,Cg=35840,Tg=35841,Eg=35842,Ag=35843,oy=36196,Ig=37492,Rg=37496,Mg=37808,Ng=37809,Pg=37810,kg=37811,$g=37812,Dg=37813,Lg=37814,Og=37815,Fg=37816,Ug=37817,Bg=37818,zg=37819,Vg=37820,Wg=37821,lf=36492,Gg=36494,Hg=36495,G2=36283,Xg=36284,qg=36285,Kg=36286,H2=2200,X2=2201,q2=2202,zc=2300,Vc=2301,uf=2302,Ca=2400,Ta=2401,Wc=2402,Zf=2500,ay=2501,qN=0,KN=1,jN=2,ly=3e3,ko=3001,K2=3200,j2=3201,Ho=0,Y2=1,mi="",Jn="srgb",Sr="srgb-linear",Jf="display-p3",Ch="display-p3-linear",Gc="linear",gn="srgb",Hc="rec709",Xc="p3",YN=0,pa=7680,ZN=7681,JN=7682,QN=7683,eP=34055,tP=34056,nP=5386,sP=512,iP=513,rP=514,oP=515,aP=516,lP=517,uP=518,jg=519,Z2=512,J2=513,Q2=514,uy=515,eT=516,tT=517,nT=518,sT=519,qc=35044,cP=35048,hP=35040,dP=35045,fP=35049,pP=35041,mP=35046,gP=35050,xP=35042,yP="100",Yg="300 es",vf=1035,Qi=2e3,uu=2001;class uo{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const bs=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let l1=1234567;const ka=Math.PI/180,cu=180/Math.PI;function xi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(bs[s&255]+bs[s>>8&255]+bs[s>>16&255]+bs[s>>24&255]+"-"+bs[e&255]+bs[e>>8&255]+"-"+bs[e>>16&15|64]+bs[e>>24&255]+"-"+bs[t&63|128]+bs[t>>8&255]+"-"+bs[t>>16&255]+bs[t>>24&255]+bs[n&255]+bs[n>>8&255]+bs[n>>16&255]+bs[n>>24&255]).toLowerCase()}function Fn(s,e,t){return Math.max(e,Math.min(t,s))}function cy(s,e){return(s%e+e)%e}function bP(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function vP(s,e,t){return s!==e?(t-s)/(e-s):0}function _c(s,e,t){return(1-t)*s+t*e}function wP(s,e,t,n){return _c(s,e,1-Math.exp(-t*n))}function SP(s,e=1){return e-Math.abs(cy(s,e*2)-e)}function _P(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function CP(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function TP(s,e){return s+Math.floor(Math.random()*(e-s+1))}function EP(s,e){return s+Math.random()*(e-s)}function AP(s){return s*(.5-Math.random())}function IP(s){s!==void 0&&(l1=s);let e=l1+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function RP(s){return s*ka}function MP(s){return s*cu}function Zg(s){return(s&s-1)===0&&s!==0}function NP(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function wf(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function PP(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),l=o(t/2),u=r((e+n)/2),c=o((e+n)/2),h=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*c,l*h,l*d,a*u);break;case"YZY":s.set(l*d,a*c,l*h,a*u);break;case"ZXZ":s.set(l*h,l*d,a*c,a*u);break;case"XZX":s.set(a*c,l*p,l*f,a*u);break;case"YXY":s.set(l*f,a*c,l*p,a*u);break;case"ZYZ":s.set(l*p,l*f,a*c,a*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ti(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Mt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const kP={DEG2RAD:ka,RAD2DEG:cu,generateUUID:xi,clamp:Fn,euclideanModulo:cy,mapLinear:bP,inverseLerp:vP,lerp:_c,damp:wP,pingpong:SP,smoothstep:_P,smootherstep:CP,randInt:TP,randFloat:EP,randFloatSpread:AP,seededRandom:IP,degToRad:RP,radToDeg:MP,isPowerOfTwo:Zg,ceilPowerOfTwo:NP,floorPowerOfTwo:wf,setQuaternionFromProperEuler:PP,normalize:Mt,denormalize:ti};class me{constructor(e=0,t=0){me.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Fn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class $t{constructor(e,t,n,i,r,o,a,l,u){$t.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,u)}set(e,t,n,i,r,o,a,l,u){const c=this.elements;return c[0]=e,c[1]=i,c[2]=a,c[3]=t,c[4]=r,c[5]=l,c[6]=n,c[7]=o,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],l=n[6],u=n[1],c=n[4],h=n[7],d=n[2],f=n[5],p=n[8],x=i[0],m=i[3],g=i[6],y=i[1],v=i[4],w=i[7],_=i[2],T=i[5],A=i[8];return r[0]=o*x+a*y+l*_,r[3]=o*m+a*v+l*T,r[6]=o*g+a*w+l*A,r[1]=u*x+c*y+h*_,r[4]=u*m+c*v+h*T,r[7]=u*g+c*w+h*A,r[2]=d*x+f*y+p*_,r[5]=d*m+f*v+p*T,r[8]=d*g+f*w+p*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8];return t*o*c-t*a*u-n*r*c+n*a*l+i*r*u-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8],h=c*o-a*u,d=a*l-c*r,f=u*r-o*l,p=t*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return e[0]=h*x,e[1]=(i*u-c*n)*x,e[2]=(a*n-i*o)*x,e[3]=d*x,e[4]=(c*t-i*l)*x,e[5]=(i*r-a*t)*x,e[6]=f*x,e[7]=(n*l-u*t)*x,e[8]=(o*t-n*r)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const l=Math.cos(r),u=Math.sin(r);return this.set(n*l,n*u,-n*(l*o+u*a)+o+e,-i*u,i*l,-i*(-u*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(om.makeScale(e,t)),this}rotate(e){return this.premultiply(om.makeRotation(-e)),this}translate(e,t){return this.premultiply(om.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const om=new $t;function iT(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const $P={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Jl(s,e){return new $P[s](e)}function Kc(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function rT(){const s=Kc("canvas");return s.style.display="block",s}const u1={};function Cc(s){s in u1||(u1[s]=!0,console.warn(s))}const c1=new $t().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),h1=new $t().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ed={[Sr]:{transfer:Gc,primaries:Hc,toReference:s=>s,fromReference:s=>s},[Jn]:{transfer:gn,primaries:Hc,toReference:s=>s.convertSRGBToLinear(),fromReference:s=>s.convertLinearToSRGB()},[Ch]:{transfer:Gc,primaries:Xc,toReference:s=>s.applyMatrix3(h1),fromReference:s=>s.applyMatrix3(c1)},[Jf]:{transfer:gn,primaries:Xc,toReference:s=>s.convertSRGBToLinear().applyMatrix3(h1),fromReference:s=>s.applyMatrix3(c1).convertLinearToSRGB()}},DP=new Set([Sr,Ch]),Qt={enabled:!0,_workingColorSpace:Sr,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(s){if(!DP.has(s))throw new Error(`Unsupported working color space, "${s}".`);this._workingColorSpace=s},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=ed[e].toReference,i=ed[t].fromReference;return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this._workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this._workingColorSpace)},getPrimaries:function(s){return ed[s].primaries},getTransfer:function(s){return s===mi?Gc:ed[s].transfer}};function su(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function am(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Sl;class hy{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Sl===void 0&&(Sl=Kc("canvas")),Sl.width=e.width,Sl.height=e.height;const n=Sl.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Sl}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Kc("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=su(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(su(t[n]/255)*255):t[n]=su(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let LP=0;class Ea{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:LP++}),this.uuid=xi(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(lm(i[o].image)):r.push(lm(i[o]))}else r=lm(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function lm(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?hy.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let OP=0;class Wn extends uo{constructor(e=Wn.DEFAULT_IMAGE,t=Wn.DEFAULT_MAPPING,n=Es,i=Es,r=Vn,o=Uo,a=ei,l=Wr,u=Wn.DEFAULT_ANISOTROPY,c=mi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:OP++}),this.uuid=xi(),this.name="",this.source=new Ea(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=u,this.format=a,this.internalFormat=null,this.type=l,this.offset=new me(0,0),this.repeat=new me(1,1),this.center=new me(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new $t,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof c=="string"?this.colorSpace=c:(Cc("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===ko?Jn:mi),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==jf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Uc:e.x=e.x-Math.floor(e.x);break;case Es:e.x=e.x<0?0:1;break;case Bc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Uc:e.y=e.y-Math.floor(e.y);break;case Es:e.y=e.y<0?0:1;break;case Bc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Cc("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Jn?ko:ly}set encoding(e){Cc("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===ko?Jn:mi}}Wn.DEFAULT_IMAGE=null;Wn.DEFAULT_MAPPING=jf;Wn.DEFAULT_ANISOTROPY=1;class rn{constructor(e=0,t=0,n=0,i=1){rn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,u=l[0],c=l[4],h=l[8],d=l[1],f=l[5],p=l[9],x=l[2],m=l[6],g=l[10];if(Math.abs(c-d)<.01&&Math.abs(h-x)<.01&&Math.abs(p-m)<.01){if(Math.abs(c+d)<.1&&Math.abs(h+x)<.1&&Math.abs(p+m)<.1&&Math.abs(u+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(u+1)/2,w=(f+1)/2,_=(g+1)/2,T=(c+d)/4,A=(h+x)/4,M=(p+m)/4;return v>w&&v>_?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=T/n,r=A/n):w>_?w<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(w),n=T/i,r=M/i):_<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(_),n=A/r,i=M/r),this.set(n,i,r,t),this}let y=Math.sqrt((m-p)*(m-p)+(h-x)*(h-x)+(d-c)*(d-c));return Math.abs(y)<.001&&(y=1),this.x=(m-p)/y,this.y=(h-x)/y,this.z=(d-c)/y,this.w=Math.acos((u+f+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class oT extends uo{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new rn(0,0,e,t),this.scissorTest=!1,this.viewport=new rn(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Cc("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===ko?Jn:mi),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Vn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Wn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ea(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class er extends oT{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Qf extends Wn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=zn,this.minFilter=zn,this.wrapR=Es,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class FP extends er{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Qf(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class dy extends Wn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=zn,this.minFilter=zn,this.wrapR=Es,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class UP extends er{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new dy(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class BP extends er{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=r.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class si{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let l=n[i+0],u=n[i+1],c=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],x=r[o+3];if(a===0){e[t+0]=l,e[t+1]=u,e[t+2]=c,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=x;return}if(h!==x||l!==d||u!==f||c!==p){let m=1-a;const g=l*d+u*f+c*p+h*x,y=g>=0?1:-1,v=1-g*g;if(v>Number.EPSILON){const _=Math.sqrt(v),T=Math.atan2(_,g*y);m=Math.sin(m*T)/_,a=Math.sin(a*T)/_}const w=a*y;if(l=l*m+d*w,u=u*m+f*w,c=c*m+p*w,h=h*m+x*w,m===1-a){const _=1/Math.sqrt(l*l+u*u+c*c+h*h);l*=_,u*=_,c*=_,h*=_}}e[t]=l,e[t+1]=u,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],l=n[i+1],u=n[i+2],c=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+c*h+l*f-u*d,e[t+1]=l*p+c*d+u*h-a*f,e[t+2]=u*p+c*f+a*d-l*h,e[t+3]=c*p-a*h-l*d-u*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,l=Math.sin,u=a(n/2),c=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*c*h+u*f*p,this._y=u*f*h-d*c*p,this._z=u*c*p+d*f*h,this._w=u*c*h-d*f*p;break;case"YXZ":this._x=d*c*h+u*f*p,this._y=u*f*h-d*c*p,this._z=u*c*p-d*f*h,this._w=u*c*h+d*f*p;break;case"ZXY":this._x=d*c*h-u*f*p,this._y=u*f*h+d*c*p,this._z=u*c*p+d*f*h,this._w=u*c*h-d*f*p;break;case"ZYX":this._x=d*c*h-u*f*p,this._y=u*f*h+d*c*p,this._z=u*c*p-d*f*h,this._w=u*c*h+d*f*p;break;case"YZX":this._x=d*c*h+u*f*p,this._y=u*f*h+d*c*p,this._z=u*c*p-d*f*h,this._w=u*c*h-d*f*p;break;case"XZY":this._x=d*c*h-u*f*p,this._y=u*f*h-d*c*p,this._z=u*c*p+d*f*h,this._w=u*c*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],l=t[9],u=t[2],c=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(c-l)*f,this._y=(r-u)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(c-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+u)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-u)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+c)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+u)/f,this._y=(l+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Fn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,l=t._y,u=t._z,c=t._w;return this._x=n*c+o*a+i*u-r*l,this._y=i*c+o*l+r*a-n*u,this._z=r*c+o*u+n*l-i*a,this._w=o*c-n*a-i*l-r*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),c=Math.atan2(u,a),h=Math.sin((1-t)*c)/u,d=Math.sin(t*c)/u;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(d1.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(d1.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,l=e.w,u=2*(o*i-a*n),c=2*(a*t-r*i),h=2*(r*n-o*t);return this.x=t+l*u+o*h-a*c,this.y=n+l*c+a*u-r*h,this.z=i+l*h+r*c-o*u,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return um.copy(this).projectOnVector(e),this.sub(um)}reflect(e){return this.sub(um.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Fn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const um=new U,d1=new si;class Us{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Vi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Vi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Vi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Vi):Vi.fromBufferAttribute(r,o),Vi.applyMatrix4(e.matrixWorld),this.expandByPoint(Vi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),td.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),td.copy(n.boundingBox)),td.applyMatrix4(e.matrixWorld),this.union(td)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Vi),Vi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ec),nd.subVectors(this.max,ec),_l.subVectors(e.a,ec),Cl.subVectors(e.b,ec),Tl.subVectors(e.c,ec),yo.subVectors(Cl,_l),bo.subVectors(Tl,Cl),na.subVectors(_l,Tl);let t=[0,-yo.z,yo.y,0,-bo.z,bo.y,0,-na.z,na.y,yo.z,0,-yo.x,bo.z,0,-bo.x,na.z,0,-na.x,-yo.y,yo.x,0,-bo.y,bo.x,0,-na.y,na.x,0];return!cm(t,_l,Cl,Tl,nd)||(t=[1,0,0,0,1,0,0,0,1],!cm(t,_l,Cl,Tl,nd))?!1:(sd.crossVectors(yo,bo),t=[sd.x,sd.y,sd.z],cm(t,_l,Cl,Tl,nd))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Vi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Vi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mr=[new U,new U,new U,new U,new U,new U,new U,new U],Vi=new U,td=new Us,_l=new U,Cl=new U,Tl=new U,yo=new U,bo=new U,na=new U,ec=new U,nd=new U,sd=new U,sa=new U;function cm(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){sa.fromArray(s,r);const a=i.x*Math.abs(sa.x)+i.y*Math.abs(sa.y)+i.z*Math.abs(sa.z),l=e.dot(sa),u=t.dot(sa),c=n.dot(sa);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>a)return!1}return!0}const zP=new Us,tc=new U,hm=new U;class Is{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):zP.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;tc.subVectors(e,this.center);const t=tc.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(tc,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(hm.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(tc.copy(e.center).add(hm)),this.expandByPoint(tc.copy(e.center).sub(hm))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Nr=new U,dm=new U,id=new U,vo=new U,fm=new U,rd=new U,pm=new U;class Ru{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Nr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Nr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Nr.copy(this.origin).addScaledVector(this.direction,t),Nr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){dm.copy(e).add(t).multiplyScalar(.5),id.copy(t).sub(e).normalize(),vo.copy(this.origin).sub(dm);const r=e.distanceTo(t)*.5,o=-this.direction.dot(id),a=vo.dot(this.direction),l=-vo.dot(id),u=vo.lengthSq(),c=Math.abs(1-o*o);let h,d,f,p;if(c>0)if(h=o*l-a,d=o*a-l,p=r*c,h>=0)if(d>=-p)if(d<=p){const x=1/c;h*=x,d*=x,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+u}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+u;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+u;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+u):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+u):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+u);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+u;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(dm).addScaledVector(id,d),f}intersectSphere(e,t){Nr.subVectors(e.center,this.origin);const n=Nr.dot(this.direction),i=Nr.dot(Nr)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,l;const u=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,d=this.origin;return u>=0?(n=(e.min.x-d.x)*u,i=(e.max.x-d.x)*u):(n=(e.max.x-d.x)*u,i=(e.min.x-d.x)*u),c>=0?(r=(e.min.y-d.y)*c,o=(e.max.y-d.y)*c):(r=(e.max.y-d.y)*c,o=(e.min.y-d.y)*c),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Nr)!==null}intersectTriangle(e,t,n,i,r){fm.subVectors(t,e),rd.subVectors(n,e),pm.crossVectors(fm,rd);let o=this.direction.dot(pm),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;vo.subVectors(this.origin,e);const l=a*this.direction.dot(rd.crossVectors(vo,rd));if(l<0)return null;const u=a*this.direction.dot(fm.cross(vo));if(u<0||l+u>o)return null;const c=-a*vo.dot(pm);return c<0?null:this.at(c/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class bt{constructor(e,t,n,i,r,o,a,l,u,c,h,d,f,p,x,m){bt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,l,u,c,h,d,f,p,x,m)}set(e,t,n,i,r,o,a,l,u,c,h,d,f,p,x,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=o,g[9]=a,g[13]=l,g[2]=u,g[6]=c,g[10]=h,g[14]=d,g[3]=f,g[7]=p,g[11]=x,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new bt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/El.setFromMatrixColumn(e,0).length(),r=1/El.setFromMatrixColumn(e,1).length(),o=1/El.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),u=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*c,f=o*h,p=a*c,x=a*h;t[0]=l*c,t[4]=-l*h,t[8]=u,t[1]=f+p*u,t[5]=d-x*u,t[9]=-a*l,t[2]=x-d*u,t[6]=p+f*u,t[10]=o*l}else if(e.order==="YXZ"){const d=l*c,f=l*h,p=u*c,x=u*h;t[0]=d+x*a,t[4]=p*a-f,t[8]=o*u,t[1]=o*h,t[5]=o*c,t[9]=-a,t[2]=f*a-p,t[6]=x+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*c,f=l*h,p=u*c,x=u*h;t[0]=d-x*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*c,t[9]=x-d*a,t[2]=-o*u,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*c,f=o*h,p=a*c,x=a*h;t[0]=l*c,t[4]=p*u-f,t[8]=d*u+x,t[1]=l*h,t[5]=x*u+d,t[9]=f*u-p,t[2]=-u,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*u,p=a*l,x=a*u;t[0]=l*c,t[4]=x-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*c,t[9]=-a*c,t[2]=-u*c,t[6]=f*h+p,t[10]=d-x*h}else if(e.order==="XZY"){const d=o*l,f=o*u,p=a*l,x=a*u;t[0]=l*c,t[4]=-h,t[8]=u*c,t[1]=d*h+x,t[5]=o*c,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*c,t[10]=x*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(VP,e,WP)}lookAt(e,t,n){const i=this.elements;return hi.subVectors(e,t),hi.lengthSq()===0&&(hi.z=1),hi.normalize(),wo.crossVectors(n,hi),wo.lengthSq()===0&&(Math.abs(n.z)===1?hi.x+=1e-4:hi.z+=1e-4,hi.normalize(),wo.crossVectors(n,hi)),wo.normalize(),od.crossVectors(hi,wo),i[0]=wo.x,i[4]=od.x,i[8]=hi.x,i[1]=wo.y,i[5]=od.y,i[9]=hi.y,i[2]=wo.z,i[6]=od.z,i[10]=hi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],l=n[8],u=n[12],c=n[1],h=n[5],d=n[9],f=n[13],p=n[2],x=n[6],m=n[10],g=n[14],y=n[3],v=n[7],w=n[11],_=n[15],T=i[0],A=i[4],M=i[8],C=i[12],R=i[1],$=i[5],W=i[9],q=i[13],O=i[2],H=i[6],Z=i[10],ee=i[14],ce=i[3],ne=i[7],fe=i[11],pe=i[15];return r[0]=o*T+a*R+l*O+u*ce,r[4]=o*A+a*$+l*H+u*ne,r[8]=o*M+a*W+l*Z+u*fe,r[12]=o*C+a*q+l*ee+u*pe,r[1]=c*T+h*R+d*O+f*ce,r[5]=c*A+h*$+d*H+f*ne,r[9]=c*M+h*W+d*Z+f*fe,r[13]=c*C+h*q+d*ee+f*pe,r[2]=p*T+x*R+m*O+g*ce,r[6]=p*A+x*$+m*H+g*ne,r[10]=p*M+x*W+m*Z+g*fe,r[14]=p*C+x*q+m*ee+g*pe,r[3]=y*T+v*R+w*O+_*ce,r[7]=y*A+v*$+w*H+_*ne,r[11]=y*M+v*W+w*Z+_*fe,r[15]=y*C+v*q+w*ee+_*pe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],l=e[9],u=e[13],c=e[2],h=e[6],d=e[10],f=e[14],p=e[3],x=e[7],m=e[11],g=e[15];return p*(+r*l*h-i*u*h-r*a*d+n*u*d+i*a*f-n*l*f)+x*(+t*l*f-t*u*d+r*o*d-i*o*f+i*u*c-r*l*c)+m*(+t*u*h-t*a*f-r*o*h+n*o*f+r*a*c-n*u*c)+g*(-i*a*c-t*l*h+t*a*d+i*o*h-n*o*d+n*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],l=e[6],u=e[7],c=e[8],h=e[9],d=e[10],f=e[11],p=e[12],x=e[13],m=e[14],g=e[15],y=h*m*u-x*d*u+x*l*f-a*m*f-h*l*g+a*d*g,v=p*d*u-c*m*u-p*l*f+o*m*f+c*l*g-o*d*g,w=c*x*u-p*h*u+p*a*f-o*x*f-c*a*g+o*h*g,_=p*h*l-c*x*l-p*a*d+o*x*d+c*a*m-o*h*m,T=t*y+n*v+i*w+r*_;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/T;return e[0]=y*A,e[1]=(x*d*r-h*m*r-x*i*f+n*m*f+h*i*g-n*d*g)*A,e[2]=(a*m*r-x*l*r+x*i*u-n*m*u-a*i*g+n*l*g)*A,e[3]=(h*l*r-a*d*r-h*i*u+n*d*u+a*i*f-n*l*f)*A,e[4]=v*A,e[5]=(c*m*r-p*d*r+p*i*f-t*m*f-c*i*g+t*d*g)*A,e[6]=(p*l*r-o*m*r-p*i*u+t*m*u+o*i*g-t*l*g)*A,e[7]=(o*d*r-c*l*r+c*i*u-t*d*u-o*i*f+t*l*f)*A,e[8]=w*A,e[9]=(p*h*r-c*x*r-p*n*f+t*x*f+c*n*g-t*h*g)*A,e[10]=(o*x*r-p*a*r+p*n*u-t*x*u-o*n*g+t*a*g)*A,e[11]=(c*a*r-o*h*r-c*n*u+t*h*u+o*n*f-t*a*f)*A,e[12]=_*A,e[13]=(c*x*i-p*h*i+p*n*d-t*x*d-c*n*m+t*h*m)*A,e[14]=(p*a*i-o*x*i-p*n*l+t*x*l+o*n*m-t*a*m)*A,e[15]=(o*h*i-c*a*i+c*n*l-t*h*l-o*n*d+t*a*d)*A,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,l=e.z,u=r*o,c=r*a;return this.set(u*o+n,u*a-i*l,u*l+i*a,0,u*a+i*l,c*a+n,c*l-i*o,0,u*l-i*a,c*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,l=t._w,u=r+r,c=o+o,h=a+a,d=r*u,f=r*c,p=r*h,x=o*c,m=o*h,g=a*h,y=l*u,v=l*c,w=l*h,_=n.x,T=n.y,A=n.z;return i[0]=(1-(x+g))*_,i[1]=(f+w)*_,i[2]=(p-v)*_,i[3]=0,i[4]=(f-w)*T,i[5]=(1-(d+g))*T,i[6]=(m+y)*T,i[7]=0,i[8]=(p+v)*A,i[9]=(m-y)*A,i[10]=(1-(d+x))*A,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=El.set(i[0],i[1],i[2]).length();const o=El.set(i[4],i[5],i[6]).length(),a=El.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Wi.copy(this);const u=1/r,c=1/o,h=1/a;return Wi.elements[0]*=u,Wi.elements[1]*=u,Wi.elements[2]*=u,Wi.elements[4]*=c,Wi.elements[5]*=c,Wi.elements[6]*=c,Wi.elements[8]*=h,Wi.elements[9]*=h,Wi.elements[10]*=h,t.setFromRotationMatrix(Wi),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=Qi){const l=this.elements,u=2*r/(t-e),c=2*r/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===Qi)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===uu)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=u,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=c,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=Qi){const l=this.elements,u=1/(t-e),c=1/(n-i),h=1/(o-r),d=(t+e)*u,f=(n+i)*c;let p,x;if(a===Qi)p=(o+r)*h,x=-2*h;else if(a===uu)p=r*h,x=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*c,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=x,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const El=new U,Wi=new bt,VP=new U(0,0,0),WP=new U(1,1,1),wo=new U,od=new U,hi=new U,f1=new bt,p1=new si;class Th{constructor(e=0,t=0,n=0,i=Th.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],l=i[1],u=i[5],c=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Fn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Fn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Fn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-Fn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,u));break;case"YZX":this._z=Math.asin(Fn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Fn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return f1.makeRotationFromQuaternion(e),this.setFromRotationMatrix(f1,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return p1.setFromEuler(this),this.setFromQuaternion(p1,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Th.DEFAULT_ORDER="XYZ";class ep{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let GP=0;const m1=new U,Al=new si,Pr=new bt,ad=new U,nc=new U,HP=new U,XP=new si,g1=new U(1,0,0),x1=new U(0,1,0),y1=new U(0,0,1),qP={type:"added"},KP={type:"removed"};class Yt extends uo{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:GP++}),this.uuid=xi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Yt.DEFAULT_UP.clone();const e=new U,t=new Th,n=new si,i=new U(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new bt},normalMatrix:{value:new $t}}),this.matrix=new bt,this.matrixWorld=new bt,this.matrixAutoUpdate=Yt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Yt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ep,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Al.setFromAxisAngle(e,t),this.quaternion.multiply(Al),this}rotateOnWorldAxis(e,t){return Al.setFromAxisAngle(e,t),this.quaternion.premultiply(Al),this}rotateX(e){return this.rotateOnAxis(g1,e)}rotateY(e){return this.rotateOnAxis(x1,e)}rotateZ(e){return this.rotateOnAxis(y1,e)}translateOnAxis(e,t){return m1.copy(e).applyQuaternion(this.quaternion),this.position.add(m1.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(g1,e)}translateY(e){return this.translateOnAxis(x1,e)}translateZ(e){return this.translateOnAxis(y1,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Pr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ad.copy(e):ad.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),nc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pr.lookAt(nc,ad,this.up):Pr.lookAt(ad,nc,this.up),this.quaternion.setFromRotationMatrix(Pr),i&&(Pr.extractRotation(i.matrixWorld),Al.setFromRotationMatrix(Pr),this.quaternion.premultiply(Al.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(qP)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(KP)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Pr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Pr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nc,e,HP),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nc,XP,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let u=0,c=l.length;u<c;u++){const h=l[u];r(e.shapes,h)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,u=this.material.length;l<u;l++)a.push(r(e.materials,this.material[l]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),u=o(e.textures),c=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),u.length>0&&(n.textures=u),c.length>0&&(n.images=c),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const u in a){const c=a[u];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Yt.DEFAULT_UP=new U(0,1,0);Yt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Yt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Gi=new U,kr=new U,mm=new U,$r=new U,Il=new U,Rl=new U,b1=new U,gm=new U,xm=new U,ym=new U;let ld=!1;class Js{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Gi.subVectors(e,t),i.cross(Gi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Gi.subVectors(i,t),kr.subVectors(n,t),mm.subVectors(e,t);const o=Gi.dot(Gi),a=Gi.dot(kr),l=Gi.dot(mm),u=kr.dot(kr),c=kr.dot(mm),h=o*u-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(u*l-a*c)*d,p=(o*c-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$r),$r.x>=0&&$r.y>=0&&$r.x+$r.y<=1}static getUV(e,t,n,i,r,o,a,l){return ld===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),ld=!0),this.getInterpolation(e,t,n,i,r,o,a,l)}static getInterpolation(e,t,n,i,r,o,a,l){return this.getBarycoord(e,t,n,i,$r),l.setScalar(0),l.addScaledVector(r,$r.x),l.addScaledVector(o,$r.y),l.addScaledVector(a,$r.z),l}static isFrontFacing(e,t,n,i){return Gi.subVectors(n,t),kr.subVectors(e,t),Gi.cross(kr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Gi.subVectors(this.c,this.b),kr.subVectors(this.a,this.b),Gi.cross(kr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Js.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Js.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return ld===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),ld=!0),Js.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Js.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Js.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Js.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;Il.subVectors(i,n),Rl.subVectors(r,n),gm.subVectors(e,n);const l=Il.dot(gm),u=Rl.dot(gm);if(l<=0&&u<=0)return t.copy(n);xm.subVectors(e,i);const c=Il.dot(xm),h=Rl.dot(xm);if(c>=0&&h<=c)return t.copy(i);const d=l*h-c*u;if(d<=0&&l>=0&&c<=0)return o=l/(l-c),t.copy(n).addScaledVector(Il,o);ym.subVectors(e,r);const f=Il.dot(ym),p=Rl.dot(ym);if(p>=0&&f<=p)return t.copy(r);const x=f*u-l*p;if(x<=0&&u>=0&&p<=0)return a=u/(u-p),t.copy(n).addScaledVector(Rl,a);const m=c*p-f*h;if(m<=0&&h-c>=0&&f-p>=0)return b1.subVectors(r,i),a=(h-c)/(h-c+(f-p)),t.copy(i).addScaledVector(b1,a);const g=1/(m+x+d);return o=x*g,a=d*g,t.copy(n).addScaledVector(Il,o).addScaledVector(Rl,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const aT={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},So={h:0,s:0,l:0},ud={h:0,s:0,l:0};function bm(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Xe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Jn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Qt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Qt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Qt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Qt.workingColorSpace){if(e=cy(e,1),t=Fn(t,0,1),n=Fn(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=bm(o,r,e+1/3),this.g=bm(o,r,e),this.b=bm(o,r,e-1/3)}return Qt.toWorkingColorSpace(this,i),this}setStyle(e,t=Jn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Jn){const n=aT[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=su(e.r),this.g=su(e.g),this.b=su(e.b),this}copyLinearToSRGB(e){return this.r=am(e.r),this.g=am(e.g),this.b=am(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Jn){return Qt.fromWorkingColorSpace(vs.copy(this),e),Math.round(Fn(vs.r*255,0,255))*65536+Math.round(Fn(vs.g*255,0,255))*256+Math.round(Fn(vs.b*255,0,255))}getHexString(e=Jn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Qt.workingColorSpace){Qt.fromWorkingColorSpace(vs.copy(this),t);const n=vs.r,i=vs.g,r=vs.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,u;const c=(a+o)/2;if(a===o)l=0,u=0;else{const h=o-a;switch(u=c<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=u,e.l=c,e}getRGB(e,t=Qt.workingColorSpace){return Qt.fromWorkingColorSpace(vs.copy(this),t),e.r=vs.r,e.g=vs.g,e.b=vs.b,e}getStyle(e=Jn){Qt.fromWorkingColorSpace(vs.copy(this),e);const t=vs.r,n=vs.g,i=vs.b;return e!==Jn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(So),this.setHSL(So.h+e,So.s+t,So.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(So),e.getHSL(ud);const n=_c(So.h,ud.h,t),i=_c(So.s,ud.s,t),r=_c(So.l,ud.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const vs=new Xe;Xe.NAMES=aT;let jP=0;class Ms extends uo{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:jP++}),this.uuid=xi(),this.name="",this.type="Material",this.blending=Pa,this.side=jr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=xf,this.blendDst=yf,this.blendEquation=Ao,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Xe(0,0,0),this.blendAlpha=0,this.depthFunc=Lc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=jg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=pa,this.stencilZFail=pa,this.stencilZPass=pa,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Pa&&(n.blending=this.blending),this.side!==jr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==xf&&(n.blendSrc=this.blendSrc),this.blendDst!==yf&&(n.blendDst=this.blendDst),this.blendEquation!==Ao&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Lc&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==jg&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==pa&&(n.stencilFail=this.stencilFail),this.stencilZFail!==pa&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==pa&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Xo extends Ms{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Fr=YP();function YP(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const u=l-127;u<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):u<-14?(n[l]=1024>>-u-14,n[l|256]=1024>>-u-14|32768,i[l]=-u-1,i[l|256]=-u-1):u<=15?(n[l]=u+15<<10,n[l|256]=u+15<<10|32768,i[l]=13,i[l|256]=13):u<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let u=l<<13,c=0;for(;!(u&8388608);)u<<=1,c-=8388608;u&=-8388609,c+=947912704,r[l]=u|c}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function qs(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=Fn(s,-65504,65504),Fr.floatView[0]=s;const e=Fr.uint32View[0],t=e>>23&511;return Fr.baseTable[t]+((e&8388607)>>Fr.shiftTable[t])}function mc(s){const e=s>>10;return Fr.uint32View[0]=Fr.mantissaTable[Fr.offsetTable[e]+(s&1023)]+Fr.exponentTable[e],Fr.floatView[0]}const ZP={toHalfFloat:qs,fromHalfFloat:mc},qn=new U,cd=new me;class on{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=qc,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Ji,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.BufferAttribute: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)cd.fromBufferAttribute(this,t),cd.applyMatrix3(e),this.setXY(t,cd.x,cd.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix3(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix4(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyNormalMatrix(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.transformDirection(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ti(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Mt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ti(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ti(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ti(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ti(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==qc&&(e.usage=this.usage),e}}class JP extends on{constructor(e,t,n){super(new Int8Array(e),t,n)}}class QP extends on{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class ek extends on{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class tk extends on{constructor(e,t,n){super(new Int16Array(e),t,n)}}class fy extends on{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class nk extends on{constructor(e,t,n){super(new Int32Array(e),t,n)}}class py extends on{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class sk extends on{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=mc(this.array[e*this.itemSize]);return this.normalized&&(t=ti(t,this.array)),t}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize]=qs(t),this}getY(e){let t=mc(this.array[e*this.itemSize+1]);return this.normalized&&(t=ti(t,this.array)),t}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+1]=qs(t),this}getZ(e){let t=mc(this.array[e*this.itemSize+2]);return this.normalized&&(t=ti(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+2]=qs(t),this}getW(e){let t=mc(this.array[e*this.itemSize+3]);return this.normalized&&(t=ti(t,this.array)),t}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.array[e*this.itemSize+3]=qs(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.array[e+0]=qs(t),this.array[e+1]=qs(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.array[e+0]=qs(t),this.array[e+1]=qs(n),this.array[e+2]=qs(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.array[e+0]=qs(t),this.array[e+1]=qs(n),this.array[e+2]=qs(i),this.array[e+3]=qs(r),this}}class et extends on{constructor(e,t,n){super(new Float32Array(e),t,n)}}class ik extends on{constructor(e,t,n){super(new Float64Array(e),t,n)}}let rk=0;const Ti=new bt,vm=new Yt,Ml=new U,di=new Us,sc=new Us,os=new U;class Ot extends uo{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:rk++}),this.uuid=xi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(iT(e)?py:fy)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new $t().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ti.makeRotationFromQuaternion(e),this.applyMatrix4(Ti),this}rotateX(e){return Ti.makeRotationX(e),this.applyMatrix4(Ti),this}rotateY(e){return Ti.makeRotationY(e),this.applyMatrix4(Ti),this}rotateZ(e){return Ti.makeRotationZ(e),this.applyMatrix4(Ti),this}translate(e,t,n){return Ti.makeTranslation(e,t,n),this.applyMatrix4(Ti),this}scale(e,t,n){return Ti.makeScale(e,t,n),this.applyMatrix4(Ti),this}lookAt(e){return vm.lookAt(e),vm.updateMatrix(),this.applyMatrix4(vm.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ml).negate(),this.translate(Ml.x,Ml.y,Ml.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new et(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Us);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];di.setFromBufferAttribute(r),this.morphTargetsRelative?(os.addVectors(this.boundingBox.min,di.min),this.boundingBox.expandByPoint(os),os.addVectors(this.boundingBox.max,di.max),this.boundingBox.expandByPoint(os)):(this.boundingBox.expandByPoint(di.min),this.boundingBox.expandByPoint(di.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Is);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(di.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];sc.setFromBufferAttribute(a),this.morphTargetsRelative?(os.addVectors(di.min,sc.min),di.expandByPoint(os),os.addVectors(di.max,sc.max),di.expandByPoint(os)):(di.expandByPoint(sc.min),di.expandByPoint(sc.max))}di.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)os.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(os));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],l=this.morphTargetsRelative;for(let u=0,c=a.count;u<c;u++)os.fromBufferAttribute(a,u),l&&(Ml.fromBufferAttribute(e,u),os.add(Ml)),i=Math.max(i,n.distanceToSquared(os))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new on(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,u=[],c=[];for(let R=0;R<a;R++)u[R]=new U,c[R]=new U;const h=new U,d=new U,f=new U,p=new me,x=new me,m=new me,g=new U,y=new U;function v(R,$,W){h.fromArray(i,R*3),d.fromArray(i,$*3),f.fromArray(i,W*3),p.fromArray(o,R*2),x.fromArray(o,$*2),m.fromArray(o,W*2),d.sub(h),f.sub(h),x.sub(p),m.sub(p);const q=1/(x.x*m.y-m.x*x.y);isFinite(q)&&(g.copy(d).multiplyScalar(m.y).addScaledVector(f,-x.y).multiplyScalar(q),y.copy(f).multiplyScalar(x.x).addScaledVector(d,-m.x).multiplyScalar(q),u[R].add(g),u[$].add(g),u[W].add(g),c[R].add(y),c[$].add(y),c[W].add(y))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let R=0,$=w.length;R<$;++R){const W=w[R],q=W.start,O=W.count;for(let H=q,Z=q+O;H<Z;H+=3)v(n[H+0],n[H+1],n[H+2])}const _=new U,T=new U,A=new U,M=new U;function C(R){A.fromArray(r,R*3),M.copy(A);const $=u[R];_.copy($),_.sub(A.multiplyScalar(A.dot($))).normalize(),T.crossVectors(M,$);const q=T.dot(c[R])<0?-1:1;l[R*4]=_.x,l[R*4+1]=_.y,l[R*4+2]=_.z,l[R*4+3]=q}for(let R=0,$=w.length;R<$;++R){const W=w[R],q=W.start,O=W.count;for(let H=q,Z=q+O;H<Z;H+=3)C(n[H+0]),C(n[H+1]),C(n[H+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new on(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new U,r=new U,o=new U,a=new U,l=new U,u=new U,c=new U,h=new U;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),x=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,x),o.fromBufferAttribute(t,m),c.subVectors(o,r),h.subVectors(i,r),c.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,x),u.fromBufferAttribute(n,m),a.add(c),l.add(c),u.add(c),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(x,l.x,l.y,l.z),n.setXYZ(m,u.x,u.y,u.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),c.subVectors(o,r),h.subVectors(i,r),c.cross(h),n.setXYZ(d+0,c.x,c.y,c.z),n.setXYZ(d+1,c.x,c.y,c.z),n.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)os.fromBufferAttribute(e,t),os.normalize(),e.setXYZ(t,os.x,os.y,os.z)}toNonIndexed(){function e(a,l){const u=a.array,c=a.itemSize,h=a.normalized,d=new u.constructor(l.length*c);let f=0,p=0;for(let x=0,m=l.length;x<m;x++){a.isInterleavedBufferAttribute?f=l[x]*a.data.stride+a.offset:f=l[x]*c;for(let g=0;g<c;g++)d[p++]=u[f++]}return new on(d,c,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ot,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],u=e(l,n);t.setAttribute(a,u)}const r=this.morphAttributes;for(const a in r){const l=[],u=r[a];for(let c=0,h=u.length;c<h;c++){const d=u[c],f=e(d,n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const u=o[a];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const u=n[l];e.data.attributes[l]=u.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],c=[];for(let h=0,d=u.length;h<d;h++){const f=u[h];c.push(f.toJSON(e.data))}c.length>0&&(i[l]=c,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const u in i){const c=i[u];this.setAttribute(u,c.clone(t))}const r=e.morphAttributes;for(const u in r){const c=[],h=r[u];for(let d=0,f=h.length;d<f;d++)c.push(h[d].clone(t));this.morphAttributes[u]=c}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let u=0,c=o.length;u<c;u++){const h=o[u];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const v1=new bt,ia=new Ru,hd=new Is,w1=new U,Nl=new U,Pl=new U,kl=new U,wm=new U,dd=new U,fd=new me,pd=new me,md=new me,S1=new U,_1=new U,C1=new U,gd=new U,xd=new U;class es extends Yt{constructor(e=new Ot,t=new Xo){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){dd.set(0,0,0);for(let l=0,u=r.length;l<u;l++){const c=a[l],h=r[l];c!==0&&(wm.fromBufferAttribute(h,e),o?dd.addScaledVector(wm,c):dd.addScaledVector(wm.sub(t),c))}t.add(dd)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),hd.copy(n.boundingSphere),hd.applyMatrix4(r),ia.copy(e.ray).recast(e.near),!(hd.containsPoint(ia.origin)===!1&&(ia.intersectSphere(hd,w1)===null||ia.origin.distanceToSquared(w1)>(e.far-e.near)**2))&&(v1.copy(r).invert(),ia.copy(e.ray).applyMatrix4(v1),!(n.boundingBox!==null&&ia.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ia)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,u=r.attributes.uv,c=r.attributes.uv1,h=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,x=d.length;p<x;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),v=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let w=y,_=v;w<_;w+=3){const T=a.getX(w),A=a.getX(w+1),M=a.getX(w+2);i=yd(this,g,e,n,u,c,h,T,A,M),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(a.count,f.start+f.count);for(let m=p,g=x;m<g;m+=3){const y=a.getX(m),v=a.getX(m+1),w=a.getX(m+2);i=yd(this,o,e,n,u,c,h,y,v,w),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,x=d.length;p<x;p++){const m=d[p],g=o[m.materialIndex],y=Math.max(m.start,f.start),v=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let w=y,_=v;w<_;w+=3){const T=w,A=w+1,M=w+2;i=yd(this,g,e,n,u,c,h,T,A,M),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),x=Math.min(l.count,f.start+f.count);for(let m=p,g=x;m<g;m+=3){const y=m,v=m+1,w=m+2;i=yd(this,o,e,n,u,c,h,y,v,w),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}}}function ok(s,e,t,n,i,r,o,a){let l;if(e.side===Fs?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,e.side===jr,a),l===null)return null;xd.copy(a),xd.applyMatrix4(s.matrixWorld);const u=t.ray.origin.distanceTo(xd);return u<t.near||u>t.far?null:{distance:u,point:xd.clone(),object:s}}function yd(s,e,t,n,i,r,o,a,l,u){s.getVertexPosition(a,Nl),s.getVertexPosition(l,Pl),s.getVertexPosition(u,kl);const c=ok(s,e,t,n,Nl,Pl,kl,gd);if(c){i&&(fd.fromBufferAttribute(i,a),pd.fromBufferAttribute(i,l),md.fromBufferAttribute(i,u),c.uv=Js.getInterpolation(gd,Nl,Pl,kl,fd,pd,md,new me)),r&&(fd.fromBufferAttribute(r,a),pd.fromBufferAttribute(r,l),md.fromBufferAttribute(r,u),c.uv1=Js.getInterpolation(gd,Nl,Pl,kl,fd,pd,md,new me),c.uv2=c.uv1),o&&(S1.fromBufferAttribute(o,a),_1.fromBufferAttribute(o,l),C1.fromBufferAttribute(o,u),c.normal=Js.getInterpolation(gd,Nl,Pl,kl,S1,_1,C1,new U),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));const h={a,b:l,c:u,normal:new U,materialIndex:0};Js.getNormal(Nl,Pl,kl,h.normal),c.face=h}return c}class Qa extends Ot{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],u=[],c=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new et(u,3)),this.setAttribute("normal",new et(c,3)),this.setAttribute("uv",new et(h,2));function p(x,m,g,y,v,w,_,T,A,M,C){const R=w/A,$=_/M,W=w/2,q=_/2,O=T/2,H=A+1,Z=M+1;let ee=0,ce=0;const ne=new U;for(let fe=0;fe<Z;fe++){const pe=fe*$-q;for(let Oe=0;Oe<H;Oe++){const le=Oe*R-W;ne[x]=le*y,ne[m]=pe*v,ne[g]=O,u.push(ne.x,ne.y,ne.z),ne[x]=0,ne[m]=0,ne[g]=T>0?1:-1,c.push(ne.x,ne.y,ne.z),h.push(Oe/A),h.push(1-fe/M),ee+=1}}for(let fe=0;fe<M;fe++)for(let pe=0;pe<A;pe++){const Oe=d+pe+H*fe,le=d+pe+H*(fe+1),ge=d+(pe+1)+H*(fe+1),Fe=d+(pe+1)+H*fe;l.push(Oe,le,Fe),l.push(le,ge,Fe),ce+=6}a.addGroup(f,ce,C),f+=ce,d+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qa(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function hu(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ls(s){const e={};for(let t=0;t<s.length;t++){const n=hu(s[t]);for(const i in n)e[i]=n[i]}return e}function ak(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function lT(s){return s.getRenderTarget()===null?s.outputColorSpace:Qt.workingColorSpace}const uT={clone:hu,merge:Ls};var lk=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,uk=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _r extends Ms{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=lk,this.fragmentShader=uk,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=hu(e.uniforms),this.uniformsGroups=ak(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class tp extends Yt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new bt,this.projectionMatrix=new bt,this.projectionMatrixInverse=new bt,this.coordinateSystem=Qi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class as extends tp{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=cu*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ka*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return cu*2*Math.atan(Math.tan(ka*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ka*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,u=o.fullHeight;r+=o.offsetX*i/l,t-=o.offsetY*n/u,i*=o.width/l,n*=o.height/u}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const $l=-90,Dl=1;class cT extends Yt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new as($l,Dl,e,t);i.layers=this.layers,this.add(i);const r=new as($l,Dl,e,t);r.layers=this.layers,this.add(r);const o=new as($l,Dl,e,t);o.layers=this.layers,this.add(o);const a=new as($l,Dl,e,t);a.layers=this.layers,this.add(a);const l=new as($l,Dl,e,t);l.layers=this.layers,this.add(l);const u=new as($l,Dl,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,l]=t;for(const u of t)this.remove(u);if(e===Qi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===uu)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,l,u,c]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const x=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,u),n.texture.generateMipmaps=x,e.setRenderTarget(n,5,i),e.render(t,c),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Eh extends Wn{constructor(e,t,n,i,r,o,a,l,u,c){e=e!==void 0?e:[],t=t!==void 0?t:Yr,super(e,t,n,i,r,o,a,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class hT extends er{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Cc("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===ko?Jn:mi),this.texture=new Eh(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Vn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Qa(5,5,5),r=new _r({name:"CubemapFromEquirect",uniforms:hu(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Fs,blending:zr});r.uniforms.tEquirect.value=t;const o=new es(i,r),a=t.minFilter;return t.minFilter===Uo&&(t.minFilter=Vn),new cT(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}const Sm=new U,ck=new U,hk=new $t;class To{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Sm.subVectors(n,t).cross(ck.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Sm),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||hk.getNormalMatrix(e),i=this.coplanarPoint(Sm).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ra=new Is,bd=new U;class Ah{constructor(e=new To,t=new To,n=new To,i=new To,r=new To,o=new To){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Qi){const n=this.planes,i=e.elements,r=i[0],o=i[1],a=i[2],l=i[3],u=i[4],c=i[5],h=i[6],d=i[7],f=i[8],p=i[9],x=i[10],m=i[11],g=i[12],y=i[13],v=i[14],w=i[15];if(n[0].setComponents(l-r,d-u,m-f,w-g).normalize(),n[1].setComponents(l+r,d+u,m+f,w+g).normalize(),n[2].setComponents(l+o,d+c,m+p,w+y).normalize(),n[3].setComponents(l-o,d-c,m-p,w-y).normalize(),n[4].setComponents(l-a,d-h,m-x,w-v).normalize(),t===Qi)n[5].setComponents(l+a,d+h,m+x,w+v).normalize();else if(t===uu)n[5].setComponents(a,h,x,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ra.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ra.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ra)}intersectsSprite(e){return ra.center.set(0,0,0),ra.radius=.7071067811865476,ra.applyMatrix4(e.matrixWorld),this.intersectsSphere(ra)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(bd.x=i.normal.x>0?e.max.x:e.min.x,bd.y=i.normal.y>0?e.max.y:e.min.y,bd.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(bd)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function dT(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function dk(s,e){const t=e.isWebGL2,n=new WeakMap;function i(u,c){const h=u.array,d=u.usage,f=h.byteLength,p=s.createBuffer();s.bindBuffer(c,p),s.bufferData(c,h,d),u.onUploadCallback();let x;if(h instanceof Float32Array)x=s.FLOAT;else if(h instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)x=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else x=s.UNSIGNED_SHORT;else if(h instanceof Int16Array)x=s.SHORT;else if(h instanceof Uint32Array)x=s.UNSIGNED_INT;else if(h instanceof Int32Array)x=s.INT;else if(h instanceof Int8Array)x=s.BYTE;else if(h instanceof Uint8Array)x=s.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)x=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:p,type:x,bytesPerElement:h.BYTES_PER_ELEMENT,version:u.version,size:f}}function r(u,c,h){const d=c.array,f=c._updateRange,p=c.updateRanges;if(s.bindBuffer(h,u),f.count===-1&&p.length===0&&s.bufferSubData(h,0,d),p.length!==0){for(let x=0,m=p.length;x<m;x++){const g=p[x];t?s.bufferSubData(h,g.start*d.BYTES_PER_ELEMENT,d,g.start,g.count):s.bufferSubData(h,g.start*d.BYTES_PER_ELEMENT,d.subarray(g.start,g.start+g.count))}c.clearUpdateRanges()}f.count!==-1&&(t?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1),c.onUploadCallback()}function o(u){return u.isInterleavedBufferAttribute&&(u=u.data),n.get(u)}function a(u){u.isInterleavedBufferAttribute&&(u=u.data);const c=n.get(u);c&&(s.deleteBuffer(c.buffer),n.delete(u))}function l(u,c){if(u.isGLBufferAttribute){const d=n.get(u);(!d||d.version<u.version)&&n.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const h=n.get(u);if(h===void 0)n.set(u,i(u,c));else if(h.version<u.version){if(h.size!==u.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(h.buffer,u,c),h.version=u.version}}return{get:o,remove:a,update:l}}class Ih extends Ot{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),u=a+1,c=l+1,h=e/a,d=t/l,f=[],p=[],x=[],m=[];for(let g=0;g<c;g++){const y=g*d-o;for(let v=0;v<u;v++){const w=v*h-r;p.push(w,-y,0),x.push(0,0,1),m.push(v/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let y=0;y<a;y++){const v=y+u*g,w=y+u*(g+1),_=y+1+u*(g+1),T=y+1+u*g;f.push(v,w,T),f.push(w,_,T)}this.setIndex(f),this.setAttribute("position",new et(p,3)),this.setAttribute("normal",new et(x,3)),this.setAttribute("uv",new et(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ih(e.width,e.height,e.widthSegments,e.heightSegments)}}var fk=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,pk=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,mk=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,gk=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xk=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,yk=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,bk=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,vk=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,wk=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Sk=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,_k=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Ck=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Tk=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Ek=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Ak=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Ik=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Rk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Mk=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Nk=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Pk=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kk=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,$k=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Dk=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Lk=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Ok=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Fk=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Uk=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Bk=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,zk=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Vk=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Wk="gl_FragColor = linearToOutputTexel( gl_FragColor );",Gk=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Hk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Xk=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,qk=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Kk=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,jk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Yk=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Zk=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Jk=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Qk=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,e3=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,t3=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,n3=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,s3=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,i3=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,r3=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,o3=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,a3=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,l3=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,u3=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,c3=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,h3=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,d3=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,f3=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,p3=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,m3=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,g3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,x3=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,y3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,b3=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,v3=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,w3=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,S3=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,_3=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,C3=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,T3=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,E3=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,A3=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,I3=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,R3=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,M3=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,N3=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,P3=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,k3=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$3=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,D3=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,L3=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,O3=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,F3=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,U3=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,B3=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,z3=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,V3=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,W3=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,G3=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,H3=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,X3=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,q3=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,K3=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,j3=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Y3=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Z3=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,J3=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Q3=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,e$=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,t$=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,n$=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,s$=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,i$=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,r$=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,o$=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,a$=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,l$=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,u$=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,c$=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,h$=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const d$=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,f$=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,p$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,m$=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,g$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,x$=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,y$=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,b$=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,v$=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,w$=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,S$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,_$=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,C$=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,T$=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,E$=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,A$=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,I$=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,R$=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,M$=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,N$=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,P$=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,k$=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,$$=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,D$=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,L$=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,O$=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,F$=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,U$=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,B$=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,z$=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,V$=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,W$=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,G$=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,H$=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Rt={alphahash_fragment:fk,alphahash_pars_fragment:pk,alphamap_fragment:mk,alphamap_pars_fragment:gk,alphatest_fragment:xk,alphatest_pars_fragment:yk,aomap_fragment:bk,aomap_pars_fragment:vk,batching_pars_vertex:wk,batching_vertex:Sk,begin_vertex:_k,beginnormal_vertex:Ck,bsdfs:Tk,iridescence_fragment:Ek,bumpmap_pars_fragment:Ak,clipping_planes_fragment:Ik,clipping_planes_pars_fragment:Rk,clipping_planes_pars_vertex:Mk,clipping_planes_vertex:Nk,color_fragment:Pk,color_pars_fragment:kk,color_pars_vertex:$k,color_vertex:Dk,common:Lk,cube_uv_reflection_fragment:Ok,defaultnormal_vertex:Fk,displacementmap_pars_vertex:Uk,displacementmap_vertex:Bk,emissivemap_fragment:zk,emissivemap_pars_fragment:Vk,colorspace_fragment:Wk,colorspace_pars_fragment:Gk,envmap_fragment:Hk,envmap_common_pars_fragment:Xk,envmap_pars_fragment:qk,envmap_pars_vertex:Kk,envmap_physical_pars_fragment:o3,envmap_vertex:jk,fog_vertex:Yk,fog_pars_vertex:Zk,fog_fragment:Jk,fog_pars_fragment:Qk,gradientmap_pars_fragment:e3,lightmap_fragment:t3,lightmap_pars_fragment:n3,lights_lambert_fragment:s3,lights_lambert_pars_fragment:i3,lights_pars_begin:r3,lights_toon_fragment:a3,lights_toon_pars_fragment:l3,lights_phong_fragment:u3,lights_phong_pars_fragment:c3,lights_physical_fragment:h3,lights_physical_pars_fragment:d3,lights_fragment_begin:f3,lights_fragment_maps:p3,lights_fragment_end:m3,logdepthbuf_fragment:g3,logdepthbuf_pars_fragment:x3,logdepthbuf_pars_vertex:y3,logdepthbuf_vertex:b3,map_fragment:v3,map_pars_fragment:w3,map_particle_fragment:S3,map_particle_pars_fragment:_3,metalnessmap_fragment:C3,metalnessmap_pars_fragment:T3,morphcolor_vertex:E3,morphnormal_vertex:A3,morphtarget_pars_vertex:I3,morphtarget_vertex:R3,normal_fragment_begin:M3,normal_fragment_maps:N3,normal_pars_fragment:P3,normal_pars_vertex:k3,normal_vertex:$3,normalmap_pars_fragment:D3,clearcoat_normal_fragment_begin:L3,clearcoat_normal_fragment_maps:O3,clearcoat_pars_fragment:F3,iridescence_pars_fragment:U3,opaque_fragment:B3,packing:z3,premultiplied_alpha_fragment:V3,project_vertex:W3,dithering_fragment:G3,dithering_pars_fragment:H3,roughnessmap_fragment:X3,roughnessmap_pars_fragment:q3,shadowmap_pars_fragment:K3,shadowmap_pars_vertex:j3,shadowmap_vertex:Y3,shadowmask_pars_fragment:Z3,skinbase_vertex:J3,skinning_pars_vertex:Q3,skinning_vertex:e$,skinnormal_vertex:t$,specularmap_fragment:n$,specularmap_pars_fragment:s$,tonemapping_fragment:i$,tonemapping_pars_fragment:r$,transmission_fragment:o$,transmission_pars_fragment:a$,uv_pars_fragment:l$,uv_pars_vertex:u$,uv_vertex:c$,worldpos_vertex:h$,background_vert:d$,background_frag:f$,backgroundCube_vert:p$,backgroundCube_frag:m$,cube_vert:g$,cube_frag:x$,depth_vert:y$,depth_frag:b$,distanceRGBA_vert:v$,distanceRGBA_frag:w$,equirect_vert:S$,equirect_frag:_$,linedashed_vert:C$,linedashed_frag:T$,meshbasic_vert:E$,meshbasic_frag:A$,meshlambert_vert:I$,meshlambert_frag:R$,meshmatcap_vert:M$,meshmatcap_frag:N$,meshnormal_vert:P$,meshnormal_frag:k$,meshphong_vert:$$,meshphong_frag:D$,meshphysical_vert:L$,meshphysical_frag:O$,meshtoon_vert:F$,meshtoon_frag:U$,points_vert:B$,points_frag:z$,shadow_vert:V$,shadow_frag:W$,sprite_vert:G$,sprite_frag:H$},Le={common:{diffuse:{value:new Xe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new $t},alphaMap:{value:null},alphaMapTransform:{value:new $t},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new $t}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new $t}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new $t}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new $t},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new $t},normalScale:{value:new me(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new $t},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new $t}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new $t}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new $t}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new $t},alphaTest:{value:0},uvTransform:{value:new $t}},sprite:{diffuse:{value:new Xe(16777215)},opacity:{value:1},center:{value:new me(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new $t},alphaMap:{value:null},alphaMapTransform:{value:new $t},alphaTest:{value:0}}},qi={basic:{uniforms:Ls([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.fog]),vertexShader:Rt.meshbasic_vert,fragmentShader:Rt.meshbasic_frag},lambert:{uniforms:Ls([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)}}]),vertexShader:Rt.meshlambert_vert,fragmentShader:Rt.meshlambert_frag},phong:{uniforms:Ls([Le.common,Le.specularmap,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)},specular:{value:new Xe(1118481)},shininess:{value:30}}]),vertexShader:Rt.meshphong_vert,fragmentShader:Rt.meshphong_frag},standard:{uniforms:Ls([Le.common,Le.envmap,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.roughnessmap,Le.metalnessmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Rt.meshphysical_vert,fragmentShader:Rt.meshphysical_frag},toon:{uniforms:Ls([Le.common,Le.aomap,Le.lightmap,Le.emissivemap,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.gradientmap,Le.fog,Le.lights,{emissive:{value:new Xe(0)}}]),vertexShader:Rt.meshtoon_vert,fragmentShader:Rt.meshtoon_frag},matcap:{uniforms:Ls([Le.common,Le.bumpmap,Le.normalmap,Le.displacementmap,Le.fog,{matcap:{value:null}}]),vertexShader:Rt.meshmatcap_vert,fragmentShader:Rt.meshmatcap_frag},points:{uniforms:Ls([Le.points,Le.fog]),vertexShader:Rt.points_vert,fragmentShader:Rt.points_frag},dashed:{uniforms:Ls([Le.common,Le.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Rt.linedashed_vert,fragmentShader:Rt.linedashed_frag},depth:{uniforms:Ls([Le.common,Le.displacementmap]),vertexShader:Rt.depth_vert,fragmentShader:Rt.depth_frag},normal:{uniforms:Ls([Le.common,Le.bumpmap,Le.normalmap,Le.displacementmap,{opacity:{value:1}}]),vertexShader:Rt.meshnormal_vert,fragmentShader:Rt.meshnormal_frag},sprite:{uniforms:Ls([Le.sprite,Le.fog]),vertexShader:Rt.sprite_vert,fragmentShader:Rt.sprite_frag},background:{uniforms:{uvTransform:{value:new $t},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Rt.background_vert,fragmentShader:Rt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Rt.backgroundCube_vert,fragmentShader:Rt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Rt.cube_vert,fragmentShader:Rt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Rt.equirect_vert,fragmentShader:Rt.equirect_frag},distanceRGBA:{uniforms:Ls([Le.common,Le.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Rt.distanceRGBA_vert,fragmentShader:Rt.distanceRGBA_frag},shadow:{uniforms:Ls([Le.lights,Le.fog,{color:{value:new Xe(0)},opacity:{value:1}}]),vertexShader:Rt.shadow_vert,fragmentShader:Rt.shadow_frag}};qi.physical={uniforms:Ls([qi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new $t},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new $t},clearcoatNormalScale:{value:new me(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new $t},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new $t},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new $t},sheen:{value:0},sheenColor:{value:new Xe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new $t},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new $t},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new $t},transmissionSamplerSize:{value:new me},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new $t},attenuationDistance:{value:0},attenuationColor:{value:new Xe(0)},specularColor:{value:new Xe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new $t},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new $t},anisotropyVector:{value:new me},anisotropyMap:{value:null},anisotropyMapTransform:{value:new $t}}]),vertexShader:Rt.meshphysical_vert,fragmentShader:Rt.meshphysical_frag};const vd={r:0,b:0,g:0};function X$(s,e,t,n,i,r,o){const a=new Xe(0);let l=r===!0?0:1,u,c,h=null,d=0,f=null;function p(m,g){let y=!1,v=g.isScene===!0?g.background:null;v&&v.isTexture&&(v=(g.backgroundBlurriness>0?t:e).get(v)),v===null?x(a,l):v&&v.isColor&&(x(v,1),y=!0);const w=s.xr.getEnvironmentBlendMode();w==="additive"?n.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||y)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),v&&(v.isCubeTexture||v.mapping===Iu)?(c===void 0&&(c=new es(new Qa(1,1,1),new _r({name:"BackgroundCubeMaterial",uniforms:hu(qi.backgroundCube.uniforms),vertexShader:qi.backgroundCube.vertexShader,fragmentShader:qi.backgroundCube.fragmentShader,side:Fs,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(_,T,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=Qt.getTransfer(v.colorSpace)!==gn,(h!==v||d!==v.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(u===void 0&&(u=new es(new Ih(2,2),new _r({name:"BackgroundMaterial",uniforms:hu(qi.background.uniforms),vertexShader:qi.background.vertexShader,fragmentShader:qi.background.fragmentShader,side:jr,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(u)),u.material.uniforms.t2D.value=v,u.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,u.material.toneMapped=Qt.getTransfer(v.colorSpace)!==gn,v.matrixAutoUpdate===!0&&v.updateMatrix(),u.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||d!==v.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=v,d=v.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null))}function x(m,g){m.getRGB(vd,lT(s)),n.buffers.color.setClear(vd.r,vd.g,vd.b,g,o)}return{getClearColor:function(){return a},setClearColor:function(m,g=1){a.set(m),l=g,x(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,x(a,l)},render:p}}function q$(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let u=l,c=!1;function h(O,H,Z,ee,ce){let ne=!1;if(o){const fe=x(ee,Z,H);u!==fe&&(u=fe,f(u.object)),ne=g(O,ee,Z,ce),ne&&y(O,ee,Z,ce)}else{const fe=H.wireframe===!0;(u.geometry!==ee.id||u.program!==Z.id||u.wireframe!==fe)&&(u.geometry=ee.id,u.program=Z.id,u.wireframe=fe,ne=!0)}ce!==null&&t.update(ce,s.ELEMENT_ARRAY_BUFFER),(ne||c)&&(c=!1,M(O,H,Z,ee),ce!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(ce).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(O){return n.isWebGL2?s.bindVertexArray(O):r.bindVertexArrayOES(O)}function p(O){return n.isWebGL2?s.deleteVertexArray(O):r.deleteVertexArrayOES(O)}function x(O,H,Z){const ee=Z.wireframe===!0;let ce=a[O.id];ce===void 0&&(ce={},a[O.id]=ce);let ne=ce[H.id];ne===void 0&&(ne={},ce[H.id]=ne);let fe=ne[ee];return fe===void 0&&(fe=m(d()),ne[ee]=fe),fe}function m(O){const H=[],Z=[],ee=[];for(let ce=0;ce<i;ce++)H[ce]=0,Z[ce]=0,ee[ce]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:H,enabledAttributes:Z,attributeDivisors:ee,object:O,attributes:{},index:null}}function g(O,H,Z,ee){const ce=u.attributes,ne=H.attributes;let fe=0;const pe=Z.getAttributes();for(const Oe in pe)if(pe[Oe].location>=0){const ge=ce[Oe];let Fe=ne[Oe];if(Fe===void 0&&(Oe==="instanceMatrix"&&O.instanceMatrix&&(Fe=O.instanceMatrix),Oe==="instanceColor"&&O.instanceColor&&(Fe=O.instanceColor)),ge===void 0||ge.attribute!==Fe||Fe&&ge.data!==Fe.data)return!0;fe++}return u.attributesNum!==fe||u.index!==ee}function y(O,H,Z,ee){const ce={},ne=H.attributes;let fe=0;const pe=Z.getAttributes();for(const Oe in pe)if(pe[Oe].location>=0){let ge=ne[Oe];ge===void 0&&(Oe==="instanceMatrix"&&O.instanceMatrix&&(ge=O.instanceMatrix),Oe==="instanceColor"&&O.instanceColor&&(ge=O.instanceColor));const Fe={};Fe.attribute=ge,ge&&ge.data&&(Fe.data=ge.data),ce[Oe]=Fe,fe++}u.attributes=ce,u.attributesNum=fe,u.index=ee}function v(){const O=u.newAttributes;for(let H=0,Z=O.length;H<Z;H++)O[H]=0}function w(O){_(O,0)}function _(O,H){const Z=u.newAttributes,ee=u.enabledAttributes,ce=u.attributeDivisors;Z[O]=1,ee[O]===0&&(s.enableVertexAttribArray(O),ee[O]=1),ce[O]!==H&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,H),ce[O]=H)}function T(){const O=u.newAttributes,H=u.enabledAttributes;for(let Z=0,ee=H.length;Z<ee;Z++)H[Z]!==O[Z]&&(s.disableVertexAttribArray(Z),H[Z]=0)}function A(O,H,Z,ee,ce,ne,fe){fe===!0?s.vertexAttribIPointer(O,H,Z,ce,ne):s.vertexAttribPointer(O,H,Z,ee,ce,ne)}function M(O,H,Z,ee){if(n.isWebGL2===!1&&(O.isInstancedMesh||ee.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;v();const ce=ee.attributes,ne=Z.getAttributes(),fe=H.defaultAttributeValues;for(const pe in ne){const Oe=ne[pe];if(Oe.location>=0){let le=ce[pe];if(le===void 0&&(pe==="instanceMatrix"&&O.instanceMatrix&&(le=O.instanceMatrix),pe==="instanceColor"&&O.instanceColor&&(le=O.instanceColor)),le!==void 0){const ge=le.normalized,Fe=le.itemSize,Qe=t.get(le);if(Qe===void 0)continue;const Ye=Qe.buffer,dt=Qe.type,xt=Qe.bytesPerElement,nt=n.isWebGL2===!0&&(dt===s.INT||dt===s.UNSIGNED_INT||le.gpuType===ey);if(le.isInterleavedBufferAttribute){const rt=le.data,X=rt.stride,ye=le.offset;if(rt.isInstancedInterleavedBuffer){for(let ue=0;ue<Oe.locationSize;ue++)_(Oe.location+ue,rt.meshPerAttribute);O.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=rt.meshPerAttribute*rt.count)}else for(let ue=0;ue<Oe.locationSize;ue++)w(Oe.location+ue);s.bindBuffer(s.ARRAY_BUFFER,Ye);for(let ue=0;ue<Oe.locationSize;ue++)A(Oe.location+ue,Fe/Oe.locationSize,dt,ge,X*xt,(ye+Fe/Oe.locationSize*ue)*xt,nt)}else{if(le.isInstancedBufferAttribute){for(let rt=0;rt<Oe.locationSize;rt++)_(Oe.location+rt,le.meshPerAttribute);O.isInstancedMesh!==!0&&ee._maxInstanceCount===void 0&&(ee._maxInstanceCount=le.meshPerAttribute*le.count)}else for(let rt=0;rt<Oe.locationSize;rt++)w(Oe.location+rt);s.bindBuffer(s.ARRAY_BUFFER,Ye);for(let rt=0;rt<Oe.locationSize;rt++)A(Oe.location+rt,Fe/Oe.locationSize,dt,ge,Fe*xt,Fe/Oe.locationSize*rt*xt,nt)}}else if(fe!==void 0){const ge=fe[pe];if(ge!==void 0)switch(ge.length){case 2:s.vertexAttrib2fv(Oe.location,ge);break;case 3:s.vertexAttrib3fv(Oe.location,ge);break;case 4:s.vertexAttrib4fv(Oe.location,ge);break;default:s.vertexAttrib1fv(Oe.location,ge)}}}}T()}function C(){W();for(const O in a){const H=a[O];for(const Z in H){const ee=H[Z];for(const ce in ee)p(ee[ce].object),delete ee[ce];delete H[Z]}delete a[O]}}function R(O){if(a[O.id]===void 0)return;const H=a[O.id];for(const Z in H){const ee=H[Z];for(const ce in ee)p(ee[ce].object),delete ee[ce];delete H[Z]}delete a[O.id]}function $(O){for(const H in a){const Z=a[H];if(Z[O.id]===void 0)continue;const ee=Z[O.id];for(const ce in ee)p(ee[ce].object),delete ee[ce];delete Z[O.id]}}function W(){q(),c=!0,u!==l&&(u=l,f(u.object))}function q(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:W,resetDefaultState:q,dispose:C,releaseStatesOfGeometry:R,releaseStatesOfProgram:$,initAttributes:v,enableAttribute:w,disableUnusedAttributes:T}}function K$(s,e,t,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,h){s.drawArrays(r,c,h),t.update(h,r,1)}function l(c,h,d){if(d===0)return;let f,p;if(i)f=s,p="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](r,c,h,d),t.update(h,r,d)}function u(c,h,d){if(d===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<d;p++)this.render(c[p],h[p]);else{f.multiDrawArraysWEBGL(r,c,0,h,0,d);let p=0;for(let x=0;x<d;x++)p+=h[x];t.update(p,r,1)}}this.setMode=o,this.render=a,this.renderInstances=l,this.renderMultiDraw=u}function j$(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(A){if(A==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const u=o||e.has("WEBGL_draw_buffers"),c=t.logarithmicDepthBuffer===!0,h=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),d=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),f=s.getParameter(s.MAX_TEXTURE_SIZE),p=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),x=s.getParameter(s.MAX_VERTEX_ATTRIBS),m=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),g=s.getParameter(s.MAX_VARYING_VECTORS),y=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),v=d>0,w=o||e.has("OES_texture_float"),_=v&&w,T=o?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:u,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:x,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:w,floatVertexTextures:_,maxSamples:T}}function Y$(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new To,a=new $t,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||i;return i=d,n=h.length,f},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=c(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,x=h.clipIntersection,m=h.clipShadows,g=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?c(null):u();else{const y=r?0:n,v=y*4;let w=g.clippingState||null;l.value=w,w=c(p,d,v,f);for(let _=0;_!==v;++_)w[_]=t[_];g.clippingState=w,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=y}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(h,d,f,p){const x=h!==null?h.length:0;let m=null;if(x!==0){if(m=l.value,p!==!0||m===null){const g=f+x*4,y=d.matrixWorldInverse;a.getNormalMatrix(y),(m===null||m.length<g)&&(m=new Float32Array(g));for(let v=0,w=f;v!==x;++v,w+=4)o.copy(h[v]).applyMatrix4(y,a),o.normal.toArray(m,w),m[w+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,m}}function Z$(s){let e=new WeakMap;function t(o,a){return a===Oc?o.mapping=Yr:a===Fc&&(o.mapping=Fo),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===Oc||a===Fc)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const u=new hT(l.height/2);return u.fromEquirectangularTexture(s,o),e.set(o,u),o.addEventListener("dispose",i),t(u.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class np extends tp{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=u*this.view.offsetX,o=r+u*this.view.width,a-=c*this.view.offsetY,l=a-c*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ql=4,T1=[.125,.215,.35,.446,.526,.582],ya=20,_m=new np,E1=new Xe;let Cm=null,Tm=0,Em=0;const ma=(1+Math.sqrt(5))/2,Ll=1/ma,A1=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,ma,Ll),new U(0,ma,-Ll),new U(Ll,0,ma),new U(-Ll,0,ma),new U(ma,Ll,0),new U(-ma,Ll,0)];class Jg{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Cm=this._renderer.getRenderTarget(),Tm=this._renderer.getActiveCubeFace(),Em=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=M1(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=R1(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Cm,Tm,Em),e.scissorTest=!1,wd(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Yr||e.mapping===Fo?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Cm=this._renderer.getRenderTarget(),Tm=this._renderer.getActiveCubeFace(),Em=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Vn,minFilter:Vn,generateMipmaps:!1,type:lu,format:ei,colorSpace:Sr,depthBuffer:!1},i=I1(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=I1(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=J$(r)),this._blurMaterial=Q$(r,e,t)}return i}_compileMaterial(e){const t=new es(this._lodPlanes[0],e);this._renderer.compile(t,_m)}_sceneToCubeUV(e,t,n,i){const a=new as(90,1,t,n),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],c=this._renderer,h=c.autoClear,d=c.toneMapping;c.getClearColor(E1),c.toneMapping=Vr,c.autoClear=!1;const f=new Xo({name:"PMREM.Background",side:Fs,depthWrite:!1,depthTest:!1}),p=new es(new Qa,f);let x=!1;const m=e.background;m?m.isColor&&(f.color.copy(m),e.background=null,x=!0):(f.color.copy(E1),x=!0);for(let g=0;g<6;g++){const y=g%3;y===0?(a.up.set(0,l[g],0),a.lookAt(u[g],0,0)):y===1?(a.up.set(0,0,l[g]),a.lookAt(0,u[g],0)):(a.up.set(0,l[g],0),a.lookAt(0,0,u[g]));const v=this._cubeSize;wd(i,y*v,g>2?v:0,v,v),c.setRenderTarget(i),x&&c.render(p,a),c.render(e,a)}p.geometry.dispose(),p.material.dispose(),c.toneMapping=d,c.autoClear=h,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Yr||e.mapping===Fo;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=M1()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=R1());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new es(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const l=this._cubeSize;wd(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,_m)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=A1[(i-1)%A1.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const l=this._renderer,u=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,h=new es(this._lodPlanes[i],u),d=u.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*ya-1),x=r/p,m=isFinite(r)?1+Math.floor(c*x):ya;m>ya&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ya}`);const g=[];let y=0;for(let A=0;A<ya;++A){const M=A/x,C=Math.exp(-M*M/2);g.push(C),A===0?y+=C:A<m&&(y+=2*C)}for(let A=0;A<g.length;A++)g[A]=g[A]/y;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-n;const w=this._sizeLods[i],_=3*w*(i>v-Ql?i-v+Ql:0),T=4*(this._cubeSize-w);wd(t,_,T,3*w,2*w),l.setRenderTarget(t),l.render(h,_m)}}function J$(s){const e=[],t=[],n=[];let i=s;const r=s-Ql+1+T1.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>s-Ql?l=T1[o-s+Ql-1]:o===0&&(l=0),n.push(l);const u=1/(a-2),c=-u,h=1+u,d=[c,c,h,c,h,h,c,c,h,h,c,h],f=6,p=6,x=3,m=2,g=1,y=new Float32Array(x*p*f),v=new Float32Array(m*p*f),w=new Float32Array(g*p*f);for(let T=0;T<f;T++){const A=T%3*2/3-1,M=T>2?0:-1,C=[A,M,0,A+2/3,M,0,A+2/3,M+1,0,A,M,0,A+2/3,M+1,0,A,M+1,0];y.set(C,x*p*T),v.set(d,m*p*T);const R=[T,T,T,T,T,T];w.set(R,g*p*T)}const _=new Ot;_.setAttribute("position",new on(y,x)),_.setAttribute("uv",new on(v,m)),_.setAttribute("faceIndex",new on(w,g)),e.push(_),i>Ql&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function I1(s,e,t){const n=new er(s,e,t);return n.texture.mapping=Iu,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function wd(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function Q$(s,e,t){const n=new Float32Array(ya),i=new U(0,1,0);return new _r({name:"SphericalGaussianBlur",defines:{n:ya,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:my(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:zr,depthTest:!1,depthWrite:!1})}function R1(){return new _r({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:my(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:zr,depthTest:!1,depthWrite:!1})}function M1(){return new _r({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:my(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:zr,depthTest:!1,depthWrite:!1})}function my(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function eD(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,u=l===Oc||l===Fc,c=l===Yr||l===Fo;if(u||c)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new Jg(s)),h=u?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(u&&h&&h.height>0||c&&h&&i(h)){t===null&&(t=new Jg(s));const d=u?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const u=6;for(let c=0;c<u;c++)a[c]!==void 0&&l++;return l===u}function r(a){const l=a.target;l.removeEventListener("dispose",r);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function tD(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function nD(s,e,t,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);for(const p in d.morphAttributes){const x=d.morphAttributes[p];for(let m=0,g=x.length;m<g;m++)e.remove(x[m])}d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)e.update(d[p],s.ARRAY_BUFFER);const f=h.morphAttributes;for(const p in f){const x=f[p];for(let m=0,g=x.length;m<g;m++)e.update(x[m],s.ARRAY_BUFFER)}}function u(h){const d=[],f=h.index,p=h.attributes.position;let x=0;if(f!==null){const y=f.array;x=f.version;for(let v=0,w=y.length;v<w;v+=3){const _=y[v+0],T=y[v+1],A=y[v+2];d.push(_,T,T,A,A,_)}}else if(p!==void 0){const y=p.array;x=p.version;for(let v=0,w=y.length/3-1;v<w;v+=3){const _=v+0,T=v+1,A=v+2;d.push(_,T,T,A,A,_)}}else return;const m=new(iT(d)?py:fy)(d,1);m.version=x;const g=r.get(h);g&&e.remove(g),r.set(h,m)}function c(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&u(h)}else u(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:c}}function sD(s,e,t,n){const i=n.isWebGL2;let r;function o(f){r=f}let a,l;function u(f){a=f.type,l=f.bytesPerElement}function c(f,p){s.drawElements(r,p,a,f*l),t.update(p,r,1)}function h(f,p,x){if(x===0)return;let m,g;if(i)m=s,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,p,a,f*l,x),t.update(p,r,x)}function d(f,p,x){if(x===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<x;g++)this.render(f[g]/l,p[g]);else{m.multiDrawElementsWEBGL(r,p,0,a,f,0,x);let g=0;for(let y=0;y<x;y++)g+=p[y];t.update(g,r,1)}}this.setMode=o,this.setIndex=u,this.render=c,this.renderInstances=h,this.renderMultiDraw=d}function iD(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function rD(s,e){return s[0]-e[0]}function oD(s,e){return Math.abs(e[1])-Math.abs(s[1])}function aD(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new rn,a=[];for(let u=0;u<8;u++)a[u]=[u,0];function l(u,c,h){const d=u.morphTargetInfluences;if(e.isWebGL2===!0){const f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let x=r.get(c);if(x===void 0||x.count!==p){let O=function(){W.dispose(),r.delete(c),c.removeEventListener("dispose",O)};x!==void 0&&x.texture.dispose();const y=c.morphAttributes.position!==void 0,v=c.morphAttributes.normal!==void 0,w=c.morphAttributes.color!==void 0,_=c.morphAttributes.position||[],T=c.morphAttributes.normal||[],A=c.morphAttributes.color||[];let M=0;y===!0&&(M=1),v===!0&&(M=2),w===!0&&(M=3);let C=c.attributes.position.count*M,R=1;C>e.maxTextureSize&&(R=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const $=new Float32Array(C*R*4*p),W=new Qf($,C,R,p);W.type=Ji,W.needsUpdate=!0;const q=M*4;for(let H=0;H<p;H++){const Z=_[H],ee=T[H],ce=A[H],ne=C*R*4*H;for(let fe=0;fe<Z.count;fe++){const pe=fe*q;y===!0&&(o.fromBufferAttribute(Z,fe),$[ne+pe+0]=o.x,$[ne+pe+1]=o.y,$[ne+pe+2]=o.z,$[ne+pe+3]=0),v===!0&&(o.fromBufferAttribute(ee,fe),$[ne+pe+4]=o.x,$[ne+pe+5]=o.y,$[ne+pe+6]=o.z,$[ne+pe+7]=0),w===!0&&(o.fromBufferAttribute(ce,fe),$[ne+pe+8]=o.x,$[ne+pe+9]=o.y,$[ne+pe+10]=o.z,$[ne+pe+11]=ce.itemSize===4?o.w:1)}}x={count:p,texture:W,size:new me(C,R)},r.set(c,x),c.addEventListener("dispose",O)}let m=0;for(let y=0;y<d.length;y++)m+=d[y];const g=c.morphTargetsRelative?1:1-m;h.getUniforms().setValue(s,"morphTargetBaseInfluence",g),h.getUniforms().setValue(s,"morphTargetInfluences",d),h.getUniforms().setValue(s,"morphTargetsTexture",x.texture,t),h.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const f=d===void 0?0:d.length;let p=n[c.id];if(p===void 0||p.length!==f){p=[];for(let v=0;v<f;v++)p[v]=[v,0];n[c.id]=p}for(let v=0;v<f;v++){const w=p[v];w[0]=v,w[1]=d[v]}p.sort(oD);for(let v=0;v<8;v++)v<f&&p[v][1]?(a[v][0]=p[v][0],a[v][1]=p[v][1]):(a[v][0]=Number.MAX_SAFE_INTEGER,a[v][1]=0);a.sort(rD);const x=c.morphAttributes.position,m=c.morphAttributes.normal;let g=0;for(let v=0;v<8;v++){const w=a[v],_=w[0],T=w[1];_!==Number.MAX_SAFE_INTEGER&&T?(x&&c.getAttribute("morphTarget"+v)!==x[_]&&c.setAttribute("morphTarget"+v,x[_]),m&&c.getAttribute("morphNormal"+v)!==m[_]&&c.setAttribute("morphNormal"+v,m[_]),i[v]=T,g+=T):(x&&c.hasAttribute("morphTarget"+v)===!0&&c.deleteAttribute("morphTarget"+v),m&&c.hasAttribute("morphNormal"+v)===!0&&c.deleteAttribute("morphNormal"+v),i[v]=0)}const y=c.morphTargetsRelative?1:1-g;h.getUniforms().setValue(s,"morphTargetBaseInfluence",y),h.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function lD(s,e,t,n){let i=new WeakMap;function r(l){const u=n.render.frame,c=l.geometry,h=e.get(l,c);if(i.get(h)!==u&&(e.update(h),i.set(h,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==u&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,u))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==u&&(d.update(),i.set(d,u))}return h}function o(){i=new WeakMap}function a(l){const u=l.target;u.removeEventListener("dispose",a),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:r,dispose:o}}class gy extends Wn{constructor(e,t,n,i,r,o,a,l,u,c){if(c=c!==void 0?c:Po,c!==Po&&c!==Ba)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===Po&&(n=Br),n===void 0&&c===Ba&&(n=No),super(null,i,r,o,a,l,c,n,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:zn,this.minFilter=l!==void 0?l:zn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const fT=new Wn,pT=new gy(1,1);pT.compareFunction=uy;const mT=new Qf,gT=new dy,xT=new Eh,N1=[],P1=[],k1=new Float32Array(16),$1=new Float32Array(9),D1=new Float32Array(4);function Mu(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=N1[i];if(r===void 0&&(r=new Float32Array(i),N1[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function ns(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function ss(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function sp(s,e){let t=P1[e];t===void 0&&(t=new Int32Array(e),P1[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function uD(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function cD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ns(t,e))return;s.uniform2fv(this.addr,e),ss(t,e)}}function hD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ns(t,e))return;s.uniform3fv(this.addr,e),ss(t,e)}}function dD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ns(t,e))return;s.uniform4fv(this.addr,e),ss(t,e)}}function fD(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ns(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),ss(t,e)}else{if(ns(t,n))return;D1.set(n),s.uniformMatrix2fv(this.addr,!1,D1),ss(t,n)}}function pD(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ns(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),ss(t,e)}else{if(ns(t,n))return;$1.set(n),s.uniformMatrix3fv(this.addr,!1,$1),ss(t,n)}}function mD(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(ns(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),ss(t,e)}else{if(ns(t,n))return;k1.set(n),s.uniformMatrix4fv(this.addr,!1,k1),ss(t,n)}}function gD(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function xD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ns(t,e))return;s.uniform2iv(this.addr,e),ss(t,e)}}function yD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ns(t,e))return;s.uniform3iv(this.addr,e),ss(t,e)}}function bD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ns(t,e))return;s.uniform4iv(this.addr,e),ss(t,e)}}function vD(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function wD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ns(t,e))return;s.uniform2uiv(this.addr,e),ss(t,e)}}function SD(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ns(t,e))return;s.uniform3uiv(this.addr,e),ss(t,e)}}function _D(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ns(t,e))return;s.uniform4uiv(this.addr,e),ss(t,e)}}function CD(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);const r=this.type===s.SAMPLER_2D_SHADOW?pT:fT;t.setTexture2D(e||r,i)}function TD(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||gT,i)}function ED(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||xT,i)}function AD(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||mT,i)}function ID(s){switch(s){case 5126:return uD;case 35664:return cD;case 35665:return hD;case 35666:return dD;case 35674:return fD;case 35675:return pD;case 35676:return mD;case 5124:case 35670:return gD;case 35667:case 35671:return xD;case 35668:case 35672:return yD;case 35669:case 35673:return bD;case 5125:return vD;case 36294:return wD;case 36295:return SD;case 36296:return _D;case 35678:case 36198:case 36298:case 36306:case 35682:return CD;case 35679:case 36299:case 36307:return TD;case 35680:case 36300:case 36308:case 36293:return ED;case 36289:case 36303:case 36311:case 36292:return AD}}function RD(s,e){s.uniform1fv(this.addr,e)}function MD(s,e){const t=Mu(e,this.size,2);s.uniform2fv(this.addr,t)}function ND(s,e){const t=Mu(e,this.size,3);s.uniform3fv(this.addr,t)}function PD(s,e){const t=Mu(e,this.size,4);s.uniform4fv(this.addr,t)}function kD(s,e){const t=Mu(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function $D(s,e){const t=Mu(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function DD(s,e){const t=Mu(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function LD(s,e){s.uniform1iv(this.addr,e)}function OD(s,e){s.uniform2iv(this.addr,e)}function FD(s,e){s.uniform3iv(this.addr,e)}function UD(s,e){s.uniform4iv(this.addr,e)}function BD(s,e){s.uniform1uiv(this.addr,e)}function zD(s,e){s.uniform2uiv(this.addr,e)}function VD(s,e){s.uniform3uiv(this.addr,e)}function WD(s,e){s.uniform4uiv(this.addr,e)}function GD(s,e,t){const n=this.cache,i=e.length,r=sp(t,i);ns(n,r)||(s.uniform1iv(this.addr,r),ss(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||fT,r[o])}function HD(s,e,t){const n=this.cache,i=e.length,r=sp(t,i);ns(n,r)||(s.uniform1iv(this.addr,r),ss(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||gT,r[o])}function XD(s,e,t){const n=this.cache,i=e.length,r=sp(t,i);ns(n,r)||(s.uniform1iv(this.addr,r),ss(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||xT,r[o])}function qD(s,e,t){const n=this.cache,i=e.length,r=sp(t,i);ns(n,r)||(s.uniform1iv(this.addr,r),ss(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||mT,r[o])}function KD(s){switch(s){case 5126:return RD;case 35664:return MD;case 35665:return ND;case 35666:return PD;case 35674:return kD;case 35675:return $D;case 35676:return DD;case 5124:case 35670:return LD;case 35667:case 35671:return OD;case 35668:case 35672:return FD;case 35669:case 35673:return UD;case 5125:return BD;case 36294:return zD;case 36295:return VD;case 36296:return WD;case 35678:case 36198:case 36298:case 36306:case 35682:return GD;case 35679:case 36299:case 36307:return HD;case 35680:case 36300:case 36308:case 36293:return XD;case 36289:case 36303:case 36311:case 36292:return qD}}class jD{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=ID(t.type)}}class YD{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=KD(t.type)}}class ZD{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Am=/(\w+)(\])?(\[|\.)?/g;function L1(s,e){s.seq.push(e),s.map[e.id]=e}function JD(s,e,t){const n=s.name,i=n.length;for(Am.lastIndex=0;;){const r=Am.exec(n),o=Am.lastIndex;let a=r[1];const l=r[2]==="]",u=r[3];if(l&&(a=a|0),u===void 0||u==="["&&o+2===i){L1(t,u===void 0?new jD(a,s,e):new YD(a,s,e));break}else{let h=t.map[a];h===void 0&&(h=new ZD(a),L1(t,h)),t=h}}}class cf{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);JD(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function O1(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const QD=37297;let eL=0;function tL(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function nL(s){const e=Qt.getPrimaries(Qt.workingColorSpace),t=Qt.getPrimaries(s);let n;switch(e===t?n="":e===Xc&&t===Hc?n="LinearDisplayP3ToLinearSRGB":e===Hc&&t===Xc&&(n="LinearSRGBToLinearDisplayP3"),s){case Sr:case Ch:return[n,"LinearTransferOETF"];case Jn:case Jf:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),[n,"LinearTransferOETF"]}}function F1(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+tL(s.getShaderSource(e),o)}else return i}function sL(s,e){const t=nL(e);return`vec4 ${s}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function iL(s,e){let t;switch(e){case P2:t="Linear";break;case k2:t="Reinhard";break;case $2:t="OptimizedCineon";break;case Jx:t="ACESFilmic";break;case D2:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function rL(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(gc).join(`
`)}function oL(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function aL(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function gc(s){return s!==""}function U1(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function B1(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lL=/^[ \t]*#include +<([\w\d./]+)>/gm;function Qg(s){return s.replace(lL,cL)}const uL=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function cL(s,e){let t=Rt[e];if(t===void 0){const n=uL.get(e);if(n!==void 0)t=Rt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Qg(t)}const hL=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function z1(s){return s.replace(hL,dL)}function dL(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function V1(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function fL(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Zx?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===Kf?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===lr&&(e="SHADOWMAP_TYPE_VSM"),e}function pL(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Yr:case Fo:e="ENVMAP_TYPE_CUBE";break;case Iu:e="ENVMAP_TYPE_CUBE_UV";break}return e}function mL(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Fo:e="ENVMAP_MODE_REFRACTION";break}return e}function gL(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case _h:e="ENVMAP_BLENDING_MULTIPLY";break;case M2:e="ENVMAP_BLENDING_MIX";break;case N2:e="ENVMAP_BLENDING_ADD";break}return e}function xL(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function yL(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=fL(t),u=pL(t),c=mL(t),h=gL(t),d=xL(t),f=t.isWebGL2?"":rL(t),p=oL(r),x=i.createProgram();let m,g,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(gc).join(`
`),m.length>0&&(m+=`
`),g=[f,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(gc).join(`
`),g.length>0&&(g+=`
`)):(m=[V1(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(gc).join(`
`),g=[f,V1(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Vr?"#define TONE_MAPPING":"",t.toneMapping!==Vr?Rt.tonemapping_pars_fragment:"",t.toneMapping!==Vr?iL("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Rt.colorspace_pars_fragment,sL("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(gc).join(`
`)),o=Qg(o),o=U1(o,t),o=B1(o,t),a=Qg(a),a=U1(a,t),a=B1(a,t),o=z1(o),a=z1(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===Yg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Yg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const v=y+m+o,w=y+g+a,_=O1(i,i.VERTEX_SHADER,v),T=O1(i,i.FRAGMENT_SHADER,w);i.attachShader(x,_),i.attachShader(x,T),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function A($){if(s.debug.checkShaderErrors){const W=i.getProgramInfoLog(x).trim(),q=i.getShaderInfoLog(_).trim(),O=i.getShaderInfoLog(T).trim();let H=!0,Z=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if(H=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,x,_,T);else{const ee=F1(i,_,"vertex"),ce=F1(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Program Info Log: `+W+`
`+ee+`
`+ce)}else W!==""?console.warn("THREE.WebGLProgram: Program Info Log:",W):(q===""||O==="")&&(Z=!1);Z&&($.diagnostics={runnable:H,programLog:W,vertexShader:{log:q,prefix:m},fragmentShader:{log:O,prefix:g}})}i.deleteShader(_),i.deleteShader(T),M=new cf(i,x),C=aL(i,x)}let M;this.getUniforms=function(){return M===void 0&&A(this),M};let C;this.getAttributes=function(){return C===void 0&&A(this),C};let R=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return R===!1&&(R=i.getProgramParameter(x,QD)),R},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=eL++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=_,this.fragmentShader=T,this}let bL=0;class vL{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new wL(e),t.set(e,n)),n}}class wL{constructor(e){this.id=bL++,this.code=e,this.usedTimes=0}}function SL(s,e,t,n,i,r,o){const a=new ep,l=new vL,u=[],c=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(C){return C===0?"uv":`uv${C}`}function m(C,R,$,W,q){const O=W.fog,H=q.geometry,Z=C.isMeshStandardMaterial?W.environment:null,ee=(C.isMeshStandardMaterial?t:e).get(C.envMap||Z),ce=ee&&ee.mapping===Iu?ee.image.height:null,ne=p[C.type];C.precision!==null&&(f=i.getMaxPrecision(C.precision),f!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",f,"instead."));const fe=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,pe=fe!==void 0?fe.length:0;let Oe=0;H.morphAttributes.position!==void 0&&(Oe=1),H.morphAttributes.normal!==void 0&&(Oe=2),H.morphAttributes.color!==void 0&&(Oe=3);let le,ge,Fe,Qe;if(ne){const Hn=qi[ne];le=Hn.vertexShader,ge=Hn.fragmentShader}else le=C.vertexShader,ge=C.fragmentShader,l.update(C),Fe=l.getVertexShaderID(C),Qe=l.getFragmentShaderID(C);const Ye=s.getRenderTarget(),dt=q.isInstancedMesh===!0,xt=q.isBatchedMesh===!0,nt=!!C.map,rt=!!C.matcap,X=!!ee,ye=!!C.aoMap,ue=!!C.lightMap,Me=!!C.bumpMap,xe=!!C.normalMap,st=!!C.displacementMap,We=!!C.emissiveMap,qe=!!C.metalnessMap,yt=!!C.roughnessMap,Ut=C.anisotropy>0,dn=C.clearcoat>0,B=C.iridescence>0,k=C.sheen>0,te=C.transmission>0,Se=Ut&&!!C.anisotropyMap,be=dn&&!!C.clearcoatMap,Ee=dn&&!!C.clearcoatNormalMap,tt=dn&&!!C.clearcoatRoughnessMap,Ne=B&&!!C.iridescenceMap,ze=B&&!!C.iridescenceThicknessMap,ft=k&&!!C.sheenColorMap,Bt=k&&!!C.sheenRoughnessMap,Ce=!!C.specularMap,Zt=!!C.specularColorMap,_t=!!C.specularIntensityMap,pt=te&&!!C.transmissionMap,ot=te&&!!C.thicknessMap,Ge=!!C.gradientMap,Et=!!C.alphaMap,Y=C.alphaTest>0,He=!!C.alphaHash,_e=!!C.extensions,de=!!H.attributes.uv1,Ae=!!H.attributes.uv2,lt=!!H.attributes.uv3;let zt=Vr;return C.toneMapped&&(Ye===null||Ye.isXRRenderTarget===!0)&&(zt=s.toneMapping),{isWebGL2:c,shaderID:ne,shaderType:C.type,shaderName:C.name,vertexShader:le,fragmentShader:ge,defines:C.defines,customVertexShaderID:Fe,customFragmentShaderID:Qe,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:f,batching:xt,instancing:dt,instancingColor:dt&&q.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:Ye===null?s.outputColorSpace:Ye.isXRRenderTarget===!0?Ye.texture.colorSpace:Sr,map:nt,matcap:rt,envMap:X,envMapMode:X&&ee.mapping,envMapCubeUVHeight:ce,aoMap:ye,lightMap:ue,bumpMap:Me,normalMap:xe,displacementMap:d&&st,emissiveMap:We,normalMapObjectSpace:xe&&C.normalMapType===Y2,normalMapTangentSpace:xe&&C.normalMapType===Ho,metalnessMap:qe,roughnessMap:yt,anisotropy:Ut,anisotropyMap:Se,clearcoat:dn,clearcoatMap:be,clearcoatNormalMap:Ee,clearcoatRoughnessMap:tt,iridescence:B,iridescenceMap:Ne,iridescenceThicknessMap:ze,sheen:k,sheenColorMap:ft,sheenRoughnessMap:Bt,specularMap:Ce,specularColorMap:Zt,specularIntensityMap:_t,transmission:te,transmissionMap:pt,thicknessMap:ot,gradientMap:Ge,opaque:C.transparent===!1&&C.blending===Pa,alphaMap:Et,alphaTest:Y,alphaHash:He,combine:C.combine,mapUv:nt&&x(C.map.channel),aoMapUv:ye&&x(C.aoMap.channel),lightMapUv:ue&&x(C.lightMap.channel),bumpMapUv:Me&&x(C.bumpMap.channel),normalMapUv:xe&&x(C.normalMap.channel),displacementMapUv:st&&x(C.displacementMap.channel),emissiveMapUv:We&&x(C.emissiveMap.channel),metalnessMapUv:qe&&x(C.metalnessMap.channel),roughnessMapUv:yt&&x(C.roughnessMap.channel),anisotropyMapUv:Se&&x(C.anisotropyMap.channel),clearcoatMapUv:be&&x(C.clearcoatMap.channel),clearcoatNormalMapUv:Ee&&x(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:tt&&x(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Ne&&x(C.iridescenceMap.channel),iridescenceThicknessMapUv:ze&&x(C.iridescenceThicknessMap.channel),sheenColorMapUv:ft&&x(C.sheenColorMap.channel),sheenRoughnessMapUv:Bt&&x(C.sheenRoughnessMap.channel),specularMapUv:Ce&&x(C.specularMap.channel),specularColorMapUv:Zt&&x(C.specularColorMap.channel),specularIntensityMapUv:_t&&x(C.specularIntensityMap.channel),transmissionMapUv:pt&&x(C.transmissionMap.channel),thicknessMapUv:ot&&x(C.thicknessMap.channel),alphaMapUv:Et&&x(C.alphaMap.channel),vertexTangents:!!H.attributes.tangent&&(xe||Ut),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,vertexUv1s:de,vertexUv2s:Ae,vertexUv3s:lt,pointsUvs:q.isPoints===!0&&!!H.attributes.uv&&(nt||Et),fog:!!O,useFog:C.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:q.isSkinnedMesh===!0,morphTargets:H.morphAttributes.position!==void 0,morphNormals:H.morphAttributes.normal!==void 0,morphColors:H.morphAttributes.color!==void 0,morphTargetsCount:pe,morphTextureStride:Oe,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&$.length>0,shadowMapType:s.shadowMap.type,toneMapping:zt,useLegacyLights:s._useLegacyLights,decodeVideoTexture:nt&&C.map.isVideoTexture===!0&&Qt.getTransfer(C.map.colorSpace)===gn,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===hr,flipSided:C.side===Fs,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionDerivatives:_e&&C.extensions.derivatives===!0,extensionFragDepth:_e&&C.extensions.fragDepth===!0,extensionDrawBuffers:_e&&C.extensions.drawBuffers===!0,extensionShaderTextureLOD:_e&&C.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:c||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()}}function g(C){const R=[];if(C.shaderID?R.push(C.shaderID):(R.push(C.customVertexShaderID),R.push(C.customFragmentShaderID)),C.defines!==void 0)for(const $ in C.defines)R.push($),R.push(C.defines[$]);return C.isRawShaderMaterial===!1&&(y(R,C),v(R,C),R.push(s.outputColorSpace)),R.push(C.customProgramCacheKey),R.join()}function y(C,R){C.push(R.precision),C.push(R.outputColorSpace),C.push(R.envMapMode),C.push(R.envMapCubeUVHeight),C.push(R.mapUv),C.push(R.alphaMapUv),C.push(R.lightMapUv),C.push(R.aoMapUv),C.push(R.bumpMapUv),C.push(R.normalMapUv),C.push(R.displacementMapUv),C.push(R.emissiveMapUv),C.push(R.metalnessMapUv),C.push(R.roughnessMapUv),C.push(R.anisotropyMapUv),C.push(R.clearcoatMapUv),C.push(R.clearcoatNormalMapUv),C.push(R.clearcoatRoughnessMapUv),C.push(R.iridescenceMapUv),C.push(R.iridescenceThicknessMapUv),C.push(R.sheenColorMapUv),C.push(R.sheenRoughnessMapUv),C.push(R.specularMapUv),C.push(R.specularColorMapUv),C.push(R.specularIntensityMapUv),C.push(R.transmissionMapUv),C.push(R.thicknessMapUv),C.push(R.combine),C.push(R.fogExp2),C.push(R.sizeAttenuation),C.push(R.morphTargetsCount),C.push(R.morphAttributeCount),C.push(R.numDirLights),C.push(R.numPointLights),C.push(R.numSpotLights),C.push(R.numSpotLightMaps),C.push(R.numHemiLights),C.push(R.numRectAreaLights),C.push(R.numDirLightShadows),C.push(R.numPointLightShadows),C.push(R.numSpotLightShadows),C.push(R.numSpotLightShadowsWithMaps),C.push(R.numLightProbes),C.push(R.shadowMapType),C.push(R.toneMapping),C.push(R.numClippingPlanes),C.push(R.numClipIntersection),C.push(R.depthPacking)}function v(C,R){a.disableAll(),R.isWebGL2&&a.enable(0),R.supportsVertexTextures&&a.enable(1),R.instancing&&a.enable(2),R.instancingColor&&a.enable(3),R.matcap&&a.enable(4),R.envMap&&a.enable(5),R.normalMapObjectSpace&&a.enable(6),R.normalMapTangentSpace&&a.enable(7),R.clearcoat&&a.enable(8),R.iridescence&&a.enable(9),R.alphaTest&&a.enable(10),R.vertexColors&&a.enable(11),R.vertexAlphas&&a.enable(12),R.vertexUv1s&&a.enable(13),R.vertexUv2s&&a.enable(14),R.vertexUv3s&&a.enable(15),R.vertexTangents&&a.enable(16),R.anisotropy&&a.enable(17),R.alphaHash&&a.enable(18),R.batching&&a.enable(19),C.push(a.mask),a.disableAll(),R.fog&&a.enable(0),R.useFog&&a.enable(1),R.flatShading&&a.enable(2),R.logarithmicDepthBuffer&&a.enable(3),R.skinning&&a.enable(4),R.morphTargets&&a.enable(5),R.morphNormals&&a.enable(6),R.morphColors&&a.enable(7),R.premultipliedAlpha&&a.enable(8),R.shadowMapEnabled&&a.enable(9),R.useLegacyLights&&a.enable(10),R.doubleSided&&a.enable(11),R.flipSided&&a.enable(12),R.useDepthPacking&&a.enable(13),R.dithering&&a.enable(14),R.transmission&&a.enable(15),R.sheen&&a.enable(16),R.opaque&&a.enable(17),R.pointsUvs&&a.enable(18),R.decodeVideoTexture&&a.enable(19),C.push(a.mask)}function w(C){const R=p[C.type];let $;if(R){const W=qi[R];$=uT.clone(W.uniforms)}else $=C.uniforms;return $}function _(C,R){let $;for(let W=0,q=u.length;W<q;W++){const O=u[W];if(O.cacheKey===R){$=O,++$.usedTimes;break}}return $===void 0&&($=new yL(s,R,C,r),u.push($)),$}function T(C){if(--C.usedTimes===0){const R=u.indexOf(C);u[R]=u[u.length-1],u.pop(),C.destroy()}}function A(C){l.remove(C)}function M(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:w,acquireProgram:_,releaseProgram:T,releaseShaderCache:A,programs:u,dispose:M}}function _L(){let s=new WeakMap;function e(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function t(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function CL(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function W1(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function G1(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(h,d,f,p,x,m){let g=s[e];return g===void 0?(g={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:x,group:m},s[e]=g):(g.id=h.id,g.object=h,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=x,g.group=m),e++,g}function a(h,d,f,p,x,m){const g=o(h,d,f,p,x,m);f.transmission>0?n.push(g):f.transparent===!0?i.push(g):t.push(g)}function l(h,d,f,p,x,m){const g=o(h,d,f,p,x,m);f.transmission>0?n.unshift(g):f.transparent===!0?i.unshift(g):t.unshift(g)}function u(h,d){t.length>1&&t.sort(h||CL),n.length>1&&n.sort(d||W1),i.length>1&&i.sort(d||W1)}function c(){for(let h=e,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:c,sort:u}}function TL(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new G1,s.set(n,[o])):i>=r.length?(o=new G1,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function EL(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Xe};break;case"SpotLight":t={position:new U,direction:new U,color:new Xe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Xe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Xe,groundColor:new Xe};break;case"RectAreaLight":t={color:new Xe,position:new U,halfWidth:new U,halfHeight:new U};break}return s[e.id]=t,t}}}function AL(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new me,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let IL=0;function RL(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function ML(s,e){const t=new EL,n=AL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new U);const r=new U,o=new bt,a=new bt;function l(c,h){let d=0,f=0,p=0;for(let W=0;W<9;W++)i.probe[W].set(0,0,0);let x=0,m=0,g=0,y=0,v=0,w=0,_=0,T=0,A=0,M=0,C=0;c.sort(RL);const R=h===!0?Math.PI:1;for(let W=0,q=c.length;W<q;W++){const O=c[W],H=O.color,Z=O.intensity,ee=O.distance,ce=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)d+=H.r*Z*R,f+=H.g*Z*R,p+=H.b*Z*R;else if(O.isLightProbe){for(let ne=0;ne<9;ne++)i.probe[ne].addScaledVector(O.sh.coefficients[ne],Z);C++}else if(O.isDirectionalLight){const ne=t.get(O);if(ne.color.copy(O.color).multiplyScalar(O.intensity*R),O.castShadow){const fe=O.shadow,pe=n.get(O);pe.shadowBias=fe.bias,pe.shadowNormalBias=fe.normalBias,pe.shadowRadius=fe.radius,pe.shadowMapSize=fe.mapSize,i.directionalShadow[x]=pe,i.directionalShadowMap[x]=ce,i.directionalShadowMatrix[x]=O.shadow.matrix,w++}i.directional[x]=ne,x++}else if(O.isSpotLight){const ne=t.get(O);ne.position.setFromMatrixPosition(O.matrixWorld),ne.color.copy(H).multiplyScalar(Z*R),ne.distance=ee,ne.coneCos=Math.cos(O.angle),ne.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),ne.decay=O.decay,i.spot[g]=ne;const fe=O.shadow;if(O.map&&(i.spotLightMap[A]=O.map,A++,fe.updateMatrices(O),O.castShadow&&M++),i.spotLightMatrix[g]=fe.matrix,O.castShadow){const pe=n.get(O);pe.shadowBias=fe.bias,pe.shadowNormalBias=fe.normalBias,pe.shadowRadius=fe.radius,pe.shadowMapSize=fe.mapSize,i.spotShadow[g]=pe,i.spotShadowMap[g]=ce,T++}g++}else if(O.isRectAreaLight){const ne=t.get(O);ne.color.copy(H).multiplyScalar(Z),ne.halfWidth.set(O.width*.5,0,0),ne.halfHeight.set(0,O.height*.5,0),i.rectArea[y]=ne,y++}else if(O.isPointLight){const ne=t.get(O);if(ne.color.copy(O.color).multiplyScalar(O.intensity*R),ne.distance=O.distance,ne.decay=O.decay,O.castShadow){const fe=O.shadow,pe=n.get(O);pe.shadowBias=fe.bias,pe.shadowNormalBias=fe.normalBias,pe.shadowRadius=fe.radius,pe.shadowMapSize=fe.mapSize,pe.shadowCameraNear=fe.camera.near,pe.shadowCameraFar=fe.camera.far,i.pointShadow[m]=pe,i.pointShadowMap[m]=ce,i.pointShadowMatrix[m]=O.shadow.matrix,_++}i.point[m]=ne,m++}else if(O.isHemisphereLight){const ne=t.get(O);ne.skyColor.copy(O.color).multiplyScalar(Z*R),ne.groundColor.copy(O.groundColor).multiplyScalar(Z*R),i.hemi[v]=ne,v++}}y>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Le.LTC_FLOAT_1,i.rectAreaLTC2=Le.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Le.LTC_HALF_1,i.rectAreaLTC2=Le.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const $=i.hash;($.directionalLength!==x||$.pointLength!==m||$.spotLength!==g||$.rectAreaLength!==y||$.hemiLength!==v||$.numDirectionalShadows!==w||$.numPointShadows!==_||$.numSpotShadows!==T||$.numSpotMaps!==A||$.numLightProbes!==C)&&(i.directional.length=x,i.spot.length=g,i.rectArea.length=y,i.point.length=m,i.hemi.length=v,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=_,i.pointShadowMap.length=_,i.spotShadow.length=T,i.spotShadowMap.length=T,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=_,i.spotLightMatrix.length=T+A-M,i.spotLightMap.length=A,i.numSpotLightShadowsWithMaps=M,i.numLightProbes=C,$.directionalLength=x,$.pointLength=m,$.spotLength=g,$.rectAreaLength=y,$.hemiLength=v,$.numDirectionalShadows=w,$.numPointShadows=_,$.numSpotShadows=T,$.numSpotMaps=A,$.numLightProbes=C,i.version=IL++)}function u(c,h){let d=0,f=0,p=0,x=0,m=0;const g=h.matrixWorldInverse;for(let y=0,v=c.length;y<v;y++){const w=c[y];if(w.isDirectionalLight){const _=i.directional[d];_.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),_.direction.sub(r),_.direction.transformDirection(g),d++}else if(w.isSpotLight){const _=i.spot[p];_.position.setFromMatrixPosition(w.matrixWorld),_.position.applyMatrix4(g),_.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),_.direction.sub(r),_.direction.transformDirection(g),p++}else if(w.isRectAreaLight){const _=i.rectArea[x];_.position.setFromMatrixPosition(w.matrixWorld),_.position.applyMatrix4(g),a.identity(),o.copy(w.matrixWorld),o.premultiply(g),a.extractRotation(o),_.halfWidth.set(w.width*.5,0,0),_.halfHeight.set(0,w.height*.5,0),_.halfWidth.applyMatrix4(a),_.halfHeight.applyMatrix4(a),x++}else if(w.isPointLight){const _=i.point[f];_.position.setFromMatrixPosition(w.matrixWorld),_.position.applyMatrix4(g),f++}else if(w.isHemisphereLight){const _=i.hemi[m];_.direction.setFromMatrixPosition(w.matrixWorld),_.direction.transformDirection(g),m++}}}return{setup:l,setupView:u,state:i}}function H1(s,e){const t=new ML(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){t.setup(n,h)}function u(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:u,pushLight:o,pushShadow:a}}function NL(s,e){let t=new WeakMap;function n(r,o=0){const a=t.get(r);let l;return a===void 0?(l=new H1(s,e),t.set(r,[l])):o>=a.length?(l=new H1(s,e),a.push(l)):l=a[o],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class xy extends Ms{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=K2,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class yy extends Ms{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const PL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,kL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function $L(s,e,t){let n=new Ah;const i=new me,r=new me,o=new rn,a=new xy({depthPacking:j2}),l=new yy,u={},c=t.maxTextureSize,h={[jr]:Fs,[Fs]:jr,[hr]:hr},d=new _r({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new me},radius:{value:4}},vertexShader:PL,fragmentShader:kL}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Ot;p.setAttribute("position",new on(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new es(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Zx;let g=this.type;this.render=function(_,T,A){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||_.length===0)return;const M=s.getRenderTarget(),C=s.getActiveCubeFace(),R=s.getActiveMipmapLevel(),$=s.state;$.setBlending(zr),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const W=g!==lr&&this.type===lr,q=g===lr&&this.type!==lr;for(let O=0,H=_.length;O<H;O++){const Z=_[O],ee=Z.shadow;if(ee===void 0){console.warn("THREE.WebGLShadowMap:",Z,"has no shadow.");continue}if(ee.autoUpdate===!1&&ee.needsUpdate===!1)continue;i.copy(ee.mapSize);const ce=ee.getFrameExtents();if(i.multiply(ce),r.copy(ee.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(r.x=Math.floor(c/ce.x),i.x=r.x*ce.x,ee.mapSize.x=r.x),i.y>c&&(r.y=Math.floor(c/ce.y),i.y=r.y*ce.y,ee.mapSize.y=r.y)),ee.map===null||W===!0||q===!0){const fe=this.type!==lr?{minFilter:zn,magFilter:zn}:{};ee.map!==null&&ee.map.dispose(),ee.map=new er(i.x,i.y,fe),ee.map.texture.name=Z.name+".shadowMap",ee.camera.updateProjectionMatrix()}s.setRenderTarget(ee.map),s.clear();const ne=ee.getViewportCount();for(let fe=0;fe<ne;fe++){const pe=ee.getViewport(fe);o.set(r.x*pe.x,r.y*pe.y,r.x*pe.z,r.y*pe.w),$.viewport(o),ee.updateMatrices(Z,fe),n=ee.getFrustum(),w(T,A,ee.camera,Z,this.type)}ee.isPointLightShadow!==!0&&this.type===lr&&y(ee,A),ee.needsUpdate=!1}g=this.type,m.needsUpdate=!1,s.setRenderTarget(M,C,R)};function y(_,T){const A=e.update(x);d.defines.VSM_SAMPLES!==_.blurSamples&&(d.defines.VSM_SAMPLES=_.blurSamples,f.defines.VSM_SAMPLES=_.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),_.mapPass===null&&(_.mapPass=new er(i.x,i.y)),d.uniforms.shadow_pass.value=_.map.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,s.setRenderTarget(_.mapPass),s.clear(),s.renderBufferDirect(T,null,A,d,x,null),f.uniforms.shadow_pass.value=_.mapPass.texture,f.uniforms.resolution.value=_.mapSize,f.uniforms.radius.value=_.radius,s.setRenderTarget(_.map),s.clear(),s.renderBufferDirect(T,null,A,f,x,null)}function v(_,T,A,M){let C=null;const R=A.isPointLight===!0?_.customDistanceMaterial:_.customDepthMaterial;if(R!==void 0)C=R;else if(C=A.isPointLight===!0?l:a,s.localClippingEnabled&&T.clipShadows===!0&&Array.isArray(T.clippingPlanes)&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0||T.map&&T.alphaTest>0){const $=C.uuid,W=T.uuid;let q=u[$];q===void 0&&(q={},u[$]=q);let O=q[W];O===void 0&&(O=C.clone(),q[W]=O),C=O}if(C.visible=T.visible,C.wireframe=T.wireframe,M===lr?C.side=T.shadowSide!==null?T.shadowSide:T.side:C.side=T.shadowSide!==null?T.shadowSide:h[T.side],C.alphaMap=T.alphaMap,C.alphaTest=T.alphaTest,C.map=T.map,C.clipShadows=T.clipShadows,C.clippingPlanes=T.clippingPlanes,C.clipIntersection=T.clipIntersection,C.displacementMap=T.displacementMap,C.displacementScale=T.displacementScale,C.displacementBias=T.displacementBias,C.wireframeLinewidth=T.wireframeLinewidth,C.linewidth=T.linewidth,A.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const $=s.properties.get(C);$.light=A}return C}function w(_,T,A,M,C){if(_.visible===!1)return;if(_.layers.test(T.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&C===lr)&&(!_.frustumCulled||n.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,_.matrixWorld);const W=e.update(_),q=_.material;if(Array.isArray(q)){const O=W.groups;for(let H=0,Z=O.length;H<Z;H++){const ee=O[H],ce=q[ee.materialIndex];if(ce&&ce.visible){const ne=v(_,ce,M,C);_.onBeforeShadow(s,_,T,A,W,ne,ee),s.renderBufferDirect(A,null,W,ne,_,ee),_.onAfterShadow(s,_,T,A,W,ne,ee)}}}else if(q.visible){const O=v(_,q,M,C);_.onBeforeShadow(s,_,T,A,W,O,null),s.renderBufferDirect(A,null,W,O,_,null),_.onAfterShadow(s,_,T,A,W,O,null)}}const $=_.children;for(let W=0,q=$.length;W<q;W++)w($[W],T,A,M,C)}}function DL(s,e,t){const n=t.isWebGL2;function i(){let Y=!1;const He=new rn;let _e=null;const de=new rn(0,0,0,0);return{setMask:function(Ae){_e!==Ae&&!Y&&(s.colorMask(Ae,Ae,Ae,Ae),_e=Ae)},setLocked:function(Ae){Y=Ae},setClear:function(Ae,lt,zt,Rn,Hn){Hn===!0&&(Ae*=Rn,lt*=Rn,zt*=Rn),He.set(Ae,lt,zt,Rn),de.equals(He)===!1&&(s.clearColor(Ae,lt,zt,Rn),de.copy(He))},reset:function(){Y=!1,_e=null,de.set(-1,0,0,0)}}}function r(){let Y=!1,He=null,_e=null,de=null;return{setTest:function(Ae){Ae?xt(s.DEPTH_TEST):nt(s.DEPTH_TEST)},setMask:function(Ae){He!==Ae&&!Y&&(s.depthMask(Ae),He=Ae)},setFunc:function(Ae){if(_e!==Ae){switch(Ae){case _2:s.depthFunc(s.NEVER);break;case C2:s.depthFunc(s.ALWAYS);break;case T2:s.depthFunc(s.LESS);break;case Lc:s.depthFunc(s.LEQUAL);break;case E2:s.depthFunc(s.EQUAL);break;case A2:s.depthFunc(s.GEQUAL);break;case I2:s.depthFunc(s.GREATER);break;case R2:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}_e=Ae}},setLocked:function(Ae){Y=Ae},setClear:function(Ae){de!==Ae&&(s.clearDepth(Ae),de=Ae)},reset:function(){Y=!1,He=null,_e=null,de=null}}}function o(){let Y=!1,He=null,_e=null,de=null,Ae=null,lt=null,zt=null,Rn=null,Hn=null;return{setTest:function(ln){Y||(ln?xt(s.STENCIL_TEST):nt(s.STENCIL_TEST))},setMask:function(ln){He!==ln&&!Y&&(s.stencilMask(ln),He=ln)},setFunc:function(ln,Dn,Si){(_e!==ln||de!==Dn||Ae!==Si)&&(s.stencilFunc(ln,Dn,Si),_e=ln,de=Dn,Ae=Si)},setOp:function(ln,Dn,Si){(lt!==ln||zt!==Dn||Rn!==Si)&&(s.stencilOp(ln,Dn,Si),lt=ln,zt=Dn,Rn=Si)},setLocked:function(ln){Y=ln},setClear:function(ln){Hn!==ln&&(s.clearStencil(ln),Hn=ln)},reset:function(){Y=!1,He=null,_e=null,de=null,Ae=null,lt=null,zt=null,Rn=null,Hn=null}}}const a=new i,l=new r,u=new o,c=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,x=[],m=null,g=!1,y=null,v=null,w=null,_=null,T=null,A=null,M=null,C=new Xe(0,0,0),R=0,$=!1,W=null,q=null,O=null,H=null,Z=null;const ee=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ce=!1,ne=0;const fe=s.getParameter(s.VERSION);fe.indexOf("WebGL")!==-1?(ne=parseFloat(/^WebGL (\d)/.exec(fe)[1]),ce=ne>=1):fe.indexOf("OpenGL ES")!==-1&&(ne=parseFloat(/^OpenGL ES (\d)/.exec(fe)[1]),ce=ne>=2);let pe=null,Oe={};const le=s.getParameter(s.SCISSOR_BOX),ge=s.getParameter(s.VIEWPORT),Fe=new rn().fromArray(le),Qe=new rn().fromArray(ge);function Ye(Y,He,_e,de){const Ae=new Uint8Array(4),lt=s.createTexture();s.bindTexture(Y,lt),s.texParameteri(Y,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(Y,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let zt=0;zt<_e;zt++)n&&(Y===s.TEXTURE_3D||Y===s.TEXTURE_2D_ARRAY)?s.texImage3D(He,0,s.RGBA,1,1,de,0,s.RGBA,s.UNSIGNED_BYTE,Ae):s.texImage2D(He+zt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ae);return lt}const dt={};dt[s.TEXTURE_2D]=Ye(s.TEXTURE_2D,s.TEXTURE_2D,1),dt[s.TEXTURE_CUBE_MAP]=Ye(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(dt[s.TEXTURE_2D_ARRAY]=Ye(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),dt[s.TEXTURE_3D]=Ye(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),u.setClear(0),xt(s.DEPTH_TEST),l.setFunc(Lc),We(!1),qe(xg),xt(s.CULL_FACE),xe(zr);function xt(Y){d[Y]!==!0&&(s.enable(Y),d[Y]=!0)}function nt(Y){d[Y]!==!1&&(s.disable(Y),d[Y]=!1)}function rt(Y,He){return f[Y]!==He?(s.bindFramebuffer(Y,He),f[Y]=He,n&&(Y===s.DRAW_FRAMEBUFFER&&(f[s.FRAMEBUFFER]=He),Y===s.FRAMEBUFFER&&(f[s.DRAW_FRAMEBUFFER]=He)),!0):!1}function X(Y,He){let _e=x,de=!1;if(Y)if(_e=p.get(He),_e===void 0&&(_e=[],p.set(He,_e)),Y.isWebGLMultipleRenderTargets){const Ae=Y.texture;if(_e.length!==Ae.length||_e[0]!==s.COLOR_ATTACHMENT0){for(let lt=0,zt=Ae.length;lt<zt;lt++)_e[lt]=s.COLOR_ATTACHMENT0+lt;_e.length=Ae.length,de=!0}}else _e[0]!==s.COLOR_ATTACHMENT0&&(_e[0]=s.COLOR_ATTACHMENT0,de=!0);else _e[0]!==s.BACK&&(_e[0]=s.BACK,de=!0);de&&(t.isWebGL2?s.drawBuffers(_e):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(_e))}function ye(Y){return m!==Y?(s.useProgram(Y),m=Y,!0):!1}const ue={[Ao]:s.FUNC_ADD,[l2]:s.FUNC_SUBTRACT,[u2]:s.FUNC_REVERSE_SUBTRACT};if(n)ue[wg]=s.MIN,ue[Sg]=s.MAX;else{const Y=e.get("EXT_blend_minmax");Y!==null&&(ue[wg]=Y.MIN_EXT,ue[Sg]=Y.MAX_EXT)}const Me={[c2]:s.ZERO,[h2]:s.ONE,[d2]:s.SRC_COLOR,[xf]:s.SRC_ALPHA,[y2]:s.SRC_ALPHA_SATURATE,[g2]:s.DST_COLOR,[p2]:s.DST_ALPHA,[f2]:s.ONE_MINUS_SRC_COLOR,[yf]:s.ONE_MINUS_SRC_ALPHA,[x2]:s.ONE_MINUS_DST_COLOR,[m2]:s.ONE_MINUS_DST_ALPHA,[b2]:s.CONSTANT_COLOR,[v2]:s.ONE_MINUS_CONSTANT_COLOR,[w2]:s.CONSTANT_ALPHA,[S2]:s.ONE_MINUS_CONSTANT_ALPHA};function xe(Y,He,_e,de,Ae,lt,zt,Rn,Hn,ln){if(Y===zr){g===!0&&(nt(s.BLEND),g=!1);return}if(g===!1&&(xt(s.BLEND),g=!0),Y!==a2){if(Y!==y||ln!==$){if((v!==Ao||T!==Ao)&&(s.blendEquation(s.FUNC_ADD),v=Ao,T=Ao),ln)switch(Y){case Pa:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case yg:s.blendFunc(s.ONE,s.ONE);break;case bg:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case vg:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",Y);break}else switch(Y){case Pa:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case yg:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case bg:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case vg:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",Y);break}w=null,_=null,A=null,M=null,C.set(0,0,0),R=0,y=Y,$=ln}return}Ae=Ae||He,lt=lt||_e,zt=zt||de,(He!==v||Ae!==T)&&(s.blendEquationSeparate(ue[He],ue[Ae]),v=He,T=Ae),(_e!==w||de!==_||lt!==A||zt!==M)&&(s.blendFuncSeparate(Me[_e],Me[de],Me[lt],Me[zt]),w=_e,_=de,A=lt,M=zt),(Rn.equals(C)===!1||Hn!==R)&&(s.blendColor(Rn.r,Rn.g,Rn.b,Hn),C.copy(Rn),R=Hn),y=Y,$=!1}function st(Y,He){Y.side===hr?nt(s.CULL_FACE):xt(s.CULL_FACE);let _e=Y.side===Fs;He&&(_e=!_e),We(_e),Y.blending===Pa&&Y.transparent===!1?xe(zr):xe(Y.blending,Y.blendEquation,Y.blendSrc,Y.blendDst,Y.blendEquationAlpha,Y.blendSrcAlpha,Y.blendDstAlpha,Y.blendColor,Y.blendAlpha,Y.premultipliedAlpha),l.setFunc(Y.depthFunc),l.setTest(Y.depthTest),l.setMask(Y.depthWrite),a.setMask(Y.colorWrite);const de=Y.stencilWrite;u.setTest(de),de&&(u.setMask(Y.stencilWriteMask),u.setFunc(Y.stencilFunc,Y.stencilRef,Y.stencilFuncMask),u.setOp(Y.stencilFail,Y.stencilZFail,Y.stencilZPass)),Ut(Y.polygonOffset,Y.polygonOffsetFactor,Y.polygonOffsetUnits),Y.alphaToCoverage===!0?xt(s.SAMPLE_ALPHA_TO_COVERAGE):nt(s.SAMPLE_ALPHA_TO_COVERAGE)}function We(Y){W!==Y&&(Y?s.frontFace(s.CW):s.frontFace(s.CCW),W=Y)}function qe(Y){Y!==r2?(xt(s.CULL_FACE),Y!==q&&(Y===xg?s.cullFace(s.BACK):Y===o2?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):nt(s.CULL_FACE),q=Y}function yt(Y){Y!==O&&(ce&&s.lineWidth(Y),O=Y)}function Ut(Y,He,_e){Y?(xt(s.POLYGON_OFFSET_FILL),(H!==He||Z!==_e)&&(s.polygonOffset(He,_e),H=He,Z=_e)):nt(s.POLYGON_OFFSET_FILL)}function dn(Y){Y?xt(s.SCISSOR_TEST):nt(s.SCISSOR_TEST)}function B(Y){Y===void 0&&(Y=s.TEXTURE0+ee-1),pe!==Y&&(s.activeTexture(Y),pe=Y)}function k(Y,He,_e){_e===void 0&&(pe===null?_e=s.TEXTURE0+ee-1:_e=pe);let de=Oe[_e];de===void 0&&(de={type:void 0,texture:void 0},Oe[_e]=de),(de.type!==Y||de.texture!==He)&&(pe!==_e&&(s.activeTexture(_e),pe=_e),s.bindTexture(Y,He||dt[Y]),de.type=Y,de.texture=He)}function te(){const Y=Oe[pe];Y!==void 0&&Y.type!==void 0&&(s.bindTexture(Y.type,null),Y.type=void 0,Y.texture=void 0)}function Se(){try{s.compressedTexImage2D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function be(){try{s.compressedTexImage3D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Ee(){try{s.texSubImage2D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function tt(){try{s.texSubImage3D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Ne(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function ze(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function ft(){try{s.texStorage2D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Bt(){try{s.texStorage3D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Ce(){try{s.texImage2D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function Zt(){try{s.texImage3D.apply(s,arguments)}catch(Y){console.error("THREE.WebGLState:",Y)}}function _t(Y){Fe.equals(Y)===!1&&(s.scissor(Y.x,Y.y,Y.z,Y.w),Fe.copy(Y))}function pt(Y){Qe.equals(Y)===!1&&(s.viewport(Y.x,Y.y,Y.z,Y.w),Qe.copy(Y))}function ot(Y,He){let _e=h.get(He);_e===void 0&&(_e=new WeakMap,h.set(He,_e));let de=_e.get(Y);de===void 0&&(de=s.getUniformBlockIndex(He,Y.name),_e.set(Y,de))}function Ge(Y,He){const de=h.get(He).get(Y);c.get(He)!==de&&(s.uniformBlockBinding(He,de,Y.__bindingPointIndex),c.set(He,de))}function Et(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},pe=null,Oe={},f={},p=new WeakMap,x=[],m=null,g=!1,y=null,v=null,w=null,_=null,T=null,A=null,M=null,C=new Xe(0,0,0),R=0,$=!1,W=null,q=null,O=null,H=null,Z=null,Fe.set(0,0,s.canvas.width,s.canvas.height),Qe.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),u.reset()}return{buffers:{color:a,depth:l,stencil:u},enable:xt,disable:nt,bindFramebuffer:rt,drawBuffers:X,useProgram:ye,setBlending:xe,setMaterial:st,setFlipSided:We,setCullFace:qe,setLineWidth:yt,setPolygonOffset:Ut,setScissorTest:dn,activeTexture:B,bindTexture:k,unbindTexture:te,compressedTexImage2D:Se,compressedTexImage3D:be,texImage2D:Ce,texImage3D:Zt,updateUBOMapping:ot,uniformBlockBinding:Ge,texStorage2D:ft,texStorage3D:Bt,texSubImage2D:Ee,texSubImage3D:tt,compressedTexSubImage2D:Ne,compressedTexSubImage3D:ze,scissor:_t,viewport:pt,reset:Et}}function LL(s,e,t,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let x;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(B,k){return g?new OffscreenCanvas(B,k):Kc("canvas")}function v(B,k,te,Se){let be=1;if((B.width>Se||B.height>Se)&&(be=Se/Math.max(B.width,B.height)),be<1||k===!0)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap){const Ee=k?wf:Math.floor,tt=Ee(be*B.width),Ne=Ee(be*B.height);x===void 0&&(x=y(tt,Ne));const ze=te?y(tt,Ne):x;return ze.width=tt,ze.height=Ne,ze.getContext("2d").drawImage(B,0,0,tt,Ne),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+tt+"x"+Ne+")."),ze}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function w(B){return Zg(B.width)&&Zg(B.height)}function _(B){return a?!1:B.wrapS!==Es||B.wrapT!==Es||B.minFilter!==zn&&B.minFilter!==Vn}function T(B,k){return B.generateMipmaps&&k&&B.minFilter!==zn&&B.minFilter!==Vn}function A(B){s.generateMipmap(B)}function M(B,k,te,Se,be=!1){if(a===!1)return k;if(B!==null){if(s[B]!==void 0)return s[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let Ee=k;if(k===s.RED&&(te===s.FLOAT&&(Ee=s.R32F),te===s.HALF_FLOAT&&(Ee=s.R16F),te===s.UNSIGNED_BYTE&&(Ee=s.R8)),k===s.RED_INTEGER&&(te===s.UNSIGNED_BYTE&&(Ee=s.R8UI),te===s.UNSIGNED_SHORT&&(Ee=s.R16UI),te===s.UNSIGNED_INT&&(Ee=s.R32UI),te===s.BYTE&&(Ee=s.R8I),te===s.SHORT&&(Ee=s.R16I),te===s.INT&&(Ee=s.R32I)),k===s.RG&&(te===s.FLOAT&&(Ee=s.RG32F),te===s.HALF_FLOAT&&(Ee=s.RG16F),te===s.UNSIGNED_BYTE&&(Ee=s.RG8)),k===s.RGBA){const tt=be?Gc:Qt.getTransfer(Se);te===s.FLOAT&&(Ee=s.RGBA32F),te===s.HALF_FLOAT&&(Ee=s.RGBA16F),te===s.UNSIGNED_BYTE&&(Ee=tt===gn?s.SRGB8_ALPHA8:s.RGBA8),te===s.UNSIGNED_SHORT_4_4_4_4&&(Ee=s.RGBA4),te===s.UNSIGNED_SHORT_5_5_5_1&&(Ee=s.RGB5_A1)}return(Ee===s.R16F||Ee===s.R32F||Ee===s.RG16F||Ee===s.RG32F||Ee===s.RGBA16F||Ee===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Ee}function C(B,k,te){return T(B,te)===!0||B.isFramebufferTexture&&B.minFilter!==zn&&B.minFilter!==Vn?Math.log2(Math.max(k.width,k.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?k.mipmaps.length:1}function R(B){return B===zn||B===bf||B===Sc?s.NEAREST:s.LINEAR}function $(B){const k=B.target;k.removeEventListener("dispose",$),q(k),k.isVideoTexture&&p.delete(k)}function W(B){const k=B.target;k.removeEventListener("dispose",W),H(k)}function q(B){const k=n.get(B);if(k.__webglInit===void 0)return;const te=B.source,Se=m.get(te);if(Se){const be=Se[k.__cacheKey];be.usedTimes--,be.usedTimes===0&&O(B),Object.keys(Se).length===0&&m.delete(te)}n.remove(B)}function O(B){const k=n.get(B);s.deleteTexture(k.__webglTexture);const te=B.source,Se=m.get(te);delete Se[k.__cacheKey],o.memory.textures--}function H(B){const k=B.texture,te=n.get(B),Se=n.get(k);if(Se.__webglTexture!==void 0&&(s.deleteTexture(Se.__webglTexture),o.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let be=0;be<6;be++){if(Array.isArray(te.__webglFramebuffer[be]))for(let Ee=0;Ee<te.__webglFramebuffer[be].length;Ee++)s.deleteFramebuffer(te.__webglFramebuffer[be][Ee]);else s.deleteFramebuffer(te.__webglFramebuffer[be]);te.__webglDepthbuffer&&s.deleteRenderbuffer(te.__webglDepthbuffer[be])}else{if(Array.isArray(te.__webglFramebuffer))for(let be=0;be<te.__webglFramebuffer.length;be++)s.deleteFramebuffer(te.__webglFramebuffer[be]);else s.deleteFramebuffer(te.__webglFramebuffer);if(te.__webglDepthbuffer&&s.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&s.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let be=0;be<te.__webglColorRenderbuffer.length;be++)te.__webglColorRenderbuffer[be]&&s.deleteRenderbuffer(te.__webglColorRenderbuffer[be]);te.__webglDepthRenderbuffer&&s.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(B.isWebGLMultipleRenderTargets)for(let be=0,Ee=k.length;be<Ee;be++){const tt=n.get(k[be]);tt.__webglTexture&&(s.deleteTexture(tt.__webglTexture),o.memory.textures--),n.remove(k[be])}n.remove(k),n.remove(B)}let Z=0;function ee(){Z=0}function ce(){const B=Z;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),Z+=1,B}function ne(B){const k=[];return k.push(B.wrapS),k.push(B.wrapT),k.push(B.wrapR||0),k.push(B.magFilter),k.push(B.minFilter),k.push(B.anisotropy),k.push(B.internalFormat),k.push(B.format),k.push(B.type),k.push(B.generateMipmaps),k.push(B.premultiplyAlpha),k.push(B.flipY),k.push(B.unpackAlignment),k.push(B.colorSpace),k.join()}function fe(B,k){const te=n.get(B);if(B.isVideoTexture&&Ut(B),B.isRenderTargetTexture===!1&&B.version>0&&te.__version!==B.version){const Se=B.image;if(Se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{xt(te,B,k);return}}t.bindTexture(s.TEXTURE_2D,te.__webglTexture,s.TEXTURE0+k)}function pe(B,k){const te=n.get(B);if(B.version>0&&te.__version!==B.version){xt(te,B,k);return}t.bindTexture(s.TEXTURE_2D_ARRAY,te.__webglTexture,s.TEXTURE0+k)}function Oe(B,k){const te=n.get(B);if(B.version>0&&te.__version!==B.version){xt(te,B,k);return}t.bindTexture(s.TEXTURE_3D,te.__webglTexture,s.TEXTURE0+k)}function le(B,k){const te=n.get(B);if(B.version>0&&te.__version!==B.version){nt(te,B,k);return}t.bindTexture(s.TEXTURE_CUBE_MAP,te.__webglTexture,s.TEXTURE0+k)}const ge={[Uc]:s.REPEAT,[Es]:s.CLAMP_TO_EDGE,[Bc]:s.MIRRORED_REPEAT},Fe={[zn]:s.NEAREST,[bf]:s.NEAREST_MIPMAP_NEAREST,[Sc]:s.NEAREST_MIPMAP_LINEAR,[Vn]:s.LINEAR,[Qx]:s.LINEAR_MIPMAP_NEAREST,[Uo]:s.LINEAR_MIPMAP_LINEAR},Qe={[Z2]:s.NEVER,[sT]:s.ALWAYS,[J2]:s.LESS,[uy]:s.LEQUAL,[Q2]:s.EQUAL,[nT]:s.GEQUAL,[eT]:s.GREATER,[tT]:s.NOTEQUAL};function Ye(B,k,te){if(te?(s.texParameteri(B,s.TEXTURE_WRAP_S,ge[k.wrapS]),s.texParameteri(B,s.TEXTURE_WRAP_T,ge[k.wrapT]),(B===s.TEXTURE_3D||B===s.TEXTURE_2D_ARRAY)&&s.texParameteri(B,s.TEXTURE_WRAP_R,ge[k.wrapR]),s.texParameteri(B,s.TEXTURE_MAG_FILTER,Fe[k.magFilter]),s.texParameteri(B,s.TEXTURE_MIN_FILTER,Fe[k.minFilter])):(s.texParameteri(B,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(B,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(B===s.TEXTURE_3D||B===s.TEXTURE_2D_ARRAY)&&s.texParameteri(B,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(k.wrapS!==Es||k.wrapT!==Es)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(B,s.TEXTURE_MAG_FILTER,R(k.magFilter)),s.texParameteri(B,s.TEXTURE_MIN_FILTER,R(k.minFilter)),k.minFilter!==zn&&k.minFilter!==Vn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),k.compareFunction&&(s.texParameteri(B,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(B,s.TEXTURE_COMPARE_FUNC,Qe[k.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Se=e.get("EXT_texture_filter_anisotropic");if(k.magFilter===zn||k.minFilter!==Sc&&k.minFilter!==Uo||k.type===Ji&&e.has("OES_texture_float_linear")===!1||a===!1&&k.type===lu&&e.has("OES_texture_half_float_linear")===!1)return;(k.anisotropy>1||n.get(k).__currentAnisotropy)&&(s.texParameterf(B,Se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(k.anisotropy,i.getMaxAnisotropy())),n.get(k).__currentAnisotropy=k.anisotropy)}}function dt(B,k){let te=!1;B.__webglInit===void 0&&(B.__webglInit=!0,k.addEventListener("dispose",$));const Se=k.source;let be=m.get(Se);be===void 0&&(be={},m.set(Se,be));const Ee=ne(k);if(Ee!==B.__cacheKey){be[Ee]===void 0&&(be[Ee]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,te=!0),be[Ee].usedTimes++;const tt=be[B.__cacheKey];tt!==void 0&&(be[B.__cacheKey].usedTimes--,tt.usedTimes===0&&O(k)),B.__cacheKey=Ee,B.__webglTexture=be[Ee].texture}return te}function xt(B,k,te){let Se=s.TEXTURE_2D;(k.isDataArrayTexture||k.isCompressedArrayTexture)&&(Se=s.TEXTURE_2D_ARRAY),k.isData3DTexture&&(Se=s.TEXTURE_3D);const be=dt(B,k),Ee=k.source;t.bindTexture(Se,B.__webglTexture,s.TEXTURE0+te);const tt=n.get(Ee);if(Ee.version!==tt.__version||be===!0){t.activeTexture(s.TEXTURE0+te);const Ne=Qt.getPrimaries(Qt.workingColorSpace),ze=k.colorSpace===mi?null:Qt.getPrimaries(k.colorSpace),ft=k.colorSpace===mi||Ne===ze?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,k.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,k.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ft);const Bt=_(k)&&w(k.image)===!1;let Ce=v(k.image,Bt,!1,c);Ce=dn(k,Ce);const Zt=w(Ce)||a,_t=r.convert(k.format,k.colorSpace);let pt=r.convert(k.type),ot=M(k.internalFormat,_t,pt,k.colorSpace,k.isVideoTexture);Ye(Se,k,Zt);let Ge;const Et=k.mipmaps,Y=a&&k.isVideoTexture!==!0&&ot!==oy,He=tt.__version===void 0||be===!0,_e=C(k,Ce,Zt);if(k.isDepthTexture)ot=s.DEPTH_COMPONENT,a?k.type===Ji?ot=s.DEPTH_COMPONENT32F:k.type===Br?ot=s.DEPTH_COMPONENT24:k.type===No?ot=s.DEPTH24_STENCIL8:ot=s.DEPTH_COMPONENT16:k.type===Ji&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),k.format===Po&&ot===s.DEPTH_COMPONENT&&k.type!==Yf&&k.type!==Br&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),k.type=Br,pt=r.convert(k.type)),k.format===Ba&&ot===s.DEPTH_COMPONENT&&(ot=s.DEPTH_STENCIL,k.type!==No&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),k.type=No,pt=r.convert(k.type))),He&&(Y?t.texStorage2D(s.TEXTURE_2D,1,ot,Ce.width,Ce.height):t.texImage2D(s.TEXTURE_2D,0,ot,Ce.width,Ce.height,0,_t,pt,null));else if(k.isDataTexture)if(Et.length>0&&Zt){Y&&He&&t.texStorage2D(s.TEXTURE_2D,_e,ot,Et[0].width,Et[0].height);for(let de=0,Ae=Et.length;de<Ae;de++)Ge=Et[de],Y?t.texSubImage2D(s.TEXTURE_2D,de,0,0,Ge.width,Ge.height,_t,pt,Ge.data):t.texImage2D(s.TEXTURE_2D,de,ot,Ge.width,Ge.height,0,_t,pt,Ge.data);k.generateMipmaps=!1}else Y?(He&&t.texStorage2D(s.TEXTURE_2D,_e,ot,Ce.width,Ce.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ce.width,Ce.height,_t,pt,Ce.data)):t.texImage2D(s.TEXTURE_2D,0,ot,Ce.width,Ce.height,0,_t,pt,Ce.data);else if(k.isCompressedTexture)if(k.isCompressedArrayTexture){Y&&He&&t.texStorage3D(s.TEXTURE_2D_ARRAY,_e,ot,Et[0].width,Et[0].height,Ce.depth);for(let de=0,Ae=Et.length;de<Ae;de++)Ge=Et[de],k.format!==ei?_t!==null?Y?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,de,0,0,0,Ge.width,Ge.height,Ce.depth,_t,Ge.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,de,ot,Ge.width,Ge.height,Ce.depth,0,Ge.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Y?t.texSubImage3D(s.TEXTURE_2D_ARRAY,de,0,0,0,Ge.width,Ge.height,Ce.depth,_t,pt,Ge.data):t.texImage3D(s.TEXTURE_2D_ARRAY,de,ot,Ge.width,Ge.height,Ce.depth,0,_t,pt,Ge.data)}else{Y&&He&&t.texStorage2D(s.TEXTURE_2D,_e,ot,Et[0].width,Et[0].height);for(let de=0,Ae=Et.length;de<Ae;de++)Ge=Et[de],k.format!==ei?_t!==null?Y?t.compressedTexSubImage2D(s.TEXTURE_2D,de,0,0,Ge.width,Ge.height,_t,Ge.data):t.compressedTexImage2D(s.TEXTURE_2D,de,ot,Ge.width,Ge.height,0,Ge.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Y?t.texSubImage2D(s.TEXTURE_2D,de,0,0,Ge.width,Ge.height,_t,pt,Ge.data):t.texImage2D(s.TEXTURE_2D,de,ot,Ge.width,Ge.height,0,_t,pt,Ge.data)}else if(k.isDataArrayTexture)Y?(He&&t.texStorage3D(s.TEXTURE_2D_ARRAY,_e,ot,Ce.width,Ce.height,Ce.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Ce.width,Ce.height,Ce.depth,_t,pt,Ce.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,ot,Ce.width,Ce.height,Ce.depth,0,_t,pt,Ce.data);else if(k.isData3DTexture)Y?(He&&t.texStorage3D(s.TEXTURE_3D,_e,ot,Ce.width,Ce.height,Ce.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Ce.width,Ce.height,Ce.depth,_t,pt,Ce.data)):t.texImage3D(s.TEXTURE_3D,0,ot,Ce.width,Ce.height,Ce.depth,0,_t,pt,Ce.data);else if(k.isFramebufferTexture){if(He)if(Y)t.texStorage2D(s.TEXTURE_2D,_e,ot,Ce.width,Ce.height);else{let de=Ce.width,Ae=Ce.height;for(let lt=0;lt<_e;lt++)t.texImage2D(s.TEXTURE_2D,lt,ot,de,Ae,0,_t,pt,null),de>>=1,Ae>>=1}}else if(Et.length>0&&Zt){Y&&He&&t.texStorage2D(s.TEXTURE_2D,_e,ot,Et[0].width,Et[0].height);for(let de=0,Ae=Et.length;de<Ae;de++)Ge=Et[de],Y?t.texSubImage2D(s.TEXTURE_2D,de,0,0,_t,pt,Ge):t.texImage2D(s.TEXTURE_2D,de,ot,_t,pt,Ge);k.generateMipmaps=!1}else Y?(He&&t.texStorage2D(s.TEXTURE_2D,_e,ot,Ce.width,Ce.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,_t,pt,Ce)):t.texImage2D(s.TEXTURE_2D,0,ot,_t,pt,Ce);T(k,Zt)&&A(Se),tt.__version=Ee.version,k.onUpdate&&k.onUpdate(k)}B.__version=k.version}function nt(B,k,te){if(k.image.length!==6)return;const Se=dt(B,k),be=k.source;t.bindTexture(s.TEXTURE_CUBE_MAP,B.__webglTexture,s.TEXTURE0+te);const Ee=n.get(be);if(be.version!==Ee.__version||Se===!0){t.activeTexture(s.TEXTURE0+te);const tt=Qt.getPrimaries(Qt.workingColorSpace),Ne=k.colorSpace===mi?null:Qt.getPrimaries(k.colorSpace),ze=k.colorSpace===mi||tt===Ne?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,k.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,k.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,ze);const ft=k.isCompressedTexture||k.image[0].isCompressedTexture,Bt=k.image[0]&&k.image[0].isDataTexture,Ce=[];for(let de=0;de<6;de++)!ft&&!Bt?Ce[de]=v(k.image[de],!1,!0,u):Ce[de]=Bt?k.image[de].image:k.image[de],Ce[de]=dn(k,Ce[de]);const Zt=Ce[0],_t=w(Zt)||a,pt=r.convert(k.format,k.colorSpace),ot=r.convert(k.type),Ge=M(k.internalFormat,pt,ot,k.colorSpace),Et=a&&k.isVideoTexture!==!0,Y=Ee.__version===void 0||Se===!0;let He=C(k,Zt,_t);Ye(s.TEXTURE_CUBE_MAP,k,_t);let _e;if(ft){Et&&Y&&t.texStorage2D(s.TEXTURE_CUBE_MAP,He,Ge,Zt.width,Zt.height);for(let de=0;de<6;de++){_e=Ce[de].mipmaps;for(let Ae=0;Ae<_e.length;Ae++){const lt=_e[Ae];k.format!==ei?pt!==null?Et?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae,0,0,lt.width,lt.height,pt,lt.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae,Ge,lt.width,lt.height,0,lt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae,0,0,lt.width,lt.height,pt,ot,lt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae,Ge,lt.width,lt.height,0,pt,ot,lt.data)}}}else{_e=k.mipmaps,Et&&Y&&(_e.length>0&&He++,t.texStorage2D(s.TEXTURE_CUBE_MAP,He,Ge,Ce[0].width,Ce[0].height));for(let de=0;de<6;de++)if(Bt){Et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Ce[de].width,Ce[de].height,pt,ot,Ce[de].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,Ge,Ce[de].width,Ce[de].height,0,pt,ot,Ce[de].data);for(let Ae=0;Ae<_e.length;Ae++){const zt=_e[Ae].image[de].image;Et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae+1,0,0,zt.width,zt.height,pt,ot,zt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae+1,Ge,zt.width,zt.height,0,pt,ot,zt.data)}}else{Et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,pt,ot,Ce[de]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,Ge,pt,ot,Ce[de]);for(let Ae=0;Ae<_e.length;Ae++){const lt=_e[Ae];Et?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae+1,0,0,pt,ot,lt.image[de]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ae+1,Ge,pt,ot,lt.image[de])}}}T(k,_t)&&A(s.TEXTURE_CUBE_MAP),Ee.__version=be.version,k.onUpdate&&k.onUpdate(k)}B.__version=k.version}function rt(B,k,te,Se,be,Ee){const tt=r.convert(te.format,te.colorSpace),Ne=r.convert(te.type),ze=M(te.internalFormat,tt,Ne,te.colorSpace);if(!n.get(k).__hasExternalTextures){const Bt=Math.max(1,k.width>>Ee),Ce=Math.max(1,k.height>>Ee);be===s.TEXTURE_3D||be===s.TEXTURE_2D_ARRAY?t.texImage3D(be,Ee,ze,Bt,Ce,k.depth,0,tt,Ne,null):t.texImage2D(be,Ee,ze,Bt,Ce,0,tt,Ne,null)}t.bindFramebuffer(s.FRAMEBUFFER,B),yt(k)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,Se,be,n.get(te).__webglTexture,0,qe(k)):(be===s.TEXTURE_2D||be>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&be<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,Se,be,n.get(te).__webglTexture,Ee),t.bindFramebuffer(s.FRAMEBUFFER,null)}function X(B,k,te){if(s.bindRenderbuffer(s.RENDERBUFFER,B),k.depthBuffer&&!k.stencilBuffer){let Se=a===!0?s.DEPTH_COMPONENT24:s.DEPTH_COMPONENT16;if(te||yt(k)){const be=k.depthTexture;be&&be.isDepthTexture&&(be.type===Ji?Se=s.DEPTH_COMPONENT32F:be.type===Br&&(Se=s.DEPTH_COMPONENT24));const Ee=qe(k);yt(k)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ee,Se,k.width,k.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,Ee,Se,k.width,k.height)}else s.renderbufferStorage(s.RENDERBUFFER,Se,k.width,k.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,B)}else if(k.depthBuffer&&k.stencilBuffer){const Se=qe(k);te&&yt(k)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Se,s.DEPTH24_STENCIL8,k.width,k.height):yt(k)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Se,s.DEPTH24_STENCIL8,k.width,k.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,k.width,k.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,B)}else{const Se=k.isWebGLMultipleRenderTargets===!0?k.texture:[k.texture];for(let be=0;be<Se.length;be++){const Ee=Se[be],tt=r.convert(Ee.format,Ee.colorSpace),Ne=r.convert(Ee.type),ze=M(Ee.internalFormat,tt,Ne,Ee.colorSpace),ft=qe(k);te&&yt(k)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ft,ze,k.width,k.height):yt(k)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ft,ze,k.width,k.height):s.renderbufferStorage(s.RENDERBUFFER,ze,k.width,k.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ye(B,k){if(k&&k.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,B),!(k.depthTexture&&k.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(k.depthTexture).__webglTexture||k.depthTexture.image.width!==k.width||k.depthTexture.image.height!==k.height)&&(k.depthTexture.image.width=k.width,k.depthTexture.image.height=k.height,k.depthTexture.needsUpdate=!0),fe(k.depthTexture,0);const Se=n.get(k.depthTexture).__webglTexture,be=qe(k);if(k.depthTexture.format===Po)yt(k)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Se,0,be):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,Se,0);else if(k.depthTexture.format===Ba)yt(k)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Se,0,be):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,Se,0);else throw new Error("Unknown depthTexture format")}function ue(B){const k=n.get(B),te=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!k.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");ye(k.__webglFramebuffer,B)}else if(te){k.__webglDepthbuffer=[];for(let Se=0;Se<6;Se++)t.bindFramebuffer(s.FRAMEBUFFER,k.__webglFramebuffer[Se]),k.__webglDepthbuffer[Se]=s.createRenderbuffer(),X(k.__webglDepthbuffer[Se],B,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,k.__webglFramebuffer),k.__webglDepthbuffer=s.createRenderbuffer(),X(k.__webglDepthbuffer,B,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function Me(B,k,te){const Se=n.get(B);k!==void 0&&rt(Se.__webglFramebuffer,B,B.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),te!==void 0&&ue(B)}function xe(B){const k=B.texture,te=n.get(B),Se=n.get(k);B.addEventListener("dispose",W),B.isWebGLMultipleRenderTargets!==!0&&(Se.__webglTexture===void 0&&(Se.__webglTexture=s.createTexture()),Se.__version=k.version,o.memory.textures++);const be=B.isWebGLCubeRenderTarget===!0,Ee=B.isWebGLMultipleRenderTargets===!0,tt=w(B)||a;if(be){te.__webglFramebuffer=[];for(let Ne=0;Ne<6;Ne++)if(a&&k.mipmaps&&k.mipmaps.length>0){te.__webglFramebuffer[Ne]=[];for(let ze=0;ze<k.mipmaps.length;ze++)te.__webglFramebuffer[Ne][ze]=s.createFramebuffer()}else te.__webglFramebuffer[Ne]=s.createFramebuffer()}else{if(a&&k.mipmaps&&k.mipmaps.length>0){te.__webglFramebuffer=[];for(let Ne=0;Ne<k.mipmaps.length;Ne++)te.__webglFramebuffer[Ne]=s.createFramebuffer()}else te.__webglFramebuffer=s.createFramebuffer();if(Ee)if(i.drawBuffers){const Ne=B.texture;for(let ze=0,ft=Ne.length;ze<ft;ze++){const Bt=n.get(Ne[ze]);Bt.__webglTexture===void 0&&(Bt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&B.samples>0&&yt(B)===!1){const Ne=Ee?k:[k];te.__webglMultisampledFramebuffer=s.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,te.__webglMultisampledFramebuffer);for(let ze=0;ze<Ne.length;ze++){const ft=Ne[ze];te.__webglColorRenderbuffer[ze]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,te.__webglColorRenderbuffer[ze]);const Bt=r.convert(ft.format,ft.colorSpace),Ce=r.convert(ft.type),Zt=M(ft.internalFormat,Bt,Ce,ft.colorSpace,B.isXRRenderTarget===!0),_t=qe(B);s.renderbufferStorageMultisample(s.RENDERBUFFER,_t,Zt,B.width,B.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ze,s.RENDERBUFFER,te.__webglColorRenderbuffer[ze])}s.bindRenderbuffer(s.RENDERBUFFER,null),B.depthBuffer&&(te.__webglDepthRenderbuffer=s.createRenderbuffer(),X(te.__webglDepthRenderbuffer,B,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(be){t.bindTexture(s.TEXTURE_CUBE_MAP,Se.__webglTexture),Ye(s.TEXTURE_CUBE_MAP,k,tt);for(let Ne=0;Ne<6;Ne++)if(a&&k.mipmaps&&k.mipmaps.length>0)for(let ze=0;ze<k.mipmaps.length;ze++)rt(te.__webglFramebuffer[Ne][ze],B,k,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,ze);else rt(te.__webglFramebuffer[Ne],B,k,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,0);T(k,tt)&&A(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ee){const Ne=B.texture;for(let ze=0,ft=Ne.length;ze<ft;ze++){const Bt=Ne[ze],Ce=n.get(Bt);t.bindTexture(s.TEXTURE_2D,Ce.__webglTexture),Ye(s.TEXTURE_2D,Bt,tt),rt(te.__webglFramebuffer,B,Bt,s.COLOR_ATTACHMENT0+ze,s.TEXTURE_2D,0),T(Bt,tt)&&A(s.TEXTURE_2D)}t.unbindTexture()}else{let Ne=s.TEXTURE_2D;if((B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(a?Ne=B.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ne,Se.__webglTexture),Ye(Ne,k,tt),a&&k.mipmaps&&k.mipmaps.length>0)for(let ze=0;ze<k.mipmaps.length;ze++)rt(te.__webglFramebuffer[ze],B,k,s.COLOR_ATTACHMENT0,Ne,ze);else rt(te.__webglFramebuffer,B,k,s.COLOR_ATTACHMENT0,Ne,0);T(k,tt)&&A(Ne),t.unbindTexture()}B.depthBuffer&&ue(B)}function st(B){const k=w(B)||a,te=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let Se=0,be=te.length;Se<be;Se++){const Ee=te[Se];if(T(Ee,k)){const tt=B.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,Ne=n.get(Ee).__webglTexture;t.bindTexture(tt,Ne),A(tt),t.unbindTexture()}}}function We(B){if(a&&B.samples>0&&yt(B)===!1){const k=B.isWebGLMultipleRenderTargets?B.texture:[B.texture],te=B.width,Se=B.height;let be=s.COLOR_BUFFER_BIT;const Ee=[],tt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Ne=n.get(B),ze=B.isWebGLMultipleRenderTargets===!0;if(ze)for(let ft=0;ft<k.length;ft++)t.bindFramebuffer(s.FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ft,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Ne.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ft,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ne.__webglFramebuffer);for(let ft=0;ft<k.length;ft++){Ee.push(s.COLOR_ATTACHMENT0+ft),B.depthBuffer&&Ee.push(tt);const Bt=Ne.__ignoreDepthValues!==void 0?Ne.__ignoreDepthValues:!1;if(Bt===!1&&(B.depthBuffer&&(be|=s.DEPTH_BUFFER_BIT),B.stencilBuffer&&(be|=s.STENCIL_BUFFER_BIT)),ze&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Ne.__webglColorRenderbuffer[ft]),Bt===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[tt]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[tt])),ze){const Ce=n.get(k[ft]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ce,0)}s.blitFramebuffer(0,0,te,Se,0,0,te,Se,be,s.NEAREST),f&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ee)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),ze)for(let ft=0;ft<k.length;ft++){t.bindFramebuffer(s.FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ft,s.RENDERBUFFER,Ne.__webglColorRenderbuffer[ft]);const Bt=n.get(k[ft]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Ne.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ft,s.TEXTURE_2D,Bt,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Ne.__webglMultisampledFramebuffer)}}function qe(B){return Math.min(h,B.samples)}function yt(B){const k=n.get(B);return a&&B.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&k.__useRenderToTexture!==!1}function Ut(B){const k=o.render.frame;p.get(B)!==k&&(p.set(B,k),B.update())}function dn(B,k){const te=B.colorSpace,Se=B.format,be=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||B.format===vf||te!==Sr&&te!==mi&&(Qt.getTransfer(te)===gn?a===!1?e.has("EXT_sRGB")===!0&&Se===ei?(B.format=vf,B.minFilter=Vn,B.generateMipmaps=!1):k=hy.sRGBToLinear(k):(Se!==ei||be!==Wr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",te)),k}this.allocateTextureUnit=ce,this.resetTextureUnits=ee,this.setTexture2D=fe,this.setTexture2DArray=pe,this.setTexture3D=Oe,this.setTextureCube=le,this.rebindTextures=Me,this.setupRenderTarget=xe,this.updateRenderTargetMipmap=st,this.updateMultisampleRenderTarget=We,this.setupDepthRenderbuffer=ue,this.setupFrameBufferTexture=rt,this.useMultisampledRTT=yt}function yT(s,e,t){const n=t.isWebGL2;function i(r,o=mi){let a;const l=Qt.getTransfer(o);if(r===Wr)return s.UNSIGNED_BYTE;if(r===ty)return s.UNSIGNED_SHORT_4_4_4_4;if(r===ny)return s.UNSIGNED_SHORT_5_5_5_1;if(r===O2)return s.BYTE;if(r===F2)return s.SHORT;if(r===Yf)return s.UNSIGNED_SHORT;if(r===ey)return s.INT;if(r===Br)return s.UNSIGNED_INT;if(r===Ji)return s.FLOAT;if(r===lu)return n?s.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===U2)return s.ALPHA;if(r===ei)return s.RGBA;if(r===B2)return s.LUMINANCE;if(r===z2)return s.LUMINANCE_ALPHA;if(r===Po)return s.DEPTH_COMPONENT;if(r===Ba)return s.DEPTH_STENCIL;if(r===vf)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===V2)return s.RED;if(r===sy)return s.RED_INTEGER;if(r===W2)return s.RG;if(r===iy)return s.RG_INTEGER;if(r===ry)return s.RGBA_INTEGER;if(r===sf||r===rf||r===of||r===af)if(l===gn)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===sf)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===rf)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===of)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===af)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===sf)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===rf)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===of)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===af)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Cg||r===Tg||r===Eg||r===Ag)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Cg)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Tg)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Eg)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ag)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===oy)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Ig||r===Rg)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Ig)return l===gn?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Rg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Mg||r===Ng||r===Pg||r===kg||r===$g||r===Dg||r===Lg||r===Og||r===Fg||r===Ug||r===Bg||r===zg||r===Vg||r===Wg)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(r===Mg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Ng)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Pg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===kg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===$g)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Dg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Lg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Og)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Fg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Ug)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Bg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===zg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Vg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Wg)return l===gn?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===lf||r===Gg||r===Hg)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(r===lf)return l===gn?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===Gg)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===Hg)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===G2||r===Xg||r===qg||r===Kg)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(r===lf)return a.COMPRESSED_RED_RGTC1_EXT;if(r===Xg)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===qg)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Kg)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===No?n?s.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class bT extends as{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class eu extends Yt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const OL={type:"move"};class Im{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new eu,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new eu,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new eu,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){o=!0;for(const x of e.hand.values()){const m=t.getJointPose(x,n),g=this._getHandJoint(u,x);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const c=u.joints["index-finger-tip"],h=u.joints["thumb-tip"],d=c.position.distanceTo(h.position),f=.02,p=.005;u.inputState.pinching&&d>f+p?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&d<=f-p&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(OL)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),u!==null&&(u.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new eu;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class FL extends uo{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=1,u=null,c=null,h=null,d=null,f=null,p=null;const x=t.getContextAttributes();let m=null,g=null;const y=[],v=[],w=new me;let _=null;const T=new as;T.layers.enable(1),T.viewport=new rn;const A=new as;A.layers.enable(2),A.viewport=new rn;const M=[T,A],C=new bT;C.layers.enable(1),C.layers.enable(2);let R=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(le){let ge=y[le];return ge===void 0&&(ge=new Im,y[le]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(le){let ge=y[le];return ge===void 0&&(ge=new Im,y[le]=ge),ge.getGripSpace()},this.getHand=function(le){let ge=y[le];return ge===void 0&&(ge=new Im,y[le]=ge),ge.getHandSpace()};function W(le){const ge=v.indexOf(le.inputSource);if(ge===-1)return;const Fe=y[ge];Fe!==void 0&&(Fe.update(le.inputSource,le.frame,u||o),Fe.dispatchEvent({type:le.type,data:le.inputSource}))}function q(){i.removeEventListener("select",W),i.removeEventListener("selectstart",W),i.removeEventListener("selectend",W),i.removeEventListener("squeeze",W),i.removeEventListener("squeezestart",W),i.removeEventListener("squeezeend",W),i.removeEventListener("end",q),i.removeEventListener("inputsourceschange",O);for(let le=0;le<y.length;le++){const ge=v[le];ge!==null&&(v[le]=null,y[le].disconnect(ge))}R=null,$=null,e.setRenderTarget(m),f=null,d=null,h=null,i=null,g=null,Oe.stop(),n.isPresenting=!1,e.setPixelRatio(_),e.setSize(w.width,w.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(le){r=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(le){a=le,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||o},this.setReferenceSpace=function(le){u=le},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(le){if(i=le,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",W),i.addEventListener("selectstart",W),i.addEventListener("selectend",W),i.addEventListener("squeeze",W),i.addEventListener("squeezestart",W),i.addEventListener("squeezeend",W),i.addEventListener("end",q),i.addEventListener("inputsourceschange",O),x.xrCompatible!==!0&&await t.makeXRCompatible(),_=e.getPixelRatio(),e.getSize(w),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ge={antialias:i.renderState.layers===void 0?x.antialias:!0,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,ge),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),g=new er(f.framebufferWidth,f.framebufferHeight,{format:ei,type:Wr,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let ge=null,Fe=null,Qe=null;x.depth&&(Qe=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ge=x.stencil?Ba:Po,Fe=x.stencil?No:Br);const Ye={colorFormat:t.RGBA8,depthFormat:Qe,scaleFactor:r};h=new XRWebGLBinding(i,t),d=h.createProjectionLayer(Ye),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),g=new er(d.textureWidth,d.textureHeight,{format:ei,type:Wr,depthTexture:new gy(d.textureWidth,d.textureHeight,Fe,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0});const dt=e.properties.get(g);dt.__ignoreDepthValues=d.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(l),u=null,o=await i.requestReferenceSpace(a),Oe.setContext(i),Oe.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function O(le){for(let ge=0;ge<le.removed.length;ge++){const Fe=le.removed[ge],Qe=v.indexOf(Fe);Qe>=0&&(v[Qe]=null,y[Qe].disconnect(Fe))}for(let ge=0;ge<le.added.length;ge++){const Fe=le.added[ge];let Qe=v.indexOf(Fe);if(Qe===-1){for(let dt=0;dt<y.length;dt++)if(dt>=v.length){v.push(Fe),Qe=dt;break}else if(v[dt]===null){v[dt]=Fe,Qe=dt;break}if(Qe===-1)break}const Ye=y[Qe];Ye&&Ye.connect(Fe)}}const H=new U,Z=new U;function ee(le,ge,Fe){H.setFromMatrixPosition(ge.matrixWorld),Z.setFromMatrixPosition(Fe.matrixWorld);const Qe=H.distanceTo(Z),Ye=ge.projectionMatrix.elements,dt=Fe.projectionMatrix.elements,xt=Ye[14]/(Ye[10]-1),nt=Ye[14]/(Ye[10]+1),rt=(Ye[9]+1)/Ye[5],X=(Ye[9]-1)/Ye[5],ye=(Ye[8]-1)/Ye[0],ue=(dt[8]+1)/dt[0],Me=xt*ye,xe=xt*ue,st=Qe/(-ye+ue),We=st*-ye;ge.matrixWorld.decompose(le.position,le.quaternion,le.scale),le.translateX(We),le.translateZ(st),le.matrixWorld.compose(le.position,le.quaternion,le.scale),le.matrixWorldInverse.copy(le.matrixWorld).invert();const qe=xt+st,yt=nt+st,Ut=Me-We,dn=xe+(Qe-We),B=rt*nt/yt*qe,k=X*nt/yt*qe;le.projectionMatrix.makePerspective(Ut,dn,B,k,qe,yt),le.projectionMatrixInverse.copy(le.projectionMatrix).invert()}function ce(le,ge){ge===null?le.matrixWorld.copy(le.matrix):le.matrixWorld.multiplyMatrices(ge.matrixWorld,le.matrix),le.matrixWorldInverse.copy(le.matrixWorld).invert()}this.updateCamera=function(le){if(i===null)return;C.near=A.near=T.near=le.near,C.far=A.far=T.far=le.far,(R!==C.near||$!==C.far)&&(i.updateRenderState({depthNear:C.near,depthFar:C.far}),R=C.near,$=C.far);const ge=le.parent,Fe=C.cameras;ce(C,ge);for(let Qe=0;Qe<Fe.length;Qe++)ce(Fe[Qe],ge);Fe.length===2?ee(C,T,A):C.projectionMatrix.copy(T.projectionMatrix),ne(le,C,ge)};function ne(le,ge,Fe){Fe===null?le.matrix.copy(ge.matrixWorld):(le.matrix.copy(Fe.matrixWorld),le.matrix.invert(),le.matrix.multiply(ge.matrixWorld)),le.matrix.decompose(le.position,le.quaternion,le.scale),le.updateMatrixWorld(!0),le.projectionMatrix.copy(ge.projectionMatrix),le.projectionMatrixInverse.copy(ge.projectionMatrixInverse),le.isPerspectiveCamera&&(le.fov=cu*2*Math.atan(1/le.projectionMatrix.elements[5]),le.zoom=1)}this.getCamera=function(){return C},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(le){l=le,d!==null&&(d.fixedFoveation=le),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=le)};let fe=null;function pe(le,ge){if(c=ge.getViewerPose(u||o),p=ge,c!==null){const Fe=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let Qe=!1;Fe.length!==C.cameras.length&&(C.cameras.length=0,Qe=!0);for(let Ye=0;Ye<Fe.length;Ye++){const dt=Fe[Ye];let xt=null;if(f!==null)xt=f.getViewport(dt);else{const rt=h.getViewSubImage(d,dt);xt=rt.viewport,Ye===0&&(e.setRenderTargetTextures(g,rt.colorTexture,d.ignoreDepthValues?void 0:rt.depthStencilTexture),e.setRenderTarget(g))}let nt=M[Ye];nt===void 0&&(nt=new as,nt.layers.enable(Ye),nt.viewport=new rn,M[Ye]=nt),nt.matrix.fromArray(dt.transform.matrix),nt.matrix.decompose(nt.position,nt.quaternion,nt.scale),nt.projectionMatrix.fromArray(dt.projectionMatrix),nt.projectionMatrixInverse.copy(nt.projectionMatrix).invert(),nt.viewport.set(xt.x,xt.y,xt.width,xt.height),Ye===0&&(C.matrix.copy(nt.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale)),Qe===!0&&C.cameras.push(nt)}}for(let Fe=0;Fe<y.length;Fe++){const Qe=v[Fe],Ye=y[Fe];Qe!==null&&Ye!==void 0&&Ye.update(Qe,ge,u||o)}fe&&fe(le,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),p=null}const Oe=new dT;Oe.setAnimationLoop(pe),this.setAnimationLoop=function(le){fe=le},this.dispose=function(){}}}function UL(s,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function n(m,g){g.color.getRGB(m.fogColor.value,lT(s)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function i(m,g,y,v,w){g.isMeshBasicMaterial||g.isMeshLambertMaterial?r(m,g):g.isMeshToonMaterial?(r(m,g),h(m,g)):g.isMeshPhongMaterial?(r(m,g),c(m,g)):g.isMeshStandardMaterial?(r(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,w)):g.isMeshMatcapMaterial?(r(m,g),p(m,g)):g.isMeshDepthMaterial?r(m,g):g.isMeshDistanceMaterial?(r(m,g),x(m,g)):g.isMeshNormalMaterial?r(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,y,v):g.isSpriteMaterial?u(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function r(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===Fs&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===Fs&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const y=e.get(g).envMap;if(y&&(m.envMap.value=y,m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const v=s._useLegacyLights===!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*v,t(g.lightMap,m.lightMapTransform)}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,y,v){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*y,m.scale.value=v*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,y){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Fs&&m.clearcoatNormalScale.value.negate())),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function x(m,g){const y=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(y.matrixWorld),m.nearDistance.value=y.shadow.camera.near,m.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function BL(s,e,t,n){let i={},r={},o=[];const a=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(y,v){const w=v.program;n.uniformBlockBinding(y,w)}function u(y,v){let w=i[y.id];w===void 0&&(p(y),w=c(y),i[y.id]=w,y.addEventListener("dispose",m));const _=v.program;n.updateUBOMapping(y,_);const T=e.render.frame;r[y.id]!==T&&(d(y),r[y.id]=T)}function c(y){const v=h();y.__bindingPointIndex=v;const w=s.createBuffer(),_=y.__size,T=y.usage;return s.bindBuffer(s.UNIFORM_BUFFER,w),s.bufferData(s.UNIFORM_BUFFER,_,T),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,v,w),w}function h(){for(let y=0;y<a;y++)if(o.indexOf(y)===-1)return o.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(y){const v=i[y.id],w=y.uniforms,_=y.__cache;s.bindBuffer(s.UNIFORM_BUFFER,v);for(let T=0,A=w.length;T<A;T++){const M=w[T];if(f(M,T,_)===!0){const C=M.__offset,R=Array.isArray(M.value)?M.value:[M.value];let $=0;for(let W=0;W<R.length;W++){const q=R[W],O=x(q);typeof q=="number"?(M.__data[0]=q,s.bufferSubData(s.UNIFORM_BUFFER,C+$,M.__data)):q.isMatrix3?(M.__data[0]=q.elements[0],M.__data[1]=q.elements[1],M.__data[2]=q.elements[2],M.__data[3]=q.elements[0],M.__data[4]=q.elements[3],M.__data[5]=q.elements[4],M.__data[6]=q.elements[5],M.__data[7]=q.elements[0],M.__data[8]=q.elements[6],M.__data[9]=q.elements[7],M.__data[10]=q.elements[8],M.__data[11]=q.elements[0]):(q.toArray(M.__data,$),$+=O.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,C,M.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(y,v,w){const _=y.value;if(w[v]===void 0){if(typeof _=="number")w[v]=_;else{const T=Array.isArray(_)?_:[_],A=[];for(let M=0;M<T.length;M++)A.push(T[M].clone());w[v]=A}return!0}else if(typeof _=="number"){if(w[v]!==_)return w[v]=_,!0}else{const T=Array.isArray(w[v])?w[v]:[w[v]],A=Array.isArray(_)?_:[_];for(let M=0;M<T.length;M++){const C=T[M];if(C.equals(A[M])===!1)return C.copy(A[M]),!0}}return!1}function p(y){const v=y.uniforms;let w=0;const _=16;let T=0;for(let A=0,M=v.length;A<M;A++){const C=v[A],R={boundary:0,storage:0},$=Array.isArray(C.value)?C.value:[C.value];for(let W=0,q=$.length;W<q;W++){const O=$[W],H=x(O);R.boundary+=H.boundary,R.storage+=H.storage}if(C.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),C.__offset=w,A>0){T=w%_;const W=_-T;T!==0&&W-R.boundary<0&&(w+=_-T,C.__offset=w)}w+=R.storage}return T=w%_,T>0&&(w+=_-T),y.__size=w,y.__cache={},this}function x(y){const v={boundary:0,storage:0};return typeof y=="number"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function m(y){const v=y.target;v.removeEventListener("dispose",m);const w=o.indexOf(v.__bindingPointIndex);o.splice(w,1),s.deleteBuffer(i[v.id]),delete i[v.id],delete r[v.id]}function g(){for(const y in i)s.deleteBuffer(i[y]);o=[],i={},r={}}return{bind:l,update:u,dispose:g}}class by{constructor(e={}){const{canvas:t=rT(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=o;const f=new Uint32Array(4),p=new Int32Array(4);let x=null,m=null;const g=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Jn,this._useLegacyLights=!1,this.toneMapping=Vr,this.toneMappingExposure=1;const v=this;let w=!1,_=0,T=0,A=null,M=-1,C=null;const R=new rn,$=new rn;let W=null;const q=new Xe(0);let O=0,H=t.width,Z=t.height,ee=1,ce=null,ne=null;const fe=new rn(0,0,H,Z),pe=new rn(0,0,H,Z);let Oe=!1;const le=new Ah;let ge=!1,Fe=!1,Qe=null;const Ye=new bt,dt=new me,xt=new U,nt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function rt(){return A===null?ee:1}let X=n;function ye(L,Q){for(let ie=0;ie<L.length;ie++){const oe=L[ie],re=t.getContext(oe,Q);if(re!==null)return re}return null}try{const L={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Sh}`),t.addEventListener("webglcontextlost",Et,!1),t.addEventListener("webglcontextrestored",Y,!1),t.addEventListener("webglcontextcreationerror",He,!1),X===null){const Q=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&Q.shift(),X=ye(Q,L),X===null)throw ye(Q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&X instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let ue,Me,xe,st,We,qe,yt,Ut,dn,B,k,te,Se,be,Ee,tt,Ne,ze,ft,Bt,Ce,Zt,_t,pt;function ot(){ue=new tD(X),Me=new j$(X,ue,e),ue.init(Me),Zt=new yT(X,ue,Me),xe=new DL(X,ue,Me),st=new iD(X),We=new _L,qe=new LL(X,ue,xe,We,Me,Zt,st),yt=new Z$(v),Ut=new eD(v),dn=new dk(X,Me),_t=new q$(X,ue,dn,Me),B=new nD(X,dn,st,_t),k=new lD(X,B,dn,st),ft=new aD(X,Me,qe),tt=new Y$(We),te=new SL(v,yt,Ut,ue,Me,_t,tt),Se=new UL(v,We),be=new TL,Ee=new NL(ue,Me),ze=new X$(v,yt,Ut,xe,k,d,l),Ne=new $L(v,k,Me),pt=new BL(X,st,Me,xe),Bt=new K$(X,ue,st,Me),Ce=new sD(X,ue,st,Me),st.programs=te.programs,v.capabilities=Me,v.extensions=ue,v.properties=We,v.renderLists=be,v.shadowMap=Ne,v.state=xe,v.info=st}ot();const Ge=new FL(v,X);this.xr=Ge,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const L=ue.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=ue.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return ee},this.setPixelRatio=function(L){L!==void 0&&(ee=L,this.setSize(H,Z,!1))},this.getSize=function(L){return L.set(H,Z)},this.setSize=function(L,Q,ie=!0){if(Ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=L,Z=Q,t.width=Math.floor(L*ee),t.height=Math.floor(Q*ee),ie===!0&&(t.style.width=L+"px",t.style.height=Q+"px"),this.setViewport(0,0,L,Q)},this.getDrawingBufferSize=function(L){return L.set(H*ee,Z*ee).floor()},this.setDrawingBufferSize=function(L,Q,ie){H=L,Z=Q,ee=ie,t.width=Math.floor(L*ie),t.height=Math.floor(Q*ie),this.setViewport(0,0,L,Q)},this.getCurrentViewport=function(L){return L.copy(R)},this.getViewport=function(L){return L.copy(fe)},this.setViewport=function(L,Q,ie,oe){L.isVector4?fe.set(L.x,L.y,L.z,L.w):fe.set(L,Q,ie,oe),xe.viewport(R.copy(fe).multiplyScalar(ee).floor())},this.getScissor=function(L){return L.copy(pe)},this.setScissor=function(L,Q,ie,oe){L.isVector4?pe.set(L.x,L.y,L.z,L.w):pe.set(L,Q,ie,oe),xe.scissor($.copy(pe).multiplyScalar(ee).floor())},this.getScissorTest=function(){return Oe},this.setScissorTest=function(L){xe.setScissorTest(Oe=L)},this.setOpaqueSort=function(L){ce=L},this.setTransparentSort=function(L){ne=L},this.getClearColor=function(L){return L.copy(ze.getClearColor())},this.setClearColor=function(){ze.setClearColor.apply(ze,arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha.apply(ze,arguments)},this.clear=function(L=!0,Q=!0,ie=!0){let oe=0;if(L){let re=!1;if(A!==null){const De=A.texture.format;re=De===ry||De===iy||De===sy}if(re){const De=A.texture.type,Ke=De===Wr||De===Br||De===Yf||De===No||De===ty||De===ny,at=ze.getClearColor(),ct=ze.getClearAlpha(),Tt=at.r,vt=at.g,wt=at.b;Ke?(f[0]=Tt,f[1]=vt,f[2]=wt,f[3]=ct,X.clearBufferuiv(X.COLOR,0,f)):(p[0]=Tt,p[1]=vt,p[2]=wt,p[3]=ct,X.clearBufferiv(X.COLOR,0,p))}else oe|=X.COLOR_BUFFER_BIT}Q&&(oe|=X.DEPTH_BUFFER_BIT),ie&&(oe|=X.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),X.clear(oe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Et,!1),t.removeEventListener("webglcontextrestored",Y,!1),t.removeEventListener("webglcontextcreationerror",He,!1),be.dispose(),Ee.dispose(),We.dispose(),yt.dispose(),Ut.dispose(),k.dispose(),_t.dispose(),pt.dispose(),te.dispose(),Ge.dispose(),Ge.removeEventListener("sessionstart",Hn),Ge.removeEventListener("sessionend",ln),Qe&&(Qe.dispose(),Qe=null),Dn.stop()};function Et(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function Y(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const L=st.autoReset,Q=Ne.enabled,ie=Ne.autoUpdate,oe=Ne.needsUpdate,re=Ne.type;ot(),st.autoReset=L,Ne.enabled=Q,Ne.autoUpdate=ie,Ne.needsUpdate=oe,Ne.type=re}function He(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function _e(L){const Q=L.target;Q.removeEventListener("dispose",_e),de(Q)}function de(L){Ae(L),We.remove(L)}function Ae(L){const Q=We.get(L).programs;Q!==void 0&&(Q.forEach(function(ie){te.releaseProgram(ie)}),L.isShaderMaterial&&te.releaseShaderCache(L))}this.renderBufferDirect=function(L,Q,ie,oe,re,De){Q===null&&(Q=nt);const Ke=re.isMesh&&re.matrixWorld.determinant()<0,at=ml(L,Q,ie,oe,re);xe.setMaterial(oe,Ke);let ct=ie.index,Tt=1;if(oe.wireframe===!0){if(ct=B.getWireframeAttribute(ie),ct===void 0)return;Tt=2}const vt=ie.drawRange,wt=ie.attributes.position;let Kt=vt.start*Tt,ys=(vt.start+vt.count)*Tt;De!==null&&(Kt=Math.max(Kt,De.start*Tt),ys=Math.min(ys,(De.start+De.count)*Tt)),ct!==null?(Kt=Math.max(Kt,0),ys=Math.min(ys,ct.count)):wt!=null&&(Kt=Math.max(Kt,0),ys=Math.min(ys,wt.count));const Mn=ys-Kt;if(Mn<0||Mn===1/0)return;_t.setup(re,oe,at,ie,ct);let Xn,un=Bt;if(ct!==null&&(Xn=dn.get(ct),un=Ce,un.setIndex(Xn)),re.isMesh)oe.wireframe===!0?(xe.setLineWidth(oe.wireframeLinewidth*rt()),un.setMode(X.LINES)):un.setMode(X.TRIANGLES);else if(re.isLine){let kt=oe.linewidth;kt===void 0&&(kt=1),xe.setLineWidth(kt*rt()),re.isLineSegments?un.setMode(X.LINES):re.isLineLoop?un.setMode(X.LINE_LOOP):un.setMode(X.LINE_STRIP)}else re.isPoints?un.setMode(X.POINTS):re.isSprite&&un.setMode(X.TRIANGLES);if(re.isBatchedMesh)un.renderMultiDraw(re._multiDrawStarts,re._multiDrawCounts,re._multiDrawCount);else if(re.isInstancedMesh)un.renderInstances(Kt,Mn,re.count);else if(ie.isInstancedBufferGeometry){const kt=ie._maxInstanceCount!==void 0?ie._maxInstanceCount:1/0,xl=Math.min(ie.instanceCount,kt);un.renderInstances(Kt,Mn,xl)}else un.render(Kt,Mn)};function lt(L,Q,ie){L.transparent===!0&&L.side===hr&&L.forceSinglePass===!1?(L.side=Fs,L.needsUpdate=!0,ks(L,Q,ie),L.side=jr,L.needsUpdate=!0,ks(L,Q,ie),L.side=hr):ks(L,Q,ie)}this.compile=function(L,Q,ie=null){ie===null&&(ie=L),m=Ee.get(ie),m.init(),y.push(m),ie.traverseVisible(function(re){re.isLight&&re.layers.test(Q.layers)&&(m.pushLight(re),re.castShadow&&m.pushShadow(re))}),L!==ie&&L.traverseVisible(function(re){re.isLight&&re.layers.test(Q.layers)&&(m.pushLight(re),re.castShadow&&m.pushShadow(re))}),m.setupLights(v._useLegacyLights);const oe=new Set;return L.traverse(function(re){const De=re.material;if(De)if(Array.isArray(De))for(let Ke=0;Ke<De.length;Ke++){const at=De[Ke];lt(at,ie,re),oe.add(at)}else lt(De,ie,re),oe.add(De)}),y.pop(),m=null,oe},this.compileAsync=function(L,Q,ie=null){const oe=this.compile(L,Q,ie);return new Promise(re=>{function De(){if(oe.forEach(function(Ke){We.get(Ke).currentProgram.isReady()&&oe.delete(Ke)}),oe.size===0){re(L);return}setTimeout(De,10)}ue.get("KHR_parallel_shader_compile")!==null?De():setTimeout(De,10)})};let zt=null;function Rn(L){zt&&zt(L)}function Hn(){Dn.stop()}function ln(){Dn.start()}const Dn=new dT;Dn.setAnimationLoop(Rn),typeof self<"u"&&Dn.setContext(self),this.setAnimationLoop=function(L){zt=L,Ge.setAnimationLoop(L),L===null?Dn.stop():Dn.start()},Ge.addEventListener("sessionstart",Hn),Ge.addEventListener("sessionend",ln),this.render=function(L,Q){if(Q!==void 0&&Q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),Q.parent===null&&Q.matrixWorldAutoUpdate===!0&&Q.updateMatrixWorld(),Ge.enabled===!0&&Ge.isPresenting===!0&&(Ge.cameraAutoUpdate===!0&&Ge.updateCamera(Q),Q=Ge.getCamera()),L.isScene===!0&&L.onBeforeRender(v,L,Q,A),m=Ee.get(L,y.length),m.init(),y.push(m),Ye.multiplyMatrices(Q.projectionMatrix,Q.matrixWorldInverse),le.setFromProjectionMatrix(Ye),Fe=this.localClippingEnabled,ge=tt.init(this.clippingPlanes,Fe),x=be.get(L,g.length),x.init(),g.push(x),Si(L,Q,0,v.sortObjects),x.finish(),v.sortObjects===!0&&x.sort(ce,ne),this.info.render.frame++,ge===!0&&tt.beginShadows();const ie=m.state.shadowsArray;if(Ne.render(ie,L,Q),ge===!0&&tt.endShadows(),this.info.autoReset===!0&&this.info.reset(),ze.render(x,L),m.setupLights(v._useLegacyLights),Q.isArrayCamera){const oe=Q.cameras;for(let re=0,De=oe.length;re<De;re++){const Ke=oe[re];_i(x,L,Ke,Ke.viewport)}}else _i(x,L,Q);A!==null&&(qe.updateMultisampleRenderTarget(A),qe.updateRenderTargetMipmap(A)),L.isScene===!0&&L.onAfterRender(v,L,Q),_t.resetDefaultState(),M=-1,C=null,y.pop(),y.length>0?m=y[y.length-1]:m=null,g.pop(),g.length>0?x=g[g.length-1]:x=null};function Si(L,Q,ie,oe){if(L.visible===!1)return;if(L.layers.test(Q.layers)){if(L.isGroup)ie=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(Q);else if(L.isLight)m.pushLight(L),L.castShadow&&m.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||le.intersectsSprite(L)){oe&&xt.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Ye);const Ke=k.update(L),at=L.material;at.visible&&x.push(L,Ke,at,ie,xt.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||le.intersectsObject(L))){const Ke=k.update(L),at=L.material;if(oe&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),xt.copy(L.boundingSphere.center)):(Ke.boundingSphere===null&&Ke.computeBoundingSphere(),xt.copy(Ke.boundingSphere.center)),xt.applyMatrix4(L.matrixWorld).applyMatrix4(Ye)),Array.isArray(at)){const ct=Ke.groups;for(let Tt=0,vt=ct.length;Tt<vt;Tt++){const wt=ct[Tt],Kt=at[wt.materialIndex];Kt&&Kt.visible&&x.push(L,Ke,Kt,ie,xt.z,wt)}}else at.visible&&x.push(L,Ke,at,ie,xt.z,null)}}const De=L.children;for(let Ke=0,at=De.length;Ke<at;Ke++)Si(De[Ke],Q,ie,oe)}function _i(L,Q,ie,oe){const re=L.opaque,De=L.transmissive,Ke=L.transparent;m.setupLightsView(ie),ge===!0&&tt.setGlobalState(v.clippingPlanes,ie),De.length>0&&Ir(re,De,Q,ie),oe&&xe.viewport(R.copy(oe)),re.length>0&&ta(re,Q,ie),De.length>0&&ta(De,Q,ie),Ke.length>0&&ta(Ke,Q,ie),xe.buffers.depth.setTest(!0),xe.buffers.depth.setMask(!0),xe.buffers.color.setMask(!0),xe.setPolygonOffset(!1)}function Ir(L,Q,ie,oe){if((ie.isScene===!0?ie.overrideMaterial:null)!==null)return;const De=Me.isWebGL2;Qe===null&&(Qe=new er(1,1,{generateMipmaps:!0,type:ue.has("EXT_color_buffer_half_float")?lu:Wr,minFilter:Uo,samples:De?4:0})),v.getDrawingBufferSize(dt),De?Qe.setSize(dt.x,dt.y):Qe.setSize(wf(dt.x),wf(dt.y));const Ke=v.getRenderTarget();v.setRenderTarget(Qe),v.getClearColor(q),O=v.getClearAlpha(),O<1&&v.setClearColor(16777215,.5),v.clear();const at=v.toneMapping;v.toneMapping=Vr,ta(L,ie,oe),qe.updateMultisampleRenderTarget(Qe),qe.updateRenderTargetMipmap(Qe);let ct=!1;for(let Tt=0,vt=Q.length;Tt<vt;Tt++){const wt=Q[Tt],Kt=wt.object,ys=wt.geometry,Mn=wt.material,Xn=wt.group;if(Mn.side===hr&&Kt.layers.test(oe.layers)){const un=Mn.side;Mn.side=Fs,Mn.needsUpdate=!0,_n(Kt,ie,oe,ys,Mn,Xn),Mn.side=un,Mn.needsUpdate=!0,ct=!0}}ct===!0&&(qe.updateMultisampleRenderTarget(Qe),qe.updateRenderTargetMipmap(Qe)),v.setRenderTarget(Ke),v.setClearColor(q,O),v.toneMapping=at}function ta(L,Q,ie){const oe=Q.isScene===!0?Q.overrideMaterial:null;for(let re=0,De=L.length;re<De;re++){const Ke=L[re],at=Ke.object,ct=Ke.geometry,Tt=oe===null?Ke.material:oe,vt=Ke.group;at.layers.test(ie.layers)&&_n(at,Q,ie,ct,Tt,vt)}}function _n(L,Q,ie,oe,re,De){L.onBeforeRender(v,Q,ie,oe,re,De),L.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),re.onBeforeRender(v,Q,ie,oe,L,De),re.transparent===!0&&re.side===hr&&re.forceSinglePass===!1?(re.side=Fs,re.needsUpdate=!0,v.renderBufferDirect(ie,Q,oe,re,L,De),re.side=jr,re.needsUpdate=!0,v.renderBufferDirect(ie,Q,oe,re,L,De),re.side=hr):v.renderBufferDirect(ie,Q,oe,re,L,De),L.onAfterRender(v,Q,ie,oe,re,De)}function ks(L,Q,ie){Q.isScene!==!0&&(Q=nt);const oe=We.get(L),re=m.state.lights,De=m.state.shadowsArray,Ke=re.state.version,at=te.getParameters(L,re.state,De,Q,ie),ct=te.getProgramCacheKey(at);let Tt=oe.programs;oe.environment=L.isMeshStandardMaterial?Q.environment:null,oe.fog=Q.fog,oe.envMap=(L.isMeshStandardMaterial?Ut:yt).get(L.envMap||oe.environment),Tt===void 0&&(L.addEventListener("dispose",_e),Tt=new Map,oe.programs=Tt);let vt=Tt.get(ct);if(vt!==void 0){if(oe.currentProgram===vt&&oe.lightsStateVersion===Ke)return Kh(L,at),vt}else at.uniforms=te.getUniforms(L),L.onBuild(ie,at,v),L.onBeforeCompile(at,v),vt=te.acquireProgram(at,ct),Tt.set(ct,vt),oe.uniforms=at.uniforms;const wt=oe.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(wt.clippingPlanes=tt.uniform),Kh(L,at),oe.needsLights=gl(L),oe.lightsStateVersion=Ke,oe.needsLights&&(wt.ambientLightColor.value=re.state.ambient,wt.lightProbe.value=re.state.probe,wt.directionalLights.value=re.state.directional,wt.directionalLightShadows.value=re.state.directionalShadow,wt.spotLights.value=re.state.spot,wt.spotLightShadows.value=re.state.spotShadow,wt.rectAreaLights.value=re.state.rectArea,wt.ltc_1.value=re.state.rectAreaLTC1,wt.ltc_2.value=re.state.rectAreaLTC2,wt.pointLights.value=re.state.point,wt.pointLightShadows.value=re.state.pointShadow,wt.hemisphereLights.value=re.state.hemi,wt.directionalShadowMap.value=re.state.directionalShadowMap,wt.directionalShadowMatrix.value=re.state.directionalShadowMatrix,wt.spotShadowMap.value=re.state.spotShadowMap,wt.spotLightMatrix.value=re.state.spotLightMatrix,wt.spotLightMap.value=re.state.spotLightMap,wt.pointShadowMap.value=re.state.pointShadowMap,wt.pointShadowMatrix.value=re.state.pointShadowMatrix),oe.currentProgram=vt,oe.uniformsList=null,vt}function pl(L){if(L.uniformsList===null){const Q=L.currentProgram.getUniforms();L.uniformsList=cf.seqWithValue(Q.seq,L.uniforms)}return L.uniformsList}function Kh(L,Q){const ie=We.get(L);ie.outputColorSpace=Q.outputColorSpace,ie.batching=Q.batching,ie.instancing=Q.instancing,ie.instancingColor=Q.instancingColor,ie.skinning=Q.skinning,ie.morphTargets=Q.morphTargets,ie.morphNormals=Q.morphNormals,ie.morphColors=Q.morphColors,ie.morphTargetsCount=Q.morphTargetsCount,ie.numClippingPlanes=Q.numClippingPlanes,ie.numIntersection=Q.numClipIntersection,ie.vertexAlphas=Q.vertexAlphas,ie.vertexTangents=Q.vertexTangents,ie.toneMapping=Q.toneMapping}function ml(L,Q,ie,oe,re){Q.isScene!==!0&&(Q=nt),qe.resetTextureUnits();const De=Q.fog,Ke=oe.isMeshStandardMaterial?Q.environment:null,at=A===null?v.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:Sr,ct=(oe.isMeshStandardMaterial?Ut:yt).get(oe.envMap||Ke),Tt=oe.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,vt=!!ie.attributes.tangent&&(!!oe.normalMap||oe.anisotropy>0),wt=!!ie.morphAttributes.position,Kt=!!ie.morphAttributes.normal,ys=!!ie.morphAttributes.color;let Mn=Vr;oe.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(Mn=v.toneMapping);const Xn=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,un=Xn!==void 0?Xn.length:0,kt=We.get(oe),xl=m.state.lights;if(ge===!0&&(Fe===!0||L!==C)){const $s=L===C&&oe.id===M;tt.setState(oe,L,$s)}let pn=!1;oe.version===kt.__version?(kt.needsLights&&kt.lightsStateVersion!==xl.state.version||kt.outputColorSpace!==at||re.isBatchedMesh&&kt.batching===!1||!re.isBatchedMesh&&kt.batching===!0||re.isInstancedMesh&&kt.instancing===!1||!re.isInstancedMesh&&kt.instancing===!0||re.isSkinnedMesh&&kt.skinning===!1||!re.isSkinnedMesh&&kt.skinning===!0||re.isInstancedMesh&&kt.instancingColor===!0&&re.instanceColor===null||re.isInstancedMesh&&kt.instancingColor===!1&&re.instanceColor!==null||kt.envMap!==ct||oe.fog===!0&&kt.fog!==De||kt.numClippingPlanes!==void 0&&(kt.numClippingPlanes!==tt.numPlanes||kt.numIntersection!==tt.numIntersection)||kt.vertexAlphas!==Tt||kt.vertexTangents!==vt||kt.morphTargets!==wt||kt.morphNormals!==Kt||kt.morphColors!==ys||kt.toneMapping!==Mn||Me.isWebGL2===!0&&kt.morphTargetsCount!==un)&&(pn=!0):(pn=!0,kt.__version=oe.version);let Rr=kt.currentProgram;pn===!0&&(Rr=ks(oe,Q,re));let jh=!1,go=!1,yl=!1;const Zn=Rr.getUniforms(),ar=kt.uniforms;if(xe.useProgram(Rr.program)&&(jh=!0,go=!0,yl=!0),oe.id!==M&&(M=oe.id,go=!0),jh||C!==L){Zn.setValue(X,"projectionMatrix",L.projectionMatrix),Zn.setValue(X,"viewMatrix",L.matrixWorldInverse);const $s=Zn.map.cameraPosition;$s!==void 0&&$s.setValue(X,xt.setFromMatrixPosition(L.matrixWorld)),Me.logarithmicDepthBuffer&&Zn.setValue(X,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(oe.isMeshPhongMaterial||oe.isMeshToonMaterial||oe.isMeshLambertMaterial||oe.isMeshBasicMaterial||oe.isMeshStandardMaterial||oe.isShaderMaterial)&&Zn.setValue(X,"isOrthographic",L.isOrthographicCamera===!0),C!==L&&(C=L,go=!0,yl=!0)}if(re.isSkinnedMesh){Zn.setOptional(X,re,"bindMatrix"),Zn.setOptional(X,re,"bindMatrixInverse");const $s=re.skeleton;$s&&(Me.floatVertexTextures?($s.boneTexture===null&&$s.computeBoneTexture(),Zn.setValue(X,"boneTexture",$s.boneTexture,qe)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}re.isBatchedMesh&&(Zn.setOptional(X,re,"batchingTexture"),Zn.setValue(X,"batchingTexture",re._matricesTexture,qe));const rs=ie.morphAttributes;if((rs.position!==void 0||rs.normal!==void 0||rs.color!==void 0&&Me.isWebGL2===!0)&&ft.update(re,ie,Rr),(go||kt.receiveShadow!==re.receiveShadow)&&(kt.receiveShadow=re.receiveShadow,Zn.setValue(X,"receiveShadow",re.receiveShadow)),oe.isMeshGouraudMaterial&&oe.envMap!==null&&(ar.envMap.value=ct,ar.flipEnvMap.value=ct.isCubeTexture&&ct.isRenderTargetTexture===!1?-1:1),go&&(Zn.setValue(X,"toneMappingExposure",v.toneMappingExposure),kt.needsLights&&Ku(ar,yl),De&&oe.fog===!0&&Se.refreshFogUniforms(ar,De),Se.refreshMaterialUniforms(ar,oe,ee,Z,Qe),cf.upload(X,pl(kt),ar,qe)),oe.isShaderMaterial&&oe.uniformsNeedUpdate===!0&&(cf.upload(X,pl(kt),ar,qe),oe.uniformsNeedUpdate=!1),oe.isSpriteMaterial&&Zn.setValue(X,"center",re.center),Zn.setValue(X,"modelViewMatrix",re.modelViewMatrix),Zn.setValue(X,"normalMatrix",re.normalMatrix),Zn.setValue(X,"modelMatrix",re.matrixWorld),oe.isShaderMaterial||oe.isRawShaderMaterial){const $s=oe.uniformsGroups;for(let bl=0,vl=$s.length;bl<vl;bl++)if(Me.isWebGL2){const ju=$s[bl];pt.update(ju,Rr),pt.bind(ju,Rr)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Rr}function Ku(L,Q){L.ambientLightColor.needsUpdate=Q,L.lightProbe.needsUpdate=Q,L.directionalLights.needsUpdate=Q,L.directionalLightShadows.needsUpdate=Q,L.pointLights.needsUpdate=Q,L.pointLightShadows.needsUpdate=Q,L.spotLights.needsUpdate=Q,L.spotLightShadows.needsUpdate=Q,L.rectAreaLights.needsUpdate=Q,L.hemisphereLights.needsUpdate=Q}function gl(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(L,Q,ie){We.get(L.texture).__webglTexture=Q,We.get(L.depthTexture).__webglTexture=ie;const oe=We.get(L);oe.__hasExternalTextures=!0,oe.__hasExternalTextures&&(oe.__autoAllocateDepthBuffer=ie===void 0,oe.__autoAllocateDepthBuffer||ue.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),oe.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(L,Q){const ie=We.get(L);ie.__webglFramebuffer=Q,ie.__useDefaultFramebuffer=Q===void 0},this.setRenderTarget=function(L,Q=0,ie=0){A=L,_=Q,T=ie;let oe=!0,re=null,De=!1,Ke=!1;if(L){const ct=We.get(L);ct.__useDefaultFramebuffer!==void 0?(xe.bindFramebuffer(X.FRAMEBUFFER,null),oe=!1):ct.__webglFramebuffer===void 0?qe.setupRenderTarget(L):ct.__hasExternalTextures&&qe.rebindTextures(L,We.get(L.texture).__webglTexture,We.get(L.depthTexture).__webglTexture);const Tt=L.texture;(Tt.isData3DTexture||Tt.isDataArrayTexture||Tt.isCompressedArrayTexture)&&(Ke=!0);const vt=We.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(vt[Q])?re=vt[Q][ie]:re=vt[Q],De=!0):Me.isWebGL2&&L.samples>0&&qe.useMultisampledRTT(L)===!1?re=We.get(L).__webglMultisampledFramebuffer:Array.isArray(vt)?re=vt[ie]:re=vt,R.copy(L.viewport),$.copy(L.scissor),W=L.scissorTest}else R.copy(fe).multiplyScalar(ee).floor(),$.copy(pe).multiplyScalar(ee).floor(),W=Oe;if(xe.bindFramebuffer(X.FRAMEBUFFER,re)&&Me.drawBuffers&&oe&&xe.drawBuffers(L,re),xe.viewport(R),xe.scissor($),xe.setScissorTest(W),De){const ct=We.get(L.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+Q,ct.__webglTexture,ie)}else if(Ke){const ct=We.get(L.texture),Tt=Q||0;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,ct.__webglTexture,ie||0,Tt)}M=-1},this.readRenderTargetPixels=function(L,Q,ie,oe,re,De,Ke){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let at=We.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ke!==void 0&&(at=at[Ke]),at){xe.bindFramebuffer(X.FRAMEBUFFER,at);try{const ct=L.texture,Tt=ct.format,vt=ct.type;if(Tt!==ei&&Zt.convert(Tt)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const wt=vt===lu&&(ue.has("EXT_color_buffer_half_float")||Me.isWebGL2&&ue.has("EXT_color_buffer_float"));if(vt!==Wr&&Zt.convert(vt)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&!(vt===Ji&&(Me.isWebGL2||ue.has("OES_texture_float")||ue.has("WEBGL_color_buffer_float")))&&!wt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Q>=0&&Q<=L.width-oe&&ie>=0&&ie<=L.height-re&&X.readPixels(Q,ie,oe,re,Zt.convert(Tt),Zt.convert(vt),De)}finally{const ct=A!==null?We.get(A).__webglFramebuffer:null;xe.bindFramebuffer(X.FRAMEBUFFER,ct)}}},this.copyFramebufferToTexture=function(L,Q,ie=0){const oe=Math.pow(2,-ie),re=Math.floor(Q.image.width*oe),De=Math.floor(Q.image.height*oe);qe.setTexture2D(Q,0),X.copyTexSubImage2D(X.TEXTURE_2D,ie,0,0,L.x,L.y,re,De),xe.unbindTexture()},this.copyTextureToTexture=function(L,Q,ie,oe=0){const re=Q.image.width,De=Q.image.height,Ke=Zt.convert(ie.format),at=Zt.convert(ie.type);qe.setTexture2D(ie,0),X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,ie.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ie.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,ie.unpackAlignment),Q.isDataTexture?X.texSubImage2D(X.TEXTURE_2D,oe,L.x,L.y,re,De,Ke,at,Q.image.data):Q.isCompressedTexture?X.compressedTexSubImage2D(X.TEXTURE_2D,oe,L.x,L.y,Q.mipmaps[0].width,Q.mipmaps[0].height,Ke,Q.mipmaps[0].data):X.texSubImage2D(X.TEXTURE_2D,oe,L.x,L.y,Ke,at,Q.image),oe===0&&ie.generateMipmaps&&X.generateMipmap(X.TEXTURE_2D),xe.unbindTexture()},this.copyTextureToTexture3D=function(L,Q,ie,oe,re=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const De=L.max.x-L.min.x+1,Ke=L.max.y-L.min.y+1,at=L.max.z-L.min.z+1,ct=Zt.convert(oe.format),Tt=Zt.convert(oe.type);let vt;if(oe.isData3DTexture)qe.setTexture3D(oe,0),vt=X.TEXTURE_3D;else if(oe.isDataArrayTexture)qe.setTexture2DArray(oe,0),vt=X.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,oe.flipY),X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),X.pixelStorei(X.UNPACK_ALIGNMENT,oe.unpackAlignment);const wt=X.getParameter(X.UNPACK_ROW_LENGTH),Kt=X.getParameter(X.UNPACK_IMAGE_HEIGHT),ys=X.getParameter(X.UNPACK_SKIP_PIXELS),Mn=X.getParameter(X.UNPACK_SKIP_ROWS),Xn=X.getParameter(X.UNPACK_SKIP_IMAGES),un=ie.isCompressedTexture?ie.mipmaps[0]:ie.image;X.pixelStorei(X.UNPACK_ROW_LENGTH,un.width),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,un.height),X.pixelStorei(X.UNPACK_SKIP_PIXELS,L.min.x),X.pixelStorei(X.UNPACK_SKIP_ROWS,L.min.y),X.pixelStorei(X.UNPACK_SKIP_IMAGES,L.min.z),ie.isDataTexture||ie.isData3DTexture?X.texSubImage3D(vt,re,Q.x,Q.y,Q.z,De,Ke,at,ct,Tt,un.data):ie.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(vt,re,Q.x,Q.y,Q.z,De,Ke,at,ct,un.data)):X.texSubImage3D(vt,re,Q.x,Q.y,Q.z,De,Ke,at,ct,Tt,un),X.pixelStorei(X.UNPACK_ROW_LENGTH,wt),X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,Kt),X.pixelStorei(X.UNPACK_SKIP_PIXELS,ys),X.pixelStorei(X.UNPACK_SKIP_ROWS,Mn),X.pixelStorei(X.UNPACK_SKIP_IMAGES,Xn),re===0&&oe.generateMipmaps&&X.generateMipmap(vt),xe.unbindTexture()},this.initTexture=function(L){L.isCubeTexture?qe.setTextureCube(L,0):L.isData3DTexture?qe.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?qe.setTexture2DArray(L,0):qe.setTexture2D(L,0),xe.unbindTexture()},this.resetState=function(){_=0,T=0,A=null,xe.reset(),_t.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Qi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Jf?"display-p3":"srgb",t.unpackColorSpace=Qt.workingColorSpace===Ch?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Jn?ko:ly}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===ko?Jn:Sr}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class vT extends by{}vT.prototype.isWebGL1Renderer=!0;class ip{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Xe(e),this.density=t}clone(){return new ip(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class rp{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Xe(e),this.near=t,this.far=n}clone(){return new rp(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let vy=class extends Yt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}};class op{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=qc,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=xi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.InterleavedBuffer: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=xi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ds=new U;class za{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ds.fromBufferAttribute(this,t),Ds.applyMatrix4(e),this.setXYZ(t,Ds.x,Ds.y,Ds.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ds.fromBufferAttribute(this,t),Ds.applyNormalMatrix(e),this.setXYZ(t,Ds.x,Ds.y,Ds.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ds.fromBufferAttribute(this,t),Ds.transformDirection(e),this.setXYZ(t,Ds.x,Ds.y,Ds.z);return this}setX(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ti(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ti(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ti(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ti(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Mt(t,this.array),n=Mt(n,this.array),i=Mt(i,this.array),r=Mt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new on(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new za(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class wy extends Ms{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Xe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ol;const ic=new U,Fl=new U,Ul=new U,Bl=new me,rc=new me,wT=new bt,Sd=new U,oc=new U,_d=new U,X1=new me,Rm=new me,q1=new me;class ST extends Yt{constructor(e=new wy){if(super(),this.isSprite=!0,this.type="Sprite",Ol===void 0){Ol=new Ot;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new op(t,5);Ol.setIndex([0,1,2,0,2,3]),Ol.setAttribute("position",new za(n,3,0,!1)),Ol.setAttribute("uv",new za(n,2,3,!1))}this.geometry=Ol,this.material=e,this.center=new me(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Fl.setFromMatrixScale(this.matrixWorld),wT.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ul.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Fl.multiplyScalar(-Ul.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Cd(Sd.set(-.5,-.5,0),Ul,o,Fl,i,r),Cd(oc.set(.5,-.5,0),Ul,o,Fl,i,r),Cd(_d.set(.5,.5,0),Ul,o,Fl,i,r),X1.set(0,0),Rm.set(1,0),q1.set(1,1);let a=e.ray.intersectTriangle(Sd,oc,_d,!1,ic);if(a===null&&(Cd(oc.set(-.5,.5,0),Ul,o,Fl,i,r),Rm.set(0,1),a=e.ray.intersectTriangle(Sd,_d,oc,!1,ic),a===null))return;const l=e.ray.origin.distanceTo(ic);l<e.near||l>e.far||t.push({distance:l,point:ic.clone(),uv:Js.getInterpolation(ic,Sd,oc,_d,X1,Rm,q1,new me),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Cd(s,e,t,n,i,r){Bl.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(rc.x=r*Bl.x-i*Bl.y,rc.y=i*Bl.x+r*Bl.y):rc.copy(Bl),s.copy(e),s.x+=rc.x,s.y+=rc.y,s.applyMatrix4(wT)}const Td=new U,K1=new U;class _T extends Yt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Td.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Td);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Td.setFromMatrixPosition(e.matrixWorld),K1.setFromMatrixPosition(this.matrixWorld);const n=Td.distanceTo(K1)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const j1=new U,Y1=new rn,Z1=new rn,zL=new U,J1=new bt,Ed=new U,Mm=new Is,Q1=new bt,Nm=new Ru;class CT extends es{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=_g,this.bindMatrix=new bt,this.bindMatrixInverse=new bt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Us),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ed),this.boundingBox.expandByPoint(Ed)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Is),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Ed),this.boundingSphere.expandByPoint(Ed)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Mm.copy(this.boundingSphere),Mm.applyMatrix4(i),e.ray.intersectsSphere(Mm)!==!1&&(Q1.copy(i).invert(),Nm.copy(e.ray).applyMatrix4(Q1),!(this.boundingBox!==null&&Nm.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Nm)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new rn,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===_g?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===L2?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Y1.fromBufferAttribute(i.attributes.skinIndex,e),Z1.fromBufferAttribute(i.attributes.skinWeight,e),j1.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Z1.getComponent(r);if(o!==0){const a=Y1.getComponent(r);J1.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(zL.copy(j1).applyMatrix4(J1),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Sy extends Yt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class $a extends Wn{constructor(e=null,t=1,n=1,i,r,o,a,l,u=zn,c=zn,h,d){super(null,o,a,l,u,c,i,r,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const eS=new bt,VL=new bt;class ap{constructor(e=[],t=[]){this.uuid=xi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new bt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new bt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:VL;eS.multiplyMatrices(a,t[r]),eS.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ap(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new $a(t,e,e,ei,Ji);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Sy),this.bones.push(o),this.boneInverses.push(new bt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class du extends on{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const zl=new bt,tS=new bt,Ad=[],nS=new Us,WL=new bt,ac=new es,lc=new Is;class TT extends es{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new du(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,WL)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Us),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,zl),nS.copy(e.boundingBox).applyMatrix4(zl),this.boundingBox.union(nS)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Is),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,zl),lc.copy(e.boundingSphere).applyMatrix4(zl),this.boundingSphere.union(lc)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ac.geometry=this.geometry,ac.material=this.material,ac.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),lc.copy(this.boundingSphere),lc.applyMatrix4(n),e.ray.intersectsSphere(lc)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,zl),tS.multiplyMatrices(n,zl),ac.matrixWorld=tS,ac.raycast(e,Ad);for(let o=0,a=Ad.length;o<a;o++){const l=Ad[o];l.instanceId=r,l.object=this,t.push(l)}Ad.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new du(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function GL(s,e){return s.z-e.z}function HL(s,e){return e.z-s.z}class XL{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const r=n[this.index];i.push(r),this.index++,r.start=e.start,r.count=e.count,r.z=t}reset(){this.list.length=0,this.index=0}}const Vl="batchId",_o=new bt,sS=new bt,qL=new bt,iS=new bt,Pm=new Ah,Id=new Us,oa=new Is,uc=new U,km=new XL,ws=new es,Rd=[];function KL(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let o=0;o<n;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*n);e.needsUpdate=!0}class ET extends es{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new Ot,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new $a(t,e,e,ei,Ji);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,r=this._maxIndexCount;if(this._geometryInitialized===!1){for(const a in e.attributes){const l=e.getAttribute(a),{array:u,itemSize:c,normalized:h}=l,d=new u.constructor(n*c),f=new l.constructor(d,c,h);f.setUsage(l.usage),t.setAttribute(a,f)}if(e.getIndex()!==null){const a=n>65536?new Uint32Array(r):new Uint16Array(r);t.setIndex(new on(a,1))}const o=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(Vl,new on(o,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(Vl))throw new Error(`BatchedMesh: Geometry cannot use attribute "${Vl}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===Vl)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Us);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,_o),this.getBoundingBoxAt(i,Id).applyMatrix4(_o),t.union(Id))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Is);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,_o),this.getBoundingSphereAt(i,oa).applyMatrix4(_o),t.union(oa))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let r=null;const o=this._reservedRanges,a=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(r=o[o.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,r===null?i.vertexStart=0:i.vertexStart=r.vertexStart+r.vertexCount;const u=e.getIndex(),c=u!==null;if(c&&(n===-1?i.indexCount=u.count:i.indexCount=n,r===null?i.indexStart=0:i.indexStart=r.indexStart+r.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const h=this._visibility,d=this._active,f=this._matricesTexture,p=this._matricesTexture.image.data;h.push(!0),d.push(!0);const x=this._geometryCount;this._geometryCount++,qL.toArray(p,x*16),f.needsUpdate=!0,o.push(i),a.push({start:c?i.indexStart:i.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new Us,sphereInitialized:!1,sphere:new Is});const m=this.geometry.getAttribute(Vl);for(let g=0;g<i.vertexCount;g++)m.setX(i.vertexStart+g,x);return m.needsUpdate=!0,this.setGeometryAt(x,e),x}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),o=t.getIndex(),a=this._reservedRanges[e];if(i&&o.count>a.indexCount||t.attributes.position.count>a.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,u=a.vertexCount;for(const f in n.attributes){if(f===Vl)continue;const p=t.getAttribute(f),x=n.getAttribute(f);KL(p,x,l);const m=p.itemSize;for(let g=p.count,y=u;g<y;g++){const v=l+g;for(let w=0;w<m;w++)x.setComponent(v,w,0)}x.needsUpdate=!0}if(i){const f=a.indexStart;for(let p=0;p<o.count;p++)r.setX(f+p,l+o.getX(p));for(let p=o.count,x=a.indexCount;p<x;p++)r.setX(f+p,l);r.needsUpdate=!0}const c=this._bounds[e];t.boundingBox!==null?(c.box.copy(t.boundingBox),c.boxInitialized=!0):c.boxInitialized=!1,t.boundingSphere!==null?(c.sphere.copy(t.boundingSphere),c.sphereInitialized=!0):c.sphereInitialized=!1;const h=this._drawRanges[e],d=t.getAttribute("position");return h.count=i?o.count:d.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],r=i.box,o=this.geometry;if(i.boxInitialized===!1){r.makeEmpty();const a=o.index,l=o.attributes.position,u=this._drawRanges[e];for(let c=u.start,h=u.start+u.count;c<h;c++){let d=c;a&&(d=a.getX(d)),r.expandByPoint(uc.fromBufferAttribute(l,d))}i.boxInitialized=!0}return t.copy(r),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],r=i.sphere,o=this.geometry;if(i.sphereInitialized===!1){r.makeEmpty(),this.getBoundingBoxAt(e,Id),Id.getCenter(r.center);const a=o.index,l=o.attributes.position,u=this._drawRanges[e];let c=0;for(let h=u.start,d=u.start+u.count;h<d;h++){let f=h;a&&(f=a.getX(f)),uc.fromBufferAttribute(l,f),c=Math.max(c,r.center.distanceToSquared(uc))}r.radius=Math.sqrt(c),i.sphereInitialized=!0}return t.copy(r),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,r=this._matricesTexture.image.data,o=this._geometryCount;return e>=o||n[e]===!1?this:(t.toArray(r,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,r=this._geometryCount;return e>=r||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,r=this._geometryCount;return e>=r||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,r=this._drawRanges,o=this._geometryCount,a=this.matrixWorld,l=this.geometry;ws.material=this.material,ws.geometry.index=l.index,ws.geometry.attributes=l.attributes,ws.geometry.boundingBox===null&&(ws.geometry.boundingBox=new Us),ws.geometry.boundingSphere===null&&(ws.geometry.boundingSphere=new Is);for(let u=0;u<o;u++){if(!n[u]||!i[u])continue;const c=r[u];ws.geometry.setDrawRange(c.start,c.count),this.getMatrixAt(u,ws.matrixWorld).premultiply(a),this.getBoundingBoxAt(u,ws.geometry.boundingBox),this.getBoundingSphereAt(u,ws.geometry.boundingSphere),ws.raycast(e,Rd);for(let h=0,d=Rd.length;h<d;h++){const f=Rd[h];f.object=this,f.batchId=u,t.push(f)}Rd.length=0}ws.material=null,ws.geometry.index=null,ws.geometry.attributes={},ws.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._visibility,u=this._multiDrawStarts,c=this._multiDrawCounts,h=this._drawRanges,d=this.perObjectFrustumCulled;d&&(iS.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Pm.setFromProjectionMatrix(iS,e.isWebGPURenderer?uu:Qi));let f=0;if(this.sortObjects){sS.copy(this.matrixWorld).invert(),uc.setFromMatrixPosition(n.matrixWorld).applyMatrix4(sS);for(let m=0,g=l.length;m<g;m++)if(l[m]){this.getMatrixAt(m,_o),this.getBoundingSphereAt(m,oa).applyMatrix4(_o);let y=!1;if(d&&(y=!Pm.intersectsSphere(oa)),!y){const v=uc.distanceTo(oa.center);km.push(h[m],v)}}const p=km.list,x=this.customSort;x===null?p.sort(r.transparent?HL:GL):x.call(this,p,n);for(let m=0,g=p.length;m<g;m++){const y=p[m];u[f]=y.start*a,c[f]=y.count,f++}km.reset()}else for(let p=0,x=l.length;p<x;p++)if(l[p]){let m=!1;if(d&&(this.getMatrixAt(p,_o),this.getBoundingSphereAt(p,oa).applyMatrix4(_o),m=!Pm.intersectsSphere(oa)),!m){const g=h[p];u[f]=g.start*a,c[f]=g.count,f++}}this._multiDrawCount=f,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,o){this.onBeforeRender(e,null,i,r,o)}}class Ws extends Ms{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Xe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const rS=new U,oS=new U,aS=new bt,$m=new Ru,Md=new Is;class Bo extends Yt{constructor(e=new Ot,t=new Ws){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)rS.fromBufferAttribute(t,i-1),oS.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=rS.distanceTo(oS);e.setAttribute("lineDistance",new et(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Md.copy(n.boundingSphere),Md.applyMatrix4(i),Md.radius+=r,e.ray.intersectsSphere(Md)===!1)return;aS.copy(i).invert(),$m.copy(e.ray).applyMatrix4(aS);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,u=new U,c=new U,h=new U,d=new U,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const g=Math.max(0,o.start),y=Math.min(p.count,o.start+o.count);for(let v=g,w=y-1;v<w;v+=f){const _=p.getX(v),T=p.getX(v+1);if(u.fromBufferAttribute(m,_),c.fromBufferAttribute(m,T),$m.distanceSqToSegment(u,c,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let v=g,w=y-1;v<w;v+=f){if(u.fromBufferAttribute(m,v),c.fromBufferAttribute(m,v+1),$m.distanceSqToSegment(u,c,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(d);T<e.near||T>e.far||t.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}const lS=new U,uS=new U;class Ar extends Bo{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)lS.fromBufferAttribute(t,i),uS.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+lS.distanceTo(uS);e.setAttribute("lineDistance",new et(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class AT extends Bo{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class _y extends Ms{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Xe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const cS=new bt,ex=new Ru,Nd=new Is,Pd=new U;class IT extends Yt{constructor(e=new Ot,t=new _y){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Nd.copy(n.boundingSphere),Nd.applyMatrix4(i),Nd.radius+=r,e.ray.intersectsSphere(Nd)===!1)return;cS.copy(i).invert(),ex.copy(e.ray).applyMatrix4(cS);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,u=n.index,h=n.attributes.position;if(u!==null){const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,x=f;p<x;p++){const m=u.getX(p);Pd.fromBufferAttribute(h,m),hS(Pd,m,l,i,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let p=d,x=f;p<x;p++)Pd.fromBufferAttribute(h,p),hS(Pd,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function hS(s,e,t,n,i,r,o){const a=ex.distanceSqToPoint(s);if(a<t){const l=new U;ex.closestPointToPoint(s,l),l.applyMatrix4(n);const u=i.ray.origin.distanceTo(l);if(u<i.near||u>i.far)return;r.push({distance:u,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class jL extends Wn{constructor(e,t,n,i,r,o,a,l,u){super(e,t,n,i,r,o,a,l,u),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:Vn,this.magFilter=r!==void 0?r:Vn,this.generateMipmaps=!1;const c=this;function h(){c.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class YL extends Wn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=zn,this.minFilter=zn,this.generateMipmaps=!1,this.needsUpdate=!0}}class lp extends Wn{constructor(e,t,n,i,r,o,a,l,u,c,h,d){super(null,o,a,l,u,c,i,r,h,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class ZL extends lp{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Es}}class JL extends lp{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Yr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class QL extends Wn{constructor(e,t,n,i,r,o,a,l,u){super(e,t,n,i,r,o,a,l,u),this.isCanvasTexture=!0,this.needsUpdate=!0}}class nr{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,l=r-1,u;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),u=n[i]-o,u<0)a=i+1;else if(u>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const c=n[i],d=n[i+1]-c,f=(o-c)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=t||(o.isVector2?new me:new U);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],r=[],o=[],a=new U,l=new bt;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new U)}r[0]=new U,o[0]=new U;let u=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);c<=u&&(u=c,n.set(1,0,0)),h<=u&&(u=h,n.set(0,1,0)),d<=u&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Fn(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Fn(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class up extends nr{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new me,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(a),u=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=u-this.aY;l=d*c-f*h+this.aX,u=d*h+f*c+this.aY}return n.set(l,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class RT extends up{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Cy(){let s=0,e=0,t=0,n=0;function i(r,o,a,l){s=r,e=a,t=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,u){i(o,a,u*(a-r),u*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,u,c,h){let d=(o-r)/u-(a-r)/(u+c)+(a-o)/c,f=(a-o)/c-(l-o)/(c+h)+(l-a)/h;d*=c,f*=c,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const kd=new U,Dm=new Cy,Lm=new Cy,Om=new Cy;class MT extends nr{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let u,c;this.closed||a>0?u=i[(a-1)%r]:(kd.subVectors(i[0],i[1]).add(i[0]),u=kd);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?c=i[(a+2)%r]:(kd.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=kd),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(u.distanceToSquared(h),f),x=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(c),f);x<1e-4&&(x=1),p<1e-4&&(p=x),m<1e-4&&(m=x),Dm.initNonuniformCatmullRom(u.x,h.x,d.x,c.x,p,x,m),Lm.initNonuniformCatmullRom(u.y,h.y,d.y,c.y,p,x,m),Om.initNonuniformCatmullRom(u.z,h.z,d.z,c.z,p,x,m)}else this.curveType==="catmullrom"&&(Dm.initCatmullRom(u.x,h.x,d.x,c.x,this.tension),Lm.initCatmullRom(u.y,h.y,d.y,c.y,this.tension),Om.initCatmullRom(u.z,h.z,d.z,c.z,this.tension));return n.set(Dm.calc(l),Lm.calc(l),Om.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function dS(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,l=s*a;return(2*t-2*n+r+o)*l+(-3*t+3*n-2*r-o)*a+r*s+t}function eO(s,e){const t=1-s;return t*t*e}function tO(s,e){return 2*(1-s)*s*e}function nO(s,e){return s*s*e}function Tc(s,e,t,n){return eO(s,e)+tO(s,t)+nO(s,n)}function sO(s,e){const t=1-s;return t*t*t*e}function iO(s,e){const t=1-s;return 3*t*t*s*e}function rO(s,e){return 3*(1-s)*s*s*e}function oO(s,e){return s*s*s*e}function Ec(s,e,t,n,i){return sO(s,e)+iO(s,t)+rO(s,n)+oO(s,i)}class Ty extends nr{constructor(e=new me,t=new me,n=new me,i=new me){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new me){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Ec(e,i.x,r.x,o.x,a.x),Ec(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class NT extends nr{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Ec(e,i.x,r.x,o.x,a.x),Ec(e,i.y,r.y,o.y,a.y),Ec(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ey extends nr{constructor(e=new me,t=new me){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new me){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new me){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class PT extends nr{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ay extends nr{constructor(e=new me,t=new me,n=new me){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new me){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Tc(e,i.x,r.x,o.x),Tc(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Iy extends nr{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Tc(e,i.x,r.x,o.x),Tc(e,i.y,r.y,o.y),Tc(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ry extends nr{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new me){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],u=i[o],c=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(dS(a,l.x,u.x,c.x,h.x),dS(a,l.y,u.y,c.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new me().fromArray(i))}return this}}var Sf=Object.freeze({__proto__:null,ArcCurve:RT,CatmullRomCurve3:MT,CubicBezierCurve:Ty,CubicBezierCurve3:NT,EllipseCurve:up,LineCurve:Ey,LineCurve3:PT,QuadraticBezierCurve:Ay,QuadraticBezierCurve3:Iy,SplineCurve:Ry});class kT extends nr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Sf[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),u=l===0?0:1-o/l;return a.getPointAt(u,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let u=0;u<l.length;u++){const c=l[u];n&&n.equals(c)||(t.push(c),n=c)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Sf[i.type]().fromJSON(i))}return this}}class jc extends kT{constructor(e){super(),this.type="Path",this.currentPoint=new me,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ey(this.currentPoint.clone(),new me(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Ay(this.currentPoint.clone(),new me(e,t),new me(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new Ty(this.currentPoint.clone(),new me(e,t),new me(n,i),new me(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Ry(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,l){const u=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+u,t+c,n,i,r,o,a,l),this}absellipse(e,t,n,i,r,o,a,l){const u=new up(e,t,n,i,r,o,a,l);if(this.curves.length>0){const h=u.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(u);const c=u.getPoint(1);return this.currentPoint.copy(c),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Rh extends Ot{constructor(e=[new me(0,-.5),new me(.5,0),new me(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Fn(i,0,Math.PI*2);const r=[],o=[],a=[],l=[],u=[],c=1/t,h=new U,d=new me,f=new U,p=new U,x=new U;let m=0,g=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,x.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(x.x,x.y,x.z);break;default:m=e[y+1].x-e[y].x,g=e[y+1].y-e[y].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=x.x,f.y+=x.y,f.z+=x.z,f.normalize(),l.push(f.x,f.y,f.z),x.copy(p)}for(let y=0;y<=t;y++){const v=n+y*c*i,w=Math.sin(v),_=Math.cos(v);for(let T=0;T<=e.length-1;T++){h.x=e[T].x*w,h.y=e[T].y,h.z=e[T].x*_,o.push(h.x,h.y,h.z),d.x=y/t,d.y=T/(e.length-1),a.push(d.x,d.y);const A=l[3*T+0]*w,M=l[3*T+1],C=l[3*T+0]*_;u.push(A,M,C)}}for(let y=0;y<t;y++)for(let v=0;v<e.length-1;v++){const w=v+y*e.length,_=w,T=w+e.length,A=w+e.length+1,M=w+1;r.push(_,T,M),r.push(A,M,T)}this.setIndex(r),this.setAttribute("position",new et(o,3)),this.setAttribute("uv",new et(a,2)),this.setAttribute("normal",new et(u,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rh(e.points,e.segments,e.phiStart,e.phiLength)}}class cp extends Rh{constructor(e=1,t=1,n=4,i=8){const r=new jc;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new cp(e.radius,e.length,e.capSegments,e.radialSegments)}}class hp extends Ot{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],l=[],u=new U,c=new me;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=t;h++,d+=3){const f=n+h/t*i;u.x=e*Math.cos(f),u.y=e*Math.sin(f),o.push(u.x,u.y,u.z),a.push(0,0,1),c.x=(o[d]/e+1)/2,c.y=(o[d+1]/e+1)/2,l.push(c.x,c.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new et(o,3)),this.setAttribute("normal",new et(a,3)),this.setAttribute("uv",new et(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hp(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Nu extends Ot{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const u=this;i=Math.floor(i),r=Math.floor(r);const c=[],h=[],d=[],f=[];let p=0;const x=[],m=n/2;let g=0;y(),o===!1&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new et(h,3)),this.setAttribute("normal",new et(d,3)),this.setAttribute("uv",new et(f,2));function y(){const w=new U,_=new U;let T=0;const A=(t-e)/n;for(let M=0;M<=r;M++){const C=[],R=M/r,$=R*(t-e)+e;for(let W=0;W<=i;W++){const q=W/i,O=q*l+a,H=Math.sin(O),Z=Math.cos(O);_.x=$*H,_.y=-R*n+m,_.z=$*Z,h.push(_.x,_.y,_.z),w.set(H,A,Z).normalize(),d.push(w.x,w.y,w.z),f.push(q,1-R),C.push(p++)}x.push(C)}for(let M=0;M<i;M++)for(let C=0;C<r;C++){const R=x[C][M],$=x[C+1][M],W=x[C+1][M+1],q=x[C][M+1];c.push(R,$,q),c.push($,W,q),T+=6}u.addGroup(g,T,0),g+=T}function v(w){const _=p,T=new me,A=new U;let M=0;const C=w===!0?e:t,R=w===!0?1:-1;for(let W=1;W<=i;W++)h.push(0,m*R,0),d.push(0,R,0),f.push(.5,.5),p++;const $=p;for(let W=0;W<=i;W++){const O=W/i*l+a,H=Math.cos(O),Z=Math.sin(O);A.x=C*Z,A.y=m*R,A.z=C*H,h.push(A.x,A.y,A.z),d.push(0,R,0),T.x=H*.5+.5,T.y=Z*.5*R+.5,f.push(T.x,T.y),p++}for(let W=0;W<i;W++){const q=_+W,O=$+W;w===!0?c.push(O,O+1,q):c.push(O+1,O,q),M+=3}u.addGroup(g,M,w===!0?1:2),g+=M}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nu(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class dp extends Nu{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new dp(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class qo extends Ot{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];a(i),u(n),c(),this.setAttribute("position",new et(r,3)),this.setAttribute("normal",new et(r.slice(),3)),this.setAttribute("uv",new et(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(y){const v=new U,w=new U,_=new U;for(let T=0;T<t.length;T+=3)f(t[T+0],v),f(t[T+1],w),f(t[T+2],_),l(v,w,_,y)}function l(y,v,w,_){const T=_+1,A=[];for(let M=0;M<=T;M++){A[M]=[];const C=y.clone().lerp(w,M/T),R=v.clone().lerp(w,M/T),$=T-M;for(let W=0;W<=$;W++)W===0&&M===T?A[M][W]=C:A[M][W]=C.clone().lerp(R,W/$)}for(let M=0;M<T;M++)for(let C=0;C<2*(T-M)-1;C++){const R=Math.floor(C/2);C%2===0?(d(A[M][R+1]),d(A[M+1][R]),d(A[M][R])):(d(A[M][R+1]),d(A[M+1][R+1]),d(A[M+1][R]))}}function u(y){const v=new U;for(let w=0;w<r.length;w+=3)v.x=r[w+0],v.y=r[w+1],v.z=r[w+2],v.normalize().multiplyScalar(y),r[w+0]=v.x,r[w+1]=v.y,r[w+2]=v.z}function c(){const y=new U;for(let v=0;v<r.length;v+=3){y.x=r[v+0],y.y=r[v+1],y.z=r[v+2];const w=m(y)/2/Math.PI+.5,_=g(y)/Math.PI+.5;o.push(w,1-_)}p(),h()}function h(){for(let y=0;y<o.length;y+=6){const v=o[y+0],w=o[y+2],_=o[y+4],T=Math.max(v,w,_),A=Math.min(v,w,_);T>.9&&A<.1&&(v<.2&&(o[y+0]+=1),w<.2&&(o[y+2]+=1),_<.2&&(o[y+4]+=1))}}function d(y){r.push(y.x,y.y,y.z)}function f(y,v){const w=y*3;v.x=e[w+0],v.y=e[w+1],v.z=e[w+2]}function p(){const y=new U,v=new U,w=new U,_=new U,T=new me,A=new me,M=new me;for(let C=0,R=0;C<r.length;C+=9,R+=6){y.set(r[C+0],r[C+1],r[C+2]),v.set(r[C+3],r[C+4],r[C+5]),w.set(r[C+6],r[C+7],r[C+8]),T.set(o[R+0],o[R+1]),A.set(o[R+2],o[R+3]),M.set(o[R+4],o[R+5]),_.copy(y).add(v).add(w).divideScalar(3);const $=m(_);x(T,R+0,y,$),x(A,R+2,v,$),x(M,R+4,w,$)}}function x(y,v,w,_){_<0&&y.x===1&&(o[v]=y.x-1),w.x===0&&w.z===0&&(o[v]=_/2/Math.PI+.5)}function m(y){return Math.atan2(y.z,-y.x)}function g(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qo(e.vertices,e.indices,e.radius,e.details)}}class fp extends qo{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new fp(e.radius,e.detail)}}const $d=new U,Dd=new U,Fm=new U,Ld=new Js;class $T extends Ot{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(ka*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,u=[0,0,0],c=["a","b","c"],h=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(u[0]=o.getX(p),u[1]=o.getX(p+1),u[2]=o.getX(p+2)):(u[0]=p,u[1]=p+1,u[2]=p+2);const{a:x,b:m,c:g}=Ld;if(x.fromBufferAttribute(a,u[0]),m.fromBufferAttribute(a,u[1]),g.fromBufferAttribute(a,u[2]),Ld.getNormal(Fm),h[0]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,h[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[2]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let y=0;y<3;y++){const v=(y+1)%3,w=h[y],_=h[v],T=Ld[c[y]],A=Ld[c[v]],M=`${w}_${_}`,C=`${_}_${w}`;C in d&&d[C]?(Fm.dot(d[C].normal)<=r&&(f.push(T.x,T.y,T.z),f.push(A.x,A.y,A.z)),d[C]=null):M in d||(d[M]={index0:u[y],index1:u[v],normal:Fm.clone()})}}for(const p in d)if(d[p]){const{index0:x,index1:m}=d[p];$d.fromBufferAttribute(a,x),Dd.fromBufferAttribute(a,m),f.push($d.x,$d.y,$d.z),f.push(Dd.x,Dd.y,Dd.z)}this.setAttribute("position",new et(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Da extends jc{constructor(e){super(e),this.uuid=xi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new jc().fromJSON(i))}return this}}const aO={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=DT(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,u,c,h,d,f;if(n&&(r=dO(s,e,r,t)),s.length>80*t){a=u=s[0],l=c=s[1];for(let p=t;p<i;p+=t)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>u&&(u=h),d>c&&(c=d);f=Math.max(u-a,c-l),f=f!==0?32767/f:0}return Yc(r,o,t,a,l,f,0),o}};function DT(s,e,t,n,i){let r,o;if(i===_O(s,e,t,n)>0)for(r=e;r<t;r+=n)o=fS(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=fS(r,s[r],s[r+1],o);return o&&pp(o,o.next)&&(Jc(o),o=o.next),o}function Va(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(pp(t,t.next)||Pn(t.prev,t,t.next)===0)){if(Jc(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Yc(s,e,t,n,i,r,o){if(!s)return;!o&&r&&xO(s,n,i,r);let a=s,l,u;for(;s.prev!==s.next;){if(l=s.prev,u=s.next,r?uO(s,n,i,r):lO(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(u.i/t|0),Jc(s),s=u.next,a=u.next;continue}if(s=u,s===a){o?o===1?(s=cO(Va(s),e,t),Yc(s,e,t,n,i,r,2)):o===2&&hO(s,e,t,n,i,r):Yc(Va(s),e,t,n,i,r,1);break}}}function lO(s){const e=s.prev,t=s,n=s.next;if(Pn(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,a=e.y,l=t.y,u=n.y,c=i<r?i<o?i:o:r<o?r:o,h=a<l?a<u?a:u:l<u?l:u,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>u?a:u:l>u?l:u;let p=n.next;for(;p!==e;){if(p.x>=c&&p.x<=d&&p.y>=h&&p.y<=f&&tu(i,a,r,l,o,u,p.x,p.y)&&Pn(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function uO(s,e,t,n){const i=s.prev,r=s,o=s.next;if(Pn(i,r,o)>=0)return!1;const a=i.x,l=r.x,u=o.x,c=i.y,h=r.y,d=o.y,f=a<l?a<u?a:u:l<u?l:u,p=c<h?c<d?c:d:h<d?h:d,x=a>l?a>u?a:u:l>u?l:u,m=c>h?c>d?c:d:h>d?h:d,g=tx(f,p,e,t,n),y=tx(x,m,e,t,n);let v=s.prevZ,w=s.nextZ;for(;v&&v.z>=g&&w&&w.z<=y;){if(v.x>=f&&v.x<=x&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&tu(a,c,l,h,u,d,v.x,v.y)&&Pn(v.prev,v,v.next)>=0||(v=v.prevZ,w.x>=f&&w.x<=x&&w.y>=p&&w.y<=m&&w!==i&&w!==o&&tu(a,c,l,h,u,d,w.x,w.y)&&Pn(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;v&&v.z>=g;){if(v.x>=f&&v.x<=x&&v.y>=p&&v.y<=m&&v!==i&&v!==o&&tu(a,c,l,h,u,d,v.x,v.y)&&Pn(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;w&&w.z<=y;){if(w.x>=f&&w.x<=x&&w.y>=p&&w.y<=m&&w!==i&&w!==o&&tu(a,c,l,h,u,d,w.x,w.y)&&Pn(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function cO(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!pp(i,r)&&LT(i,n,n.next,r)&&Zc(i,r)&&Zc(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Jc(n),Jc(n.next),n=s=r),n=n.next}while(n!==s);return Va(n)}function hO(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&vO(o,a)){let l=OT(o,a);o=Va(o,o.next),l=Va(l,l.next),Yc(o,e,t,n,i,r,0),Yc(l,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function dO(s,e,t,n){const i=[];let r,o,a,l,u;for(r=0,o=e.length;r<o;r++)a=e[r]*n,l=r<o-1?e[r+1]*n:s.length,u=DT(s,a,l,n,!1),u===u.next&&(u.steiner=!0),i.push(bO(u));for(i.sort(fO),r=0;r<i.length;r++)t=pO(i[r],t);return t}function fO(s,e){return s.x-e.x}function pO(s,e){const t=mO(s,e);if(!t)return e;const n=OT(t,s);return Va(n,n.next),Va(t,t.next)}function mO(s,e){let t=e,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const d=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=r&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===r))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,l=i.x,u=i.y;let c=1/0,h;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&tu(o<u?r:n,o,l,u,o<u?n:r,o,t.x,t.y)&&(h=Math.abs(o-t.y)/(r-t.x),Zc(t,s)&&(h<c||h===c&&(t.x>i.x||t.x===i.x&&gO(i,t)))&&(i=t,c=h)),t=t.next;while(t!==a);return i}function gO(s,e){return Pn(s.prev,s,e.prev)<0&&Pn(e.next,s,s.next)<0}function xO(s,e,t,n){let i=s;do i.z===0&&(i.z=tx(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,yO(i)}function yO(s){let e,t,n,i,r,o,a,l,u=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<u&&(a++,n=n.nextZ,!!n);e++);for(l=u;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,u*=2}while(o>1);return s}function tx(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function bO(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function tu(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function vO(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!wO(s,e)&&(Zc(s,e)&&Zc(e,s)&&SO(s,e)&&(Pn(s.prev,s,e.prev)||Pn(s,e.prev,e))||pp(s,e)&&Pn(s.prev,s,s.next)>0&&Pn(e.prev,e,e.next)>0)}function Pn(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function pp(s,e){return s.x===e.x&&s.y===e.y}function LT(s,e,t,n){const i=Fd(Pn(s,e,t)),r=Fd(Pn(s,e,n)),o=Fd(Pn(t,n,s)),a=Fd(Pn(t,n,e));return!!(i!==r&&o!==a||i===0&&Od(s,t,e)||r===0&&Od(s,n,e)||o===0&&Od(t,s,n)||a===0&&Od(t,e,n))}function Od(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Fd(s){return s>0?1:s<0?-1:0}function wO(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&LT(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Zc(s,e){return Pn(s.prev,s,s.next)<0?Pn(s,e,s.next)>=0&&Pn(s,s.prev,e)>=0:Pn(s,e,s.prev)<0||Pn(s,s.next,e)<0}function SO(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function OT(s,e){const t=new nx(s.i,s.x,s.y),n=new nx(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function fS(s,e,t,n){const i=new nx(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Jc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function nx(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function _O(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class mr{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return mr.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];pS(e),mS(n,e);let o=e.length;t.forEach(pS);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,mS(n,t[l]);const a=aO.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function pS(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function mS(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class mp extends Ot{constructor(e=new Da([new me(.5,.5),new me(-.5,.5),new me(-.5,-.5),new me(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,l=e.length;a<l;a++){const u=e[a];o(u)}this.setAttribute("position",new et(i,3)),this.setAttribute("uv",new et(r,2)),this.computeVertexNormals();function o(a){const l=[],u=t.curveSegments!==void 0?t.curveSegments:12,c=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,x=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:CO;let v,w=!1,_,T,A,M;g&&(v=g.getSpacedPoints(c),w=!0,d=!1,_=g.computeFrenetFrames(c,!1),T=new U,A=new U,M=new U),d||(m=0,f=0,p=0,x=0);const C=a.extractPoints(u);let R=C.shape;const $=C.holes;if(!mr.isClockWise(R)){R=R.reverse();for(let X=0,ye=$.length;X<ye;X++){const ue=$[X];mr.isClockWise(ue)&&($[X]=ue.reverse())}}const q=mr.triangulateShape(R,$),O=R;for(let X=0,ye=$.length;X<ye;X++){const ue=$[X];R=R.concat(ue)}function H(X,ye,ue){return ye||console.error("THREE.ExtrudeGeometry: vec does not exist"),X.clone().addScaledVector(ye,ue)}const Z=R.length,ee=q.length;function ce(X,ye,ue){let Me,xe,st;const We=X.x-ye.x,qe=X.y-ye.y,yt=ue.x-X.x,Ut=ue.y-X.y,dn=We*We+qe*qe,B=We*Ut-qe*yt;if(Math.abs(B)>Number.EPSILON){const k=Math.sqrt(dn),te=Math.sqrt(yt*yt+Ut*Ut),Se=ye.x-qe/k,be=ye.y+We/k,Ee=ue.x-Ut/te,tt=ue.y+yt/te,Ne=((Ee-Se)*Ut-(tt-be)*yt)/(We*Ut-qe*yt);Me=Se+We*Ne-X.x,xe=be+qe*Ne-X.y;const ze=Me*Me+xe*xe;if(ze<=2)return new me(Me,xe);st=Math.sqrt(ze/2)}else{let k=!1;We>Number.EPSILON?yt>Number.EPSILON&&(k=!0):We<-Number.EPSILON?yt<-Number.EPSILON&&(k=!0):Math.sign(qe)===Math.sign(Ut)&&(k=!0),k?(Me=-qe,xe=We,st=Math.sqrt(dn)):(Me=We,xe=qe,st=Math.sqrt(dn/2))}return new me(Me/st,xe/st)}const ne=[];for(let X=0,ye=O.length,ue=ye-1,Me=X+1;X<ye;X++,ue++,Me++)ue===ye&&(ue=0),Me===ye&&(Me=0),ne[X]=ce(O[X],O[ue],O[Me]);const fe=[];let pe,Oe=ne.concat();for(let X=0,ye=$.length;X<ye;X++){const ue=$[X];pe=[];for(let Me=0,xe=ue.length,st=xe-1,We=Me+1;Me<xe;Me++,st++,We++)st===xe&&(st=0),We===xe&&(We=0),pe[Me]=ce(ue[Me],ue[st],ue[We]);fe.push(pe),Oe=Oe.concat(pe)}for(let X=0;X<m;X++){const ye=X/m,ue=f*Math.cos(ye*Math.PI/2),Me=p*Math.sin(ye*Math.PI/2)+x;for(let xe=0,st=O.length;xe<st;xe++){const We=H(O[xe],ne[xe],Me);Ye(We.x,We.y,-ue)}for(let xe=0,st=$.length;xe<st;xe++){const We=$[xe];pe=fe[xe];for(let qe=0,yt=We.length;qe<yt;qe++){const Ut=H(We[qe],pe[qe],Me);Ye(Ut.x,Ut.y,-ue)}}}const le=p+x;for(let X=0;X<Z;X++){const ye=d?H(R[X],Oe[X],le):R[X];w?(A.copy(_.normals[0]).multiplyScalar(ye.x),T.copy(_.binormals[0]).multiplyScalar(ye.y),M.copy(v[0]).add(A).add(T),Ye(M.x,M.y,M.z)):Ye(ye.x,ye.y,0)}for(let X=1;X<=c;X++)for(let ye=0;ye<Z;ye++){const ue=d?H(R[ye],Oe[ye],le):R[ye];w?(A.copy(_.normals[X]).multiplyScalar(ue.x),T.copy(_.binormals[X]).multiplyScalar(ue.y),M.copy(v[X]).add(A).add(T),Ye(M.x,M.y,M.z)):Ye(ue.x,ue.y,h/c*X)}for(let X=m-1;X>=0;X--){const ye=X/m,ue=f*Math.cos(ye*Math.PI/2),Me=p*Math.sin(ye*Math.PI/2)+x;for(let xe=0,st=O.length;xe<st;xe++){const We=H(O[xe],ne[xe],Me);Ye(We.x,We.y,h+ue)}for(let xe=0,st=$.length;xe<st;xe++){const We=$[xe];pe=fe[xe];for(let qe=0,yt=We.length;qe<yt;qe++){const Ut=H(We[qe],pe[qe],Me);w?Ye(Ut.x,Ut.y+v[c-1].y,v[c-1].x+ue):Ye(Ut.x,Ut.y,h+ue)}}}ge(),Fe();function ge(){const X=i.length/3;if(d){let ye=0,ue=Z*ye;for(let Me=0;Me<ee;Me++){const xe=q[Me];dt(xe[2]+ue,xe[1]+ue,xe[0]+ue)}ye=c+m*2,ue=Z*ye;for(let Me=0;Me<ee;Me++){const xe=q[Me];dt(xe[0]+ue,xe[1]+ue,xe[2]+ue)}}else{for(let ye=0;ye<ee;ye++){const ue=q[ye];dt(ue[2],ue[1],ue[0])}for(let ye=0;ye<ee;ye++){const ue=q[ye];dt(ue[0]+Z*c,ue[1]+Z*c,ue[2]+Z*c)}}n.addGroup(X,i.length/3-X,0)}function Fe(){const X=i.length/3;let ye=0;Qe(O,ye),ye+=O.length;for(let ue=0,Me=$.length;ue<Me;ue++){const xe=$[ue];Qe(xe,ye),ye+=xe.length}n.addGroup(X,i.length/3-X,1)}function Qe(X,ye){let ue=X.length;for(;--ue>=0;){const Me=ue;let xe=ue-1;xe<0&&(xe=X.length-1);for(let st=0,We=c+m*2;st<We;st++){const qe=Z*st,yt=Z*(st+1),Ut=ye+Me+qe,dn=ye+xe+qe,B=ye+xe+yt,k=ye+Me+yt;xt(Ut,dn,B,k)}}}function Ye(X,ye,ue){l.push(X),l.push(ye),l.push(ue)}function dt(X,ye,ue){nt(X),nt(ye),nt(ue);const Me=i.length/3,xe=y.generateTopUV(n,i,Me-3,Me-2,Me-1);rt(xe[0]),rt(xe[1]),rt(xe[2])}function xt(X,ye,ue,Me){nt(X),nt(ye),nt(Me),nt(ye),nt(ue),nt(Me);const xe=i.length/3,st=y.generateSideWallUV(n,i,xe-6,xe-3,xe-2,xe-1);rt(st[0]),rt(st[1]),rt(st[3]),rt(st[1]),rt(st[2]),rt(st[3])}function nt(X){i.push(l[X*3+0]),i.push(l[X*3+1]),i.push(l[X*3+2])}function rt(X){r.push(X.x),r.push(X.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return TO(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Sf[i.type]().fromJSON(i)),new mp(n,e.options)}}const CO={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],u=e[i*3],c=e[i*3+1];return[new me(r,o),new me(a,l),new me(u,c)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],u=e[n*3],c=e[n*3+1],h=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],x=e[r*3],m=e[r*3+1],g=e[r*3+2];return Math.abs(a-c)<Math.abs(o-u)?[new me(o,1-l),new me(u,1-h),new me(d,1-p),new me(x,1-g)]:[new me(a,1-l),new me(c,1-h),new me(f,1-p),new me(m,1-g)]}};function TO(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class gp extends qo{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gp(e.radius,e.detail)}}class Mh extends qo{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mh(e.radius,e.detail)}}class xp extends Ot{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],u=[],c=[];let h=e;const d=(t-e)/i,f=new U,p=new me;for(let x=0;x<=i;x++){for(let m=0;m<=n;m++){const g=r+m/n*o;f.x=h*Math.cos(g),f.y=h*Math.sin(g),l.push(f.x,f.y,f.z),u.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,c.push(p.x,p.y)}h+=d}for(let x=0;x<i;x++){const m=x*(n+1);for(let g=0;g<n;g++){const y=g+m,v=y,w=y+n+1,_=y+n+2,T=y+1;a.push(v,w,T),a.push(w,_,T)}}this.setIndex(a),this.setAttribute("position",new et(l,3)),this.setAttribute("normal",new et(u,3)),this.setAttribute("uv",new et(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xp(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class yp extends Ot{constructor(e=new Da([new me(0,.5),new me(-.5,-.5),new me(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)u(e);else for(let c=0;c<e.length;c++)u(e[c]),this.addGroup(a,l,c),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new et(i,3)),this.setAttribute("normal",new et(r,3)),this.setAttribute("uv",new et(o,2));function u(c){const h=i.length/3,d=c.extractPoints(t);let f=d.shape;const p=d.holes;mr.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const y=p[m];mr.isClockWise(y)===!0&&(p[m]=y.reverse())}const x=mr.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const y=p[m];f=f.concat(y)}for(let m=0,g=f.length;m<g;m++){const y=f[m];i.push(y.x,y.y,0),r.push(0,0,1),o.push(y.x,y.y)}for(let m=0,g=x.length;m<g;m++){const y=x[m],v=y[0]+h,w=y[1]+h,_=y[2]+h;n.push(v,w,_),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return EO(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new yp(n,e.curveSegments)}}function EO(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Nh extends Ot{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let u=0;const c=[],h=new U,d=new U,f=[],p=[],x=[],m=[];for(let g=0;g<=n;g++){const y=[],v=g/n;let w=0;g===0&&o===0?w=.5/t:g===n&&l===Math.PI&&(w=-.5/t);for(let _=0;_<=t;_++){const T=_/t;h.x=-e*Math.cos(i+T*r)*Math.sin(o+v*a),h.y=e*Math.cos(o+v*a),h.z=e*Math.sin(i+T*r)*Math.sin(o+v*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),x.push(d.x,d.y,d.z),m.push(T+w,1-v),y.push(u++)}c.push(y)}for(let g=0;g<n;g++)for(let y=0;y<t;y++){const v=c[g][y+1],w=c[g][y],_=c[g+1][y],T=c[g+1][y+1];(g!==0||o>0)&&f.push(v,w,T),(g!==n-1||l<Math.PI)&&f.push(w,_,T)}this.setIndex(f),this.setAttribute("position",new et(p,3)),this.setAttribute("normal",new et(x,3)),this.setAttribute("uv",new et(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nh(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class bp extends qo{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new bp(e.radius,e.detail)}}class vp extends Ot{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],u=[],c=new U,h=new U,d=new U;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const x=p/i*r,m=f/n*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(x),h.y=(e+t*Math.cos(m))*Math.sin(x),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),c.x=e*Math.cos(x),c.y=e*Math.sin(x),d.subVectors(h,c).normalize(),l.push(d.x,d.y,d.z),u.push(p/i),u.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const x=(i+1)*f+p-1,m=(i+1)*(f-1)+p-1,g=(i+1)*(f-1)+p,y=(i+1)*f+p;o.push(x,m,y),o.push(m,g,y)}this.setIndex(o),this.setAttribute("position",new et(a,3)),this.setAttribute("normal",new et(l,3)),this.setAttribute("uv",new et(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vp(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class wp extends Ot{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],u=[],c=[],h=new U,d=new U,f=new U,p=new U,x=new U,m=new U,g=new U;for(let v=0;v<=n;++v){const w=v/n*r*Math.PI*2;y(w,r,o,e,f),y(w+.01,r,o,e,p),m.subVectors(p,f),g.addVectors(p,f),x.crossVectors(m,g),g.crossVectors(x,m),x.normalize(),g.normalize();for(let _=0;_<=i;++_){const T=_/i*Math.PI*2,A=-t*Math.cos(T),M=t*Math.sin(T);h.x=f.x+(A*g.x+M*x.x),h.y=f.y+(A*g.y+M*x.y),h.z=f.z+(A*g.z+M*x.z),l.push(h.x,h.y,h.z),d.subVectors(h,f).normalize(),u.push(d.x,d.y,d.z),c.push(v/n),c.push(_/i)}}for(let v=1;v<=n;v++)for(let w=1;w<=i;w++){const _=(i+1)*(v-1)+(w-1),T=(i+1)*v+(w-1),A=(i+1)*v+w,M=(i+1)*(v-1)+w;a.push(_,T,M),a.push(T,A,M)}this.setIndex(a),this.setAttribute("position",new et(l,3)),this.setAttribute("normal",new et(u,3)),this.setAttribute("uv",new et(c,2));function y(v,w,_,T,A){const M=Math.cos(v),C=Math.sin(v),R=_/w*v,$=Math.cos(R);A.x=T*(2+$)*.5*M,A.y=T*(2+$)*C*.5,A.z=T*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wp(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Sp extends Ot{constructor(e=new Iy(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new U,l=new U,u=new me;let c=new U;const h=[],d=[],f=[],p=[];x(),this.setIndex(p),this.setAttribute("position",new et(h,3)),this.setAttribute("normal",new et(d,3)),this.setAttribute("uv",new et(f,2));function x(){for(let v=0;v<t;v++)m(v);m(r===!1?t:0),y(),g()}function m(v){c=e.getPointAt(v/t,c);const w=o.normals[v],_=o.binormals[v];for(let T=0;T<=i;T++){const A=T/i*Math.PI*2,M=Math.sin(A),C=-Math.cos(A);l.x=C*w.x+M*_.x,l.y=C*w.y+M*_.y,l.z=C*w.z+M*_.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=c.x+n*l.x,a.y=c.y+n*l.y,a.z=c.z+n*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let v=1;v<=t;v++)for(let w=1;w<=i;w++){const _=(i+1)*(v-1)+(w-1),T=(i+1)*v+(w-1),A=(i+1)*v+w,M=(i+1)*(v-1)+w;p.push(_,T,M),p.push(T,A,M)}}function y(){for(let v=0;v<=t;v++)for(let w=0;w<=i;w++)u.x=v/t,u.y=w/i,f.push(u.x,u.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Sp(new Sf[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class FT extends Ot{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,r=new U;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let u=0,c=l.length;u<c;++u){const h=l[u],d=h.start,f=h.count;for(let p=d,x=d+f;p<x;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),y=a.getX(p+(m+1)%3);i.fromBufferAttribute(o,g),r.fromBufferAttribute(o,y),gS(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let u=0;u<3;u++){const c=3*a+u,h=3*a+(u+1)%3;i.fromBufferAttribute(o,c),r.fromBufferAttribute(o,h),gS(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new et(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function gS(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var xS=Object.freeze({__proto__:null,BoxGeometry:Qa,CapsuleGeometry:cp,CircleGeometry:hp,ConeGeometry:dp,CylinderGeometry:Nu,DodecahedronGeometry:fp,EdgesGeometry:$T,ExtrudeGeometry:mp,IcosahedronGeometry:gp,LatheGeometry:Rh,OctahedronGeometry:Mh,PlaneGeometry:Ih,PolyhedronGeometry:qo,RingGeometry:xp,ShapeGeometry:yp,SphereGeometry:Nh,TetrahedronGeometry:bp,TorusGeometry:vp,TorusKnotGeometry:wp,TubeGeometry:Sp,WireframeGeometry:FT});class UT extends Ms{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Xe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class BT extends _r{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class My extends Ms{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Xe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class zT extends My{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new me(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Fn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Xe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Xe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Xe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class VT extends Ms{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Xe(16777215),this.specular=new Xe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class WT extends Ms{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Xe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class GT extends Ms{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class HT extends Ms{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class XT extends Ms{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Xe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ho,this.normalScale=new me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qT extends Ws{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Aa(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function KT(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function jT(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function sx(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const a=t[r]*e;for(let l=0;l!==e;++l)i[o++]=s[a+l]}return i}function Ny(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function AO(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let l=0;l<r.tracks.length;++l){const u=r.tracks[l],c=u.getValueSize(),h=[],d=[];for(let f=0;f<u.times.length;++f){const p=u.times[f]*i;if(!(p<t||p>=n)){h.push(u.times[f]);for(let x=0;x<c;++x)d.push(u.values[f*c+x])}}h.length!==0&&(u.times=Aa(h,u.times.constructor),u.values=Aa(d,u.values.constructor),o.push(u))}r.tracks=o;let a=1/0;for(let l=0;l<r.tracks.length;++l)a>r.tracks[l].times[0]&&(a=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*a);return r.resetDuration(),r}function IO(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const u=s.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(u===void 0)continue;let c=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);let d=0;const f=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let x;if(r<=a.times[0]){const g=c,y=h-c;x=a.values.slice(g,y)}else if(r>=a.times[p]){const g=p*h+c,y=g+h-c;x=a.values.slice(g,y)}else{const g=a.createInterpolant(),y=c,v=h-c;g.evaluate(r),x=g.resultBuffer.slice(y,v)}l==="quaternion"&&new si().fromArray(x).normalize().conjugate().toArray(x);const m=u.times.length;for(let g=0;g<m;++g){const y=g*f+d;if(l==="quaternion")si.multiplyQuaternionsFlat(u.values,y,x,0,u.values,y);else{const v=f-d*2;for(let w=0;w<v;++w)u.values[y+w]-=x[w]}}}return s.blendMode=ay,s}const RO={convertArray:Aa,isTypedArray:KT,getKeyframeOrder:jT,sortedArray:sx,flattenJSON:Ny,subclip:AO,makeClipAdditive:IO};class Ph{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{s:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<r)break s;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class YT extends Ph{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ca,endingEnd:Ca}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ta:r=e,a=2*t-n;break;case Wc:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ta:o=e,l=2*n-t;break;case Wc:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const u=(n-t)*.5,c=this.valueSize;this._weightPrev=u/(t-a),this._weightNext=u/(l-n),this._offsetPrev=r*c,this._offsetNext=o*c}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,u=l-a,c=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),x=p*p,m=x*p,g=-d*m+2*d*x-d*p,y=(1+d)*m+(-1.5-2*d)*x+(-.5+d)*p+1,v=(-1-f)*m+(1.5+f)*x+.5*p,w=f*m-f*x;for(let _=0;_!==a;++_)r[_]=g*o[c+_]+y*o[u+_]+v*o[l+_]+w*o[h+_];return r}}class Py extends Ph{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,u=l-a,c=(n-t)/(i-t),h=1-c;for(let d=0;d!==a;++d)r[d]=o[u+d]*h+o[l+d]*c;return r}}class ZT extends Ph{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class sr{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Aa(t,this.TimeBufferType),this.values=Aa(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Aa(e.times,Array),values:Aa(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new ZT(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Py(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new YT(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case zc:t=this.InterpolantFactoryMethodDiscrete;break;case Vc:t=this.InterpolantFactoryMethodLinear;break;case uf:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return zc;case this.InterpolantFactoryMethodLinear:return Vc;case this.InterpolantFactoryMethodSmooth:return uf}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=n.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&KT(i))for(let a=0,l=i.length;a!==l;++a){const u=i[a];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,u),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===uf,r=e.length-1;let o=1;for(let a=1;a<r;++a){let l=!1;const u=e[a],c=e[a+1];if(u!==c&&(a!==1||u!==e[0]))if(i)l=!0;else{const h=a*n,d=h-n,f=h+n;for(let p=0;p!==n;++p){const x=t[h+p];if(x!==t[d+p]||x!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[h+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,l=o*n,u=0;u!==n;++u)t[l+u]=t[a+u];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}sr.prototype.TimeBufferType=Float32Array;sr.prototype.ValueBufferType=Float32Array;sr.prototype.DefaultInterpolation=Vc;class el extends sr{}el.prototype.ValueTypeName="bool";el.prototype.ValueBufferType=Array;el.prototype.DefaultInterpolation=zc;el.prototype.InterpolantFactoryMethodLinear=void 0;el.prototype.InterpolantFactoryMethodSmooth=void 0;class ky extends sr{}ky.prototype.ValueTypeName="color";class Qc extends sr{}Qc.prototype.ValueTypeName="number";class JT extends Ph{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let u=e*a;for(let c=u+a;u!==c;u+=4)si.slerpFlat(r,0,o,u-a,o,u,l);return r}}class Pu extends sr{InterpolantFactoryMethodLinear(e){return new JT(this.times,this.values,this.getValueSize(),e)}}Pu.prototype.ValueTypeName="quaternion";Pu.prototype.DefaultInterpolation=Vc;Pu.prototype.InterpolantFactoryMethodSmooth=void 0;class tl extends sr{}tl.prototype.ValueTypeName="string";tl.prototype.ValueBufferType=Array;tl.prototype.DefaultInterpolation=zc;tl.prototype.InterpolantFactoryMethodLinear=void 0;tl.prototype.InterpolantFactoryMethodSmooth=void 0;class eh extends sr{}eh.prototype.ValueTypeName="vector";class th{constructor(e,t=-1,n,i=Zf){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=xi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(NO(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(sr.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let a=0;a<r;a++){let l=[],u=[];l.push((a+r-1)%r,a,(a+1)%r),u.push(0,1,0);const c=jT(l);l=sx(l,1,c),u=sx(u,1,c),!i&&l[0]===0&&(l.push(r),u.push(u[0])),o.push(new Qc(".morphTargetInfluences["+t[a].name+"]",l,u).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const u=e[a],c=u.name.match(r);if(c&&c.length>1){const h=c[1];let d=i[h];d||(i[h]=d=[]),d.push(u)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,f,p,x){if(f.length!==0){const m=[],g=[];Ny(f,m,g,p),m.length!==0&&x.push(new h(d,m,g))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const u=e.hierarchy||[];for(let h=0;h<u.length;h++){const d=u[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let x=0;x<d[p].morphTargets.length;x++)f[d[p].morphTargets[x]]=-1;for(const x in f){const m=[],g=[];for(let y=0;y!==d[p].morphTargets.length;++y){const v=d[p];m.push(v.time),g.push(v.morphTarget===x?1:0)}i.push(new Qc(".morphTargetInfluence["+x+"]",m,g))}l=f.length*o}else{const f=".bones["+t[h].name+"]";n(eh,f+".position",d,"pos",i),n(Pu,f+".quaternion",d,"rot",i),n(eh,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function MO(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Qc;case"vector":case"vector2":case"vector3":case"vector4":return eh;case"color":return ky;case"quaternion":return Pu;case"bool":case"boolean":return el;case"string":return tl}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function NO(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=MO(s.type);if(s.times===void 0){const t=[],n=[];Ny(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Wa={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class $y{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,l;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(c){a++,r===!1&&i.onStart!==void 0&&i.onStart(c,o,a),r=!0},this.itemEnd=function(c){o++,i.onProgress!==void 0&&i.onProgress(c,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return l?l(c):c},this.setURLModifier=function(c){return l=c,this},this.addHandler=function(c,h){return u.push(c,h),this},this.removeHandler=function(c){const h=u.indexOf(c);return h!==-1&&u.splice(h,2),this},this.getHandler=function(c){for(let h=0,d=u.length;h<d;h+=2){const f=u[h],p=u[h+1];if(f.global&&(f.lastIndex=0),f.test(c))return p}return null}}}const QT=new $y;class oi{constructor(e){this.manager=e!==void 0?e:QT,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}oi.DEFAULT_MATERIAL_NAME="__DEFAULT";const Dr={};class PO extends Error{constructor(e,t){super(e),this.response=t}}class Zr extends oi{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Wa.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Dr[e]!==void 0){Dr[e].push({onLoad:t,onProgress:n,onError:i});return}Dr[e]=[],Dr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||u.body===void 0||u.body.getReader===void 0)return u;const c=Dr[e],h=u.body.getReader(),d=u.headers.get("Content-Length")||u.headers.get("X-File-Size"),f=d?parseInt(d):0,p=f!==0;let x=0;const m=new ReadableStream({start(g){y();function y(){h.read().then(({done:v,value:w})=>{if(v)g.close();else{x+=w.byteLength;const _=new ProgressEvent("progress",{lengthComputable:p,loaded:x,total:f});for(let T=0,A=c.length;T<A;T++){const M=c[T];M.onProgress&&M.onProgress(_)}g.enqueue(w),y()}})}}});return new Response(m)}else throw new PO(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,u)}).then(u=>{switch(l){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(c=>new DOMParser().parseFromString(c,a));case"json":return u.json();default:if(a===void 0)return u.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return u.arrayBuffer().then(p=>f.decode(p))}}}).then(u=>{Wa.add(e,u);const c=Dr[e];delete Dr[e];for(let h=0,d=c.length;h<d;h++){const f=c[h];f.onLoad&&f.onLoad(u)}}).catch(u=>{const c=Dr[e];if(c===void 0)throw this.manager.itemError(e),u;delete Dr[e];for(let h=0,d=c.length;h<d;h++){const f=c[h];f.onError&&f.onError(u)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class kO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Zr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=th.parse(e[n]);t.push(i)}return t}}class $O extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],a=new lp,l=new Zr(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let u=0;function c(h){l.load(e[h],function(d){const f=r.parse(d,!0);o[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},u+=1,u===6&&(f.mipmapCount===1&&(a.minFilter=Vn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,d=e.length;h<d;++h)c(h);else l.load(e,function(h){const d=r.parse(h,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let x=0;x<d.mipmapCount;x++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+x]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Vn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class nh extends oi{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Wa.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Kc("img");function l(){c(),Wa.add(e,this),t&&t(this),r.manager.itemEnd(e)}function u(h){c(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function c(){a.removeEventListener("load",l,!1),a.removeEventListener("error",u,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",u,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class DO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=new Eh;r.colorSpace=Jn;const o=new nh(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(u){o.load(e[u],function(c){r.images[u]=c,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let u=0;u<e.length;++u)l(u);return r}}class LO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new $a,a=new Zr(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(l){let u;try{u=r.parse(l)}catch(c){if(i!==void 0)i(c);else{console.error(c);return}}u.image!==void 0?o.image=u.image:u.data!==void 0&&(o.image.width=u.width,o.image.height=u.height,o.image.data=u.data),o.wrapS=u.wrapS!==void 0?u.wrapS:Es,o.wrapT=u.wrapT!==void 0?u.wrapT:Es,o.magFilter=u.magFilter!==void 0?u.magFilter:Vn,o.minFilter=u.minFilter!==void 0?u.minFilter:Vn,o.anisotropy=u.anisotropy!==void 0?u.anisotropy:1,u.colorSpace!==void 0?o.colorSpace=u.colorSpace:u.encoding!==void 0&&(o.encoding=u.encoding),u.flipY!==void 0&&(o.flipY=u.flipY),u.format!==void 0&&(o.format=u.format),u.type!==void 0&&(o.type=u.type),u.mipmaps!==void 0&&(o.mipmaps=u.mipmaps,o.minFilter=Uo),u.mipmapCount===1&&(o.minFilter=Vn),u.generateMipmaps!==void 0&&(o.generateMipmaps=u.generateMipmaps),o.needsUpdate=!0,t&&t(o,u)},n,i),o}}class OO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=new Wn,o=new nh(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Ko extends Yt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Xe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class eE extends Ko{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Yt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Xe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Um=new bt,yS=new U,bS=new U;class Dy{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new me(512,512),this.map=null,this.mapPass=null,this.matrix=new bt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ah,this._frameExtents=new me(1,1),this._viewportCount=1,this._viewports=[new rn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;yS.setFromMatrixPosition(e.matrixWorld),t.position.copy(yS),bS.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(bS),t.updateMatrixWorld(),Um.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Um),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Um)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class FO extends Dy{constructor(){super(new as(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=cu*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class tE extends Ko{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Yt.DEFAULT_UP),this.updateMatrix(),this.target=new Yt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new FO}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const vS=new bt,cc=new U,Bm=new U;class UO extends Dy{constructor(){super(new as(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new me(4,2),this._viewportCount=6,this._viewports=[new rn(2,1,1,1),new rn(0,1,1,1),new rn(3,1,1,1),new rn(1,1,1,1),new rn(3,0,1,1),new rn(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),cc.setFromMatrixPosition(e.matrixWorld),n.position.copy(cc),Bm.copy(n.position),Bm.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Bm),n.updateMatrixWorld(),i.makeTranslation(-cc.x,-cc.y,-cc.z),vS.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vS)}}class nE extends Ko{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new UO}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class BO extends Dy{constructor(){super(new np(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sE extends Ko{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Yt.DEFAULT_UP),this.updateMatrix(),this.target=new Yt,this.shadow=new BO}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class iE extends Ko{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class rE extends Ko{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class oE{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class aE extends Ko{constructor(e=new oE,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class _p extends oi{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new Zr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=_p.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Xe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Xe().setHex(o.value);break;case"v2":i.uniforms[r].value=new me().fromArray(o.value);break;case"v3":i.uniforms[r].value=new U().fromArray(o.value);break;case"v4":i.uniforms[r].value=new rn().fromArray(o.value);break;case"m3":i.uniforms[r].value=new $t().fromArray(o.value);break;case"m4":i.uniforms[r].value=new bt().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new me().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new me().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:UT,SpriteMaterial:wy,RawShaderMaterial:BT,ShaderMaterial:_r,PointsMaterial:_y,MeshPhysicalMaterial:zT,MeshStandardMaterial:My,MeshPhongMaterial:VT,MeshToonMaterial:WT,MeshNormalMaterial:GT,MeshLambertMaterial:HT,MeshDepthMaterial:xy,MeshDistanceMaterial:yy,MeshBasicMaterial:Xo,MeshMatcapMaterial:XT,LineDashedMaterial:qT,LineBasicMaterial:Ws,Material:Ms};return new t[e]}}class ix{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class lE extends Ot{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class uE extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Zr(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const m=f.interleavedBuffers[p],g=r(f,m.buffer),y=Jl(m.type,g),v=new op(y,m.stride);return v.uuid=m.uuid,t[p]=v,v}function r(f,p){if(n[p]!==void 0)return n[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return n[p]=g,g}const o=e.isInstancedBufferGeometry?new lE:new Ot,a=e.data.index;if(a!==void 0){const f=Jl(a.type,a.array);o.setIndex(new on(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let x;if(p.isInterleavedBufferAttribute){const m=i(e.data,p.data);x=new za(m,p.itemSize,p.offset,p.normalized)}else{const m=Jl(p.type,p.array),g=p.isInstancedBufferAttribute?du:on;x=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(x.name=p.name),p.usage!==void 0&&x.setUsage(p.usage),o.setAttribute(f,x)}const u=e.data.morphAttributes;if(u)for(const f in u){const p=u[f],x=[];for(let m=0,g=p.length;m<g;m++){const y=p[m];let v;if(y.isInterleavedBufferAttribute){const w=i(e.data,y.data);v=new za(w,y.itemSize,y.offset,y.normalized)}else{const w=Jl(y.type,y.array);v=new on(w,y.itemSize,y.normalized)}y.name!==void 0&&(v.name=y.name),x.push(v)}o.morphAttributes[f]=x}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,p=h.length;f!==p;++f){const x=h[f];o.addGroup(x.start,x.count,x.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new U;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new Is(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class zO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?ix.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Zr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let u=null;try{u=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const c=u.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(u,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ix.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Zr(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(u)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,r,l,a,n),c=this.parseSkeletons(e.skeletons,u);if(this.bindSkeletons(u,c),t!==void 0){let h=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(u)}return u}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),u=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,u),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Da().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new ap().fromJSON(e[r],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new uE;for(let r=0,o=e.length;r<o;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in xS?a=xS[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new _p;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=th.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const u=l,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u)?u:n.resourcePath+u;return o(c)}else return l.data?{data:Jl(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new $y(t);r=new nh(l),r.setCrossOrigin(this.crossOrigin);for(let u=0,c=e.length;u<c;u++){const h=e[u],d=h.url;if(Array.isArray(d)){const f=[];for(let p=0,x=d.length;p<x;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new $a(g.data,g.width,g.height)))}i[h.uuid]=new Ea(f)}else{const f=a(h.url);i[h.uuid]=new Ea(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:Jl(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new nh(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],u=l.url;if(Array.isArray(u)){const c=[];for(let h=0,d=u.length;h<d;h++){const f=u[h],p=await r(f);p!==null&&(p instanceof HTMLImageElement?c.push(p):c.push(new $a(p.data,p.width,p.height)))}n[l.uuid]=new Ea(c)}else{const c=await r(l.url);n[l.uuid]=new Ea(c)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],u=l.data;let c;Array.isArray(u)?(c=new Eh,u.length===6&&(c.needsUpdate=!0)):(u&&u.data?c=new $a:c=new Wn,u&&(c.needsUpdate=!0)),c.source=l,c.uuid=a.uuid,a.name!==void 0&&(c.name=a.name),a.mapping!==void 0&&(c.mapping=n(a.mapping,VO)),a.channel!==void 0&&(c.channel=a.channel),a.offset!==void 0&&c.offset.fromArray(a.offset),a.repeat!==void 0&&c.repeat.fromArray(a.repeat),a.center!==void 0&&c.center.fromArray(a.center),a.rotation!==void 0&&(c.rotation=a.rotation),a.wrap!==void 0&&(c.wrapS=n(a.wrap[0],wS),c.wrapT=n(a.wrap[1],wS)),a.format!==void 0&&(c.format=a.format),a.internalFormat!==void 0&&(c.internalFormat=a.internalFormat),a.type!==void 0&&(c.type=a.type),a.colorSpace!==void 0&&(c.colorSpace=a.colorSpace),a.encoding!==void 0&&(c.encoding=a.encoding),a.minFilter!==void 0&&(c.minFilter=n(a.minFilter,SS)),a.magFilter!==void 0&&(c.magFilter=n(a.magFilter,SS)),a.anisotropy!==void 0&&(c.anisotropy=a.anisotropy),a.flipY!==void 0&&(c.flipY=a.flipY),a.generateMipmaps!==void 0&&(c.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(c.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(c.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(c.compareFunction=a.compareFunction),a.userData!==void 0&&(c.userData=a.userData),i[a.uuid]=c}return i}parseObject(e,t,n,i,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,x=d.length;p<x;p++){const m=d[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(n[m])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function u(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let c,h;switch(e.type){case"Scene":o=new vy,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Xe(e.background):o.background=u(e.background)),e.environment!==void 0&&(o.environment=u(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new rp(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new ip(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new as(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new np(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new iE(e.color,e.intensity);break;case"DirectionalLight":o=new sE(e.color,e.intensity);break;case"PointLight":o=new nE(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new rE(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new tE(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new eE(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new aE().fromJSON(e);break;case"SkinnedMesh":c=a(e.geometry),h=l(e.material),o=new CT(c,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":c=a(e.geometry),h=l(e.material),o=new es(c,h);break;case"InstancedMesh":c=a(e.geometry),h=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new TT(c,h,d),o.instanceMatrix=new du(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new du(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":c=a(e.geometry),h=l(e.material),o=new ET(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,h),o.geometry=c,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(x=>{const m=new Us;m.min.fromArray(x.boxMin),m.max.fromArray(x.boxMax);const g=new Is;return g.radius=x.sphereRadius,g.center.fromArray(x.sphereCenter),{boxInitialized:x.boxInitialized,box:m,sphereInitialized:x.sphereInitialized,sphere:g}}),o._maxGeometryCount=e.maxGeometryCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=u(e.matricesTexture.uuid);break;case"LOD":o=new _T;break;case"Line":o=new Bo(a(e.geometry),l(e.material));break;case"LineLoop":o=new AT(a(e.geometry),l(e.material));break;case"LineSegments":o=new Ar(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new IT(a(e.geometry),l(e.material));break;case"Sprite":o=new ST(l(e.material));break;case"Group":o=new eu;break;case"Bone":o=new Sy;break;default:o=new Yt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],x=o.getObjectByProperty("uuid",p.object);x!==void 0&&o.addLevel(x,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const VO={UVMapping:jf,CubeReflectionMapping:Yr,CubeRefractionMapping:Fo,EquirectangularReflectionMapping:Oc,EquirectangularRefractionMapping:Fc,CubeUVReflectionMapping:Iu},wS={RepeatWrapping:Uc,ClampToEdgeWrapping:Es,MirroredRepeatWrapping:Bc},SS={NearestFilter:zn,NearestMipmapNearestFilter:bf,NearestMipmapLinearFilter:Sc,LinearFilter:Vn,LinearMipmapNearestFilter:Qx,LinearMipmapLinearFilter:Uo};class WO extends oi{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Wa.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){Wa.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let Ud;class Ly{static getContext(){return Ud===void 0&&(Ud=new(window.AudioContext||window.webkitAudioContext)),Ud}static setContext(e){Ud=e}}class GO extends oi{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Zr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const u=l.slice(0);Ly.getContext().decodeAudioData(u,function(h){t(h)}).catch(a)}catch(u){a(u)}},n,i);function a(l){i?i(l):console.error(l),r.manager.itemError(e)}}}const _S=new bt,CS=new bt,aa=new bt;class HO{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new as,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new as,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,aa.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(ka*t.fov*.5)/t.zoom;let a,l;CS.elements[12]=-i,_S.elements[12]=i,a=-o*t.aspect+r,l=o*t.aspect+r,aa.elements[0]=2*t.near/(l-a),aa.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(aa),a=-o*t.aspect-r,l=o*t.aspect-r,aa.elements[0]=2*t.near/(l-a),aa.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(aa)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(CS),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_S)}}class cE{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=TS(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=TS();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function TS(){return(typeof performance>"u"?Date:performance).now()}const la=new U,ES=new si,XO=new U,ua=new U;class qO extends Yt{constructor(){super(),this.type="AudioListener",this.context=Ly.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new cE}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(la,ES,XO),ua.set(0,0,-1).applyQuaternion(ES),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(la.x,i),t.positionY.linearRampToValueAtTime(la.y,i),t.positionZ.linearRampToValueAtTime(la.z,i),t.forwardX.linearRampToValueAtTime(ua.x,i),t.forwardY.linearRampToValueAtTime(ua.y,i),t.forwardZ.linearRampToValueAtTime(ua.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(la.x,la.y,la.z),t.setOrientation(ua.x,ua.y,ua.z,n.x,n.y,n.z)}}class hE extends Yt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ca=new U,AS=new si,KO=new U,ha=new U;class jO extends hE{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ca,AS,KO),ha.set(0,0,1).applyQuaternion(AS);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ca.x,n),t.positionY.linearRampToValueAtTime(ca.y,n),t.positionZ.linearRampToValueAtTime(ca.z,n),t.orientationX.linearRampToValueAtTime(ha.x,n),t.orientationY.linearRampToValueAtTime(ha.y,n),t.orientationZ.linearRampToValueAtTime(ha.z,n)}else t.setPosition(ca.x,ca.y,ca.z),t.setOrientation(ha.x,ha.y,ha.z)}}class YO{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class dE{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[r+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,u=t+t;l!==u;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){si.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;si.multiplyQuaternionsFlat(e,o,e,t,e,n),si.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Oy="\\[\\]\\.:\\/",ZO=new RegExp("["+Oy+"]","g"),Fy="[^"+Oy+"]",JO="[^"+Oy.replace("\\.","")+"]",QO=/((?:WC+[\/:])*)/.source.replace("WC",Fy),eF=/(WCOD+)?/.source.replace("WCOD",JO),tF=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fy),nF=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fy),sF=new RegExp("^"+QO+eF+tF+nF+"$"),iF=["material","materials","bones","map"];class rF{constructor(e,t,n){const i=n||Xt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Xt{constructor(e,t,n){this.path=t,this.parsedPath=n||Xt.parseTrackName(t),this.node=Xt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Xt.Composite(e,t,n):new Xt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ZO,"")}static parseTrackName(e){const t=sF.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);iF.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Xt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let u=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let c=0;c<e.length;c++)if(e[c].name===u){u=c;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(u!==void 0){if(e[u]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[u]}}const o=e[i];if(o===void 0){const u=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Xt.Composite=rF;Xt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Xt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Xt.prototype.GetterByBindingType=[Xt.prototype._getValue_direct,Xt.prototype._getValue_array,Xt.prototype._getValue_arrayElement,Xt.prototype._getValue_toArray];Xt.prototype.SetterByBindingTypeAndVersioning=[[Xt.prototype._setValue_direct,Xt.prototype._setValue_direct_setNeedsUpdate,Xt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Xt.prototype._setValue_array,Xt.prototype._setValue_array_setNeedsUpdate,Xt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Xt.prototype._setValue_arrayElement,Xt.prototype._setValue_arrayElement_setNeedsUpdate,Xt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Xt.prototype._setValue_fromArray,Xt.prototype._setValue_fromArray_setNeedsUpdate,Xt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class oF{constructor(){this.isAnimationObjectGroup=!0,this.uuid=xi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let a,l=e.length,u=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const d=arguments[c],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let x=0,m=o;x!==m;++x)r[x].push(new Xt(d,n[x],i[x]))}else if(p<u){a=e[p];const x=--u,m=e[x];t[m.uuid]=p,e[p]=m,t[f]=x,e[x]=d;for(let g=0,y=o;g!==y;++g){const v=r[g],w=v[x];let _=v[p];v[p]=w,_===void 0&&(_=new Xt(d,n[g],i[g])),v[x]=_}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],u=l.uuid,c=t[u];if(c!==void 0&&c>=r){const h=r++,d=e[h];t[d.uuid]=c,e[c]=d,t[u]=h,e[h]=l;for(let f=0,p=i;f!==p;++f){const x=n[f],m=x[h],g=x[c];x[c]=m,x[h]=g}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const u=arguments[a],c=u.uuid,h=t[c];if(h!==void 0)if(delete t[c],h<r){const d=--r,f=e[d],p=--o,x=e[p];t[f.uuid]=h,e[h]=f,t[x.uuid]=d,e[d]=x,e.pop();for(let m=0,g=i;m!==g;++m){const y=n[m],v=y[d],w=y[p];y[h]=v,y[d]=w,y.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=h),e[h]=f,e.pop();for(let p=0,x=i;p!==x;++p){const m=n[p];m[h]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,a=this._parsedPaths,l=this._objects,u=l.length,c=this.nCachedObjects_,h=new Array(u);i=r.length,n[e]=i,o.push(e),a.push(t),r.push(h);for(let d=c,f=l.length;d!==f;++d){const p=l[d];h[d]=new Xt(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],u=e[a];t[u]=n,o[n]=l,o.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class fE{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),l={endingStart:Ca,endingEnd:Ca};for(let u=0;u!==o;++u){const c=r[u].createInterpolant(null);a[u]=c,c.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=X2,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,u=a.sampleValues;return l[0]=r,l[1]=r+n,u[0]=e/o,u[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,u=this._propertyBindings;switch(this.blendMode){case ay:for(let c=0,h=l.length;c!==h;++c)l[c].evaluate(o),u[c].accumulateAdditive(a);break;case Zf:default:for(let c=0,h=l.length;c!==h;++c)l[c].evaluate(o),u[c].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===q2;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===H2){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const u=e<0;this._setEndings(u,!u,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ta,i.endingEnd=Ta):(e?i.endingStart=this.zeroSlopeAtStart?Ta:Ca:i.endingStart=Wc,t?i.endingEnd=this.zeroSlopeAtEnd?Ta:Ca:i.endingEnd=Wc)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,l[0]=t,a[1]=r+e,l[1]=n,this}}const aF=new Float32Array(1);class lF extends uo{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,u=this._bindingsByRootAndName;let c=u[l];c===void 0&&(c={},u[l]=c);for(let h=0;h!==r;++h){const d=i[h],f=d.name;let p=c[f];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const x=t&&t._propertyBindings[h].binding.parsedPath;p=new dE(Xt.create(n,f,x),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],l=a.knownActions,u=l[l.length-1],c=e._byClipCacheIndex;u._byClipCacheIndex=c,l[c]=u,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete h[d],l.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],u=e._cacheIndex;l._cacheIndex=u,t[u]=l,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Py(new Float32Array(2),new Float32Array(2),1,aF),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?th.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let u=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Zf),l!==void 0){const h=l.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;u=l.knownActions[0],o===null&&(o=u._clip)}if(o===null)return null;const c=new fE(this,o,t,n);return this._bindAction(c,u),this._addInactiveAction(c,a,r),c}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?th.findByName(n,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let u=0;u!==n;++u)t[u]._update(i,e,r,o);const a=this._bindings,l=this._nActiveBindings;for(let u=0;u!==l;++u)a[u].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let a=0,l=o.length;a!==l;++a){const u=o[a];this._deactivateAction(u);const c=u._cacheIndex,h=t[t.length-1];u._cacheIndex=null,u._byClipCacheIndex=null,h._cacheIndex=c,t[c]=h,t.pop(),this._removeInactiveBindingsForAction(u)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Uy{constructor(e){this.value=e}clone(){return new Uy(this.value.clone===void 0?this.value:this.value.clone())}}let uF=0;class cF extends uo{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:uF++}),this.name="",this.usage=qc,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class hF extends op{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class dF{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class fF{constructor(e,t,n=0,i=1/0){this.ray=new Ru(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ep,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return rx(e,this,n,t),n.sort(IS),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)rx(e[i],this,n,t);return n.sort(IS),n}}function IS(s,e){return s.distance-e.distance}function rx(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)rx(i[r],e,t,!0)}}class pF{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Fn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class mF{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const RS=new me;class gF{constructor(e=new me(1/0,1/0),t=new me(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=RS.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,RS).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const MS=new U,Bd=new U;class xF{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){MS.subVectors(e,this.start),Bd.subVectors(this.end,this.start);const n=Bd.dot(Bd);let r=Bd.dot(MS)/n;return t&&(r=Fn(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const NS=new U;class yF extends Yt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Ot,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const u=o/l*Math.PI*2,c=a/l*Math.PI*2;i.push(Math.cos(u),Math.sin(u),1,Math.cos(c),Math.sin(c),1)}n.setAttribute("position",new et(i,3));const r=new Ws({fog:!1,toneMapped:!1});this.cone=new Ar(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),NS.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(NS),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Co=new U,zd=new bt,zm=new bt;class bF extends Ar{constructor(e){const t=pE(e),n=new Ot,i=[],r=[],o=new Xe(0,0,1),a=new Xe(0,1,0);for(let u=0;u<t.length;u++){const c=t[u];c.parent&&c.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new et(i,3)),n.setAttribute("color",new et(r,3));const l=new Ws({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");zm.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(zd.multiplyMatrices(zm,a.matrixWorld),Co.setFromMatrixPosition(zd),i.setXYZ(o,Co.x,Co.y,Co.z),zd.multiplyMatrices(zm,a.parent.matrixWorld),Co.setFromMatrixPosition(zd),i.setXYZ(o+1,Co.x,Co.y,Co.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function pE(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,pE(s.children[t]));return e}class vF extends es{constructor(e,t,n){const i=new Nh(t,4,2),r=new Xo({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const wF=new U,PS=new Xe,kS=new Xe;class SF extends Yt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Mh(t);i.rotateY(Math.PI*.5),this.material=new Xo({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new on(o,3)),this.add(new es(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");PS.copy(this.light.color),kS.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?PS:kS;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(wF.setFromMatrixPosition(this.light.matrixWorld).negate())}}class _F extends Ar{constructor(e=10,t=10,n=4473924,i=8947848){n=new Xe(n),i=new Xe(i);const r=t/2,o=e/t,a=e/2,l=[],u=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const x=d===r?n:i;x.toArray(u,f),f+=3,x.toArray(u,f),f+=3,x.toArray(u,f),f+=3,x.toArray(u,f),f+=3}const c=new Ot;c.setAttribute("position",new et(l,3)),c.setAttribute("color",new et(u,3));const h=new Ws({vertexColors:!0,toneMapped:!1});super(c,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class CF extends Ar{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Xe(r),o=new Xe(o);const a=[],l=[];if(t>1)for(let h=0;h<t;h++){const d=h/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const x=h&1?r:o;l.push(x.r,x.g,x.b),l.push(x.r,x.g,x.b)}for(let h=0;h<n;h++){const d=h&1?r:o,f=e-e/n*h;for(let p=0;p<i;p++){let x=p/i*(Math.PI*2),m=Math.sin(x)*f,g=Math.cos(x)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),x=(p+1)/i*(Math.PI*2),m=Math.sin(x)*f,g=Math.cos(x)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const u=new Ot;u.setAttribute("position",new et(a,3)),u.setAttribute("color",new et(l,3));const c=new Ws({vertexColors:!0,toneMapped:!1});super(u,c),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const $S=new U,Vd=new U,DS=new U;class TF extends Yt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Ot;i.setAttribute("position",new et([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Ws({fog:!1,toneMapped:!1});this.lightPlane=new Bo(i,r),this.add(this.lightPlane),i=new Ot,i.setAttribute("position",new et([0,0,0,0,0,1],3)),this.targetLine=new Bo(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),$S.setFromMatrixPosition(this.light.matrixWorld),Vd.setFromMatrixPosition(this.light.target.matrixWorld),DS.subVectors(Vd,$S),this.lightPlane.lookAt(Vd),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Vd),this.targetLine.scale.z=DS.length()}}const Wd=new U,On=new tp;class EF extends Ar{constructor(e){const t=new Ot,n=new Ws({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,x){l(p),l(x)}function l(p){i.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new et(i,3)),t.setAttribute("color",new et(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const u=new Xe(16755200),c=new Xe(16711680),h=new Xe(43775),d=new Xe(16777215),f=new Xe(3355443);this.setColors(u,c,h,d,f)}setColors(e,t,n,i,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;On.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Bn("c",t,e,On,0,0,-1),Bn("t",t,e,On,0,0,1),Bn("n1",t,e,On,-1,-1,-1),Bn("n2",t,e,On,n,-1,-1),Bn("n3",t,e,On,-1,i,-1),Bn("n4",t,e,On,n,i,-1),Bn("f1",t,e,On,-1,-1,1),Bn("f2",t,e,On,n,-1,1),Bn("f3",t,e,On,-1,i,1),Bn("f4",t,e,On,n,i,1),Bn("u1",t,e,On,n*.7,i*1.1,-1),Bn("u2",t,e,On,-1*.7,i*1.1,-1),Bn("u3",t,e,On,0,i*2,-1),Bn("cf1",t,e,On,-1,0,1),Bn("cf2",t,e,On,n,0,1),Bn("cf3",t,e,On,0,-1,1),Bn("cf4",t,e,On,0,i,1),Bn("cn1",t,e,On,-1,0,-1),Bn("cn2",t,e,On,n,0,-1),Bn("cn3",t,e,On,0,-1,-1),Bn("cn4",t,e,On,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Bn(s,e,t,n,i,r,o){Wd.set(i,r,o).unproject(n);const a=e[s];if(a!==void 0){const l=t.getAttribute("position");for(let u=0,c=a.length;u<c;u++)l.setXYZ(a[u],Wd.x,Wd.y,Wd.z)}}const Gd=new Us;class AF extends Ar{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Ot;r.setIndex(new on(n,1)),r.setAttribute("position",new on(i,3)),super(r,new Ws({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Gd.setFromObject(this.object),Gd.isEmpty())return;const t=Gd.min,n=Gd.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class IF extends Ar{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Ot;r.setIndex(new on(n,1)),r.setAttribute("position",new et(i,3)),super(r,new Ws({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class RF extends Bo{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Ot;o.setAttribute("position",new et(r,3)),o.computeBoundingSphere(),super(o,new Ws({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Ot;l.setAttribute("position",new et(a,3)),l.computeBoundingSphere(),this.add(new es(l,new Xo({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const LS=new U;let Hd,Vm;class MF extends Yt{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Hd===void 0&&(Hd=new Ot,Hd.setAttribute("position",new et([0,0,0,0,1,0],3)),Vm=new Nu(0,.5,1,5,1),Vm.translate(0,-.5,0)),this.position.copy(t),this.line=new Bo(Hd,new Ws({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new es(Vm,new Xo({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{LS.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(LS,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class NF extends Ar{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Ot;i.setAttribute("position",new et(t,3)),i.setAttribute("color",new et(n,3));const r=new Ws({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Xe,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class PF{constructor(){this.type="ShapePath",this.color=new Xe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new jc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const y=[];for(let v=0,w=g.length;v<w;v++){const _=g[v],T=new Da;T.curves=_.curves,y.push(T)}return y}function n(g,y){const v=y.length;let w=!1;for(let _=v-1,T=0;T<v;_=T++){let A=y[_],M=y[T],C=M.x-A.x,R=M.y-A.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(A=y[T],C=-C,M=y[_],R=-R),g.y<A.y||g.y>M.y)continue;if(g.y===A.y){if(g.x===A.x)return!0}else{const $=R*(g.x-A.x)-C*(g.y-A.y);if($===0)return!0;if($<0)continue;w=!w}}else{if(g.y!==A.y)continue;if(M.x<=g.x&&g.x<=A.x||A.x<=g.x&&g.x<=M.x)return!0}}return w}const i=mr.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,l;const u=[];if(r.length===1)return a=r[0],l=new Da,l.curves=a.curves,u.push(l),u;let c=!i(r[0].getPoints());c=e?!c:c;const h=[],d=[];let f=[],p=0,x;d[p]=void 0,f[p]=[];for(let g=0,y=r.length;g<y;g++)a=r[g],x=a.getPoints(),o=i(x),o=e?!o:o,o?(!c&&d[p]&&p++,d[p]={s:new Da,p:x},d[p].s.curves=a.curves,c&&p++,f[p]=[]):f[p].push({h:a,p:x[0]});if(!d[0])return t(r);if(d.length>1){let g=!1,y=0;for(let v=0,w=d.length;v<w;v++)h[v]=[];for(let v=0,w=d.length;v<w;v++){const _=f[v];for(let T=0;T<_.length;T++){const A=_[T];let M=!0;for(let C=0;C<d.length;C++)n(A.p,d[C].p)&&(v!==C&&y++,M?(M=!1,h[C].push(A)):g=!0);M&&h[v].push(A)}}y>0&&g===!1&&(f=h)}let m;for(let g=0,y=d.length;g<y;g++){l=d[g].s,u.push(l),m=f[g];for(let v=0,w=m.length;v<w;v++)l.holes.push(m[v].h)}return u}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Sh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Sh);const kF=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Jx,AddEquation:Ao,AddOperation:N2,AdditiveAnimationBlendMode:ay,AdditiveBlending:yg,AlphaFormat:U2,AlwaysCompare:sT,AlwaysDepth:C2,AlwaysStencilFunc:jg,AmbientLight:iE,AnimationAction:fE,AnimationClip:th,AnimationLoader:kO,AnimationMixer:lF,AnimationObjectGroup:oF,AnimationUtils:RO,ArcCurve:RT,ArrayCamera:bT,ArrowHelper:MF,AttachedBindMode:_g,Audio:hE,AudioAnalyser:YO,AudioContext:Ly,AudioListener:qO,AudioLoader:GO,AxesHelper:NF,BackSide:Fs,BasicDepthPacking:K2,BasicShadowMap:zN,BatchedMesh:ET,Bone:Sy,BooleanKeyframeTrack:el,Box2:gF,Box3:Us,Box3Helper:IF,BoxGeometry:Qa,BoxHelper:AF,BufferAttribute:on,BufferGeometry:Ot,BufferGeometryLoader:uE,ByteType:O2,Cache:Wa,Camera:tp,CameraHelper:EF,CanvasTexture:QL,CapsuleGeometry:cp,CatmullRomCurve3:MT,CineonToneMapping:$2,CircleGeometry:hp,ClampToEdgeWrapping:Es,Clock:cE,Color:Xe,ColorKeyframeTrack:ky,ColorManagement:Qt,CompressedArrayTexture:ZL,CompressedCubeTexture:JL,CompressedTexture:lp,CompressedTextureLoader:$O,ConeGeometry:dp,ConstantAlphaFactor:w2,ConstantColorFactor:b2,CubeCamera:cT,CubeReflectionMapping:Yr,CubeRefractionMapping:Fo,CubeTexture:Eh,CubeTextureLoader:DO,CubeUVReflectionMapping:Iu,CubicBezierCurve:Ty,CubicBezierCurve3:NT,CubicInterpolant:YT,CullFaceBack:xg,CullFaceFront:o2,CullFaceFrontBack:BN,CullFaceNone:r2,Curve:nr,CurvePath:kT,CustomBlending:a2,CustomToneMapping:D2,CylinderGeometry:Nu,Cylindrical:mF,Data3DTexture:dy,DataArrayTexture:Qf,DataTexture:$a,DataTextureLoader:LO,DataUtils:ZP,DecrementStencilOp:QN,DecrementWrapStencilOp:tP,DefaultLoadingManager:QT,DepthFormat:Po,DepthStencilFormat:Ba,DepthTexture:gy,DetachedBindMode:L2,DirectionalLight:sE,DirectionalLightHelper:TF,DiscreteInterpolant:ZT,DisplayP3ColorSpace:Jf,DodecahedronGeometry:fp,DoubleSide:hr,DstAlphaFactor:p2,DstColorFactor:g2,DynamicCopyUsage:gP,DynamicDrawUsage:cP,DynamicReadUsage:fP,EdgesGeometry:$T,EllipseCurve:up,EqualCompare:Q2,EqualDepth:E2,EqualStencilFunc:rP,EquirectangularReflectionMapping:Oc,EquirectangularRefractionMapping:Fc,Euler:Th,EventDispatcher:uo,ExtrudeGeometry:mp,FileLoader:Zr,Float16BufferAttribute:sk,Float32BufferAttribute:et,Float64BufferAttribute:ik,FloatType:Ji,Fog:rp,FogExp2:ip,FramebufferTexture:YL,FrontSide:jr,Frustum:Ah,GLBufferAttribute:dF,GLSL1:yP,GLSL3:Yg,GreaterCompare:eT,GreaterDepth:I2,GreaterEqualCompare:nT,GreaterEqualDepth:A2,GreaterEqualStencilFunc:uP,GreaterStencilFunc:aP,GridHelper:_F,Group:eu,HalfFloatType:lu,HemisphereLight:eE,HemisphereLightHelper:SF,IcosahedronGeometry:gp,ImageBitmapLoader:WO,ImageLoader:nh,ImageUtils:hy,IncrementStencilOp:JN,IncrementWrapStencilOp:eP,InstancedBufferAttribute:du,InstancedBufferGeometry:lE,InstancedInterleavedBuffer:hF,InstancedMesh:TT,Int16BufferAttribute:tk,Int32BufferAttribute:nk,Int8BufferAttribute:JP,IntType:ey,InterleavedBuffer:op,InterleavedBufferAttribute:za,Interpolant:Ph,InterpolateDiscrete:zc,InterpolateLinear:Vc,InterpolateSmooth:uf,InvertStencilOp:nP,KeepStencilOp:pa,KeyframeTrack:sr,LOD:_T,LatheGeometry:Rh,Layers:ep,LessCompare:J2,LessDepth:T2,LessEqualCompare:uy,LessEqualDepth:Lc,LessEqualStencilFunc:oP,LessStencilFunc:iP,Light:Ko,LightProbe:aE,Line:Bo,Line3:xF,LineBasicMaterial:Ws,LineCurve:Ey,LineCurve3:PT,LineDashedMaterial:qT,LineLoop:AT,LineSegments:Ar,LinearDisplayP3ColorSpace:Ch,LinearEncoding:ly,LinearFilter:Vn,LinearInterpolant:Py,LinearMipMapLinearFilter:XN,LinearMipMapNearestFilter:HN,LinearMipmapLinearFilter:Uo,LinearMipmapNearestFilter:Qx,LinearSRGBColorSpace:Sr,LinearToneMapping:P2,LinearTransfer:Gc,Loader:oi,LoaderUtils:ix,LoadingManager:$y,LoopOnce:H2,LoopPingPong:q2,LoopRepeat:X2,LuminanceAlphaFormat:z2,LuminanceFormat:B2,MOUSE:FN,Material:Ms,MaterialLoader:_p,MathUtils:kP,Matrix3:$t,Matrix4:bt,MaxEquation:Sg,Mesh:es,MeshBasicMaterial:Xo,MeshDepthMaterial:xy,MeshDistanceMaterial:yy,MeshLambertMaterial:HT,MeshMatcapMaterial:XT,MeshNormalMaterial:GT,MeshPhongMaterial:VT,MeshPhysicalMaterial:zT,MeshStandardMaterial:My,MeshToonMaterial:WT,MinEquation:wg,MirroredRepeatWrapping:Bc,MixOperation:M2,MultiplyBlending:vg,MultiplyOperation:_h,NearestFilter:zn,NearestMipMapLinearFilter:GN,NearestMipMapNearestFilter:WN,NearestMipmapLinearFilter:Sc,NearestMipmapNearestFilter:bf,NeverCompare:Z2,NeverDepth:_2,NeverStencilFunc:sP,NoBlending:zr,NoColorSpace:mi,NoToneMapping:Vr,NormalAnimationBlendMode:Zf,NormalBlending:Pa,NotEqualCompare:tT,NotEqualDepth:R2,NotEqualStencilFunc:lP,NumberKeyframeTrack:Qc,Object3D:Yt,ObjectLoader:zO,ObjectSpaceNormalMap:Y2,OctahedronGeometry:Mh,OneFactor:h2,OneMinusConstantAlphaFactor:S2,OneMinusConstantColorFactor:v2,OneMinusDstAlphaFactor:m2,OneMinusDstColorFactor:x2,OneMinusSrcAlphaFactor:yf,OneMinusSrcColorFactor:f2,OrthographicCamera:np,P3Primaries:Xc,PCFShadowMap:Zx,PCFSoftShadowMap:Kf,PMREMGenerator:Jg,Path:jc,PerspectiveCamera:as,Plane:To,PlaneGeometry:Ih,PlaneHelper:RF,PointLight:nE,PointLightHelper:vF,Points:IT,PointsMaterial:_y,PolarGridHelper:CF,PolyhedronGeometry:qo,PositionalAudio:jO,PropertyBinding:Xt,PropertyMixer:dE,QuadraticBezierCurve:Ay,QuadraticBezierCurve3:Iy,Quaternion:si,QuaternionKeyframeTrack:Pu,QuaternionLinearInterpolant:JT,RED_GREEN_RGTC2_Format:qg,RED_RGTC1_Format:G2,REVISION:Sh,RGBADepthPacking:j2,RGBAFormat:ei,RGBAIntegerFormat:ry,RGBA_ASTC_10x10_Format:zg,RGBA_ASTC_10x5_Format:Fg,RGBA_ASTC_10x6_Format:Ug,RGBA_ASTC_10x8_Format:Bg,RGBA_ASTC_12x10_Format:Vg,RGBA_ASTC_12x12_Format:Wg,RGBA_ASTC_4x4_Format:Mg,RGBA_ASTC_5x4_Format:Ng,RGBA_ASTC_5x5_Format:Pg,RGBA_ASTC_6x5_Format:kg,RGBA_ASTC_6x6_Format:$g,RGBA_ASTC_8x5_Format:Dg,RGBA_ASTC_8x6_Format:Lg,RGBA_ASTC_8x8_Format:Og,RGBA_BPTC_Format:lf,RGBA_ETC2_EAC_Format:Rg,RGBA_PVRTC_2BPPV1_Format:Ag,RGBA_PVRTC_4BPPV1_Format:Eg,RGBA_S3TC_DXT1_Format:rf,RGBA_S3TC_DXT3_Format:of,RGBA_S3TC_DXT5_Format:af,RGB_BPTC_SIGNED_Format:Gg,RGB_BPTC_UNSIGNED_Format:Hg,RGB_ETC1_Format:oy,RGB_ETC2_Format:Ig,RGB_PVRTC_2BPPV1_Format:Tg,RGB_PVRTC_4BPPV1_Format:Cg,RGB_S3TC_DXT1_Format:sf,RGFormat:W2,RGIntegerFormat:iy,RawShaderMaterial:BT,Ray:Ru,Raycaster:fF,Rec709Primaries:Hc,RectAreaLight:rE,RedFormat:V2,RedIntegerFormat:sy,ReinhardToneMapping:k2,RenderTarget:oT,RepeatWrapping:Uc,ReplaceStencilOp:ZN,ReverseSubtractEquation:u2,RingGeometry:xp,SIGNED_RED_GREEN_RGTC2_Format:Kg,SIGNED_RED_RGTC1_Format:Xg,SRGBColorSpace:Jn,SRGBTransfer:gn,Scene:vy,ShaderChunk:Rt,ShaderLib:qi,ShaderMaterial:_r,ShadowMaterial:UT,Shape:Da,ShapeGeometry:yp,ShapePath:PF,ShapeUtils:mr,ShortType:F2,Skeleton:ap,SkeletonHelper:bF,SkinnedMesh:CT,Source:Ea,Sphere:Is,SphereGeometry:Nh,Spherical:pF,SphericalHarmonics3:oE,SplineCurve:Ry,SpotLight:tE,SpotLightHelper:yF,Sprite:ST,SpriteMaterial:wy,SrcAlphaFactor:xf,SrcAlphaSaturateFactor:y2,SrcColorFactor:d2,StaticCopyUsage:mP,StaticDrawUsage:qc,StaticReadUsage:dP,StereoCamera:HO,StreamCopyUsage:xP,StreamDrawUsage:hP,StreamReadUsage:pP,StringKeyframeTrack:tl,SubtractEquation:l2,SubtractiveBlending:bg,TOUCH:UN,TangentSpaceNormalMap:Ho,TetrahedronGeometry:bp,Texture:Wn,TextureLoader:OO,TorusGeometry:vp,TorusKnotGeometry:wp,Triangle:Js,TriangleFanDrawMode:jN,TriangleStripDrawMode:KN,TrianglesDrawMode:qN,TubeGeometry:Sp,TwoPassDoubleSide:VN,UVMapping:jf,Uint16BufferAttribute:fy,Uint32BufferAttribute:py,Uint8BufferAttribute:QP,Uint8ClampedBufferAttribute:ek,Uniform:Uy,UniformsGroup:cF,UniformsLib:Le,UniformsUtils:uT,UnsignedByteType:Wr,UnsignedInt248Type:No,UnsignedIntType:Br,UnsignedShort4444Type:ty,UnsignedShort5551Type:ny,UnsignedShortType:Yf,VSMShadowMap:lr,Vector2:me,Vector3:U,Vector4:rn,VectorKeyframeTrack:eh,VideoTexture:jL,WebGL1Renderer:vT,WebGL3DRenderTarget:UP,WebGLArrayRenderTarget:FP,WebGLCoordinateSystem:Qi,WebGLCubeRenderTarget:hT,WebGLMultipleRenderTargets:BP,WebGLRenderTarget:er,WebGLRenderer:by,WebGLUtils:yT,WebGPUCoordinateSystem:uu,WireframeGeometry:FT,WrapAroundEnding:Wc,ZeroCurvatureEnding:Ca,ZeroFactor:c2,ZeroSlopeEnding:Ta,ZeroStencilOp:YN,_SRGBAFormat:vf,createCanvasElement:rT,sRGBEncoding:ko},Symbol.toStringTag,{value:"Module"}));function $F(s){return{all:s=s||new Map,on:function(e,t){var n=s.get(e);n?n.push(t):s.set(e,[t])},off:function(e,t){var n=s.get(e);n&&(t?n.splice(n.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var n=s.get(e);n&&n.slice().map(function(i){i(t)}),(n=s.get("*"))&&n.slice().map(function(i){i(e,t)})}}}class mE{constructor(){Ln(this,"allVertices",{});Ln(this,"isolatedVertices",{});Ln(this,"connectedVertices",{});Ln(this,"sortedConnectedValues",[]);Ln(this,"needsSort",!1);Ln(this,"emitter",$F());Ln(this,"emit",this.emitter.emit.bind(this.emitter));Ln(this,"on",this.emitter.on.bind(this.emitter));Ln(this,"off",this.emitter.off.bind(this.emitter));Ln(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,n){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let i=this.allVertices[e];i?i.value===void 0&&(i.value=t):(i={value:t,previous:new Set,next:new Set},this.allVertices[e]=i);const r=i.next.size>0||i.previous.size>0;if(!(n!=null&&n.after)&&!(n!=null&&n.before)&&!r){this.isolatedVertices[e]=i,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=i;if(n!=null&&n.after){const o=Array.isArray(n.after)?n.after:[n.after];o.forEach(a=>{i.previous.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),u=this.allVertices[l];u?(u.next.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[l]=this.allVertices[l])})}if(n!=null&&n.before){const o=Array.isArray(n.before)?n.before:[n.before];o.forEach(a=>{i.next.add(this.getKey(a))}),o.forEach(a=>{const l=this.getKey(a),u=this.allVertices[l];u?(u.previous.add(e),this.moveToConnected(l)):(this.allVertices[l]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[l]=this.allVertices[l])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const i=this.connectedVertices[t];i&&(i.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),i.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((n,i)=>{t.push(e(n,i))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(n=>{const i=this.isolatedVertices[n];i.value!==void 0&&e(i.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],n=[],i=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(i.forEach(a=>{e.set(a,0)}),i.forEach(a=>{this.connectedVertices[a].next.forEach(u=>{this.connectedVertices[u]&&e.set(u,(e.get(u)||0)+1)})}),e.forEach((a,l)=>{a===0&&t.push(l)});t.length>0;){const a=t.shift();n.push(a);const l=i.find(u=>u===a);l&&((o=this.connectedVertices[l])==null||o.next.forEach(u=>{const c=(e.get(u)||0)-1;e.set(u,c),c===0&&t.push(u)}))}if(n.length!==i.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=n.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class DF{constructor(e,t,n){Ln(this,"key");Ln(this,"stage");Ln(this,"callback");Ln(this,"runTask",!0);this.stage=e,this.key=t,this.callback=n}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class LF extends mE{constructor(t,n,i){super();Ln(this,"key");Ln(this,"scheduler");Ln(this,"callback",(t,n)=>n());Ln(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=n,i&&(this.callback=i.bind(this))}get tasks(){return this.sortedVertices}createTask(t,n,i){const r=new DF(this,t,n);return this.add(t,r,i),r}getTask(t){return this.getValueByKey(t)}run(t){this.callback(t,n=>{this.forEachNode(i=>{i.run(n??t)})})}runWithTiming(t){const n={};return this.callback(t,i=>{this.forEachNode(r=>{const o=performance.now();r.run(i??t);const a=performance.now()-o;n[r.key]=a})}),n}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class OF extends mE{constructor(t){super();Ln(this,"lastTime",performance.now());Ln(this,"clampDeltaTo",.1);Ln(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,n){const i=new LF(this,t,n==null?void 0:n.callback);return this.add(t,i,{after:n==null?void 0:n.after,before:n==null?void 0:n.before}),i}getStage(t){return this.getValueByKey(t)}run(t){const n=t-this.lastTime;this.forEachNode(i=>{i.run(Math.min(n/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const n=t-this.lastTime,i={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),l=o.runWithTiming(Math.min(n/1e3,this.clampDeltaTo)),u=performance.now()-a;i[o.key.toString()]={duration:u,tasks:l}}),{total:performance.now()-r,stages:i}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(n=>{if(n===void 0)throw new Error("Stage not found");return{key:n.key.toString(),tasks:t.tasks?n.getSchedule():void 0}})}}dispose(){this.clear()}}const cr=(s,e)=>{const t=i2(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});Oi(()=>{i(),n&&n()})},Hi=s=>{const e=Kr(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},Cp=new as(75,0,.1,1e3);Cp.position.z=5;Cp.lookAt(0,0,0);const FF=()=>Cp,UF=s=>{cr(s.size,e=>{if(s.camera.current===Cp){const t=s.camera.current;t.aspect=e.width/e.height,t.updateProjectionMatrix(),s.invalidate()}})},gE=Symbol("use-legacy-frame-compatibility-context"),BF=()=>{const s={useFrameOrders:[],useRenderOrders:[]};return pr(gE,s),s},zF=()=>{const s=qr(gE);if(s===void 0)throw new Error("No legacy frame compatibility context found, are you using this hook inside of <Canvas>?");return s},VF=s=>{const e={frameInvalidated:!0,advance:!1,autoInvalidations:new Set,resetFrameInvalidation:()=>{e.frameInvalidated=!1,e.advance=!1},dispose:async(u=!1)=>{await kN(),!(!e.shouldDispose&&!u)&&(e.disposableObjects.forEach((c,h)=>{var d;(c===0||u)&&((d=h==null?void 0:h.dispose)==null||d.call(h),e.disposableObjects.delete(h))}),e.shouldDispose=!1)},collectDisposableObjects:(u,c)=>{const h=c??[];return u&&(u!=null&&u.dispose&&typeof u.dispose=="function"&&u.type!=="Scene"&&h.push(u),Object.entries(u).forEach(([d,f])=>{if(d==="parent"||d==="children"||typeof f!="object")return;const p=f;p!=null&&p.dispose&&e.collectDisposableObjects(p,h)})),h},addDisposableObjects:u=>{u.forEach(c=>{const h=e.disposableObjects.get(c);h?e.disposableObjects.set(c,h+1):e.disposableObjects.set(c,1)})},removeDisposableObjects:u=>{u.length!==0&&(u.forEach(c=>{const h=e.disposableObjects.get(c);h&&h>0&&e.disposableObjects.set(c,h-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},{useRenderOrders:t}=BF(),n=new OF,i=n.createStage(Symbol("threlte-main-stage")),r=n.createStage(Symbol("threlte-render-stage"),{after:i,callback(u,c){a.shouldRender()&&c()}}),o=r.createTask(Symbol("threlte-auto-render-task"),u=>{t.length>0||a.renderer.render(a.scene,a.camera.current)}),a={size:i2([s.userSize,s.parentSize],([u,c])=>u||c),camera:Hi(FF()),scene:new vy,renderer:void 0,invalidate:()=>{e.frameInvalidated=!0},advance:()=>{e.advance=!0},colorSpace:Hi(s.colorSpace),toneMapping:Hi(s.toneMapping),dpr:Hi(s.dpr),useLegacyLights:Hi(s.useLegacyLights),shadows:Hi(s.shadows),colorManagementEnabled:Hi(s.colorManagementEnabled),renderMode:Hi(s.renderMode),autoRender:Hi(s.autoRender),scheduler:n,mainStage:i,renderStage:r,autoRenderTask:o,shouldRender:()=>a.renderMode.current==="always"||a.renderMode.current==="on-demand"&&(e.frameInvalidated||e.autoInvalidations.size>0)||a.renderMode.current==="manual"&&e.advance};UF(a);const l=Hi({});return pr("threlte",a),pr("threlte-internal-context",e),pr("threlte-user-context",l),a},By=typeof window<"u",WF=()=>{const s=Hi({width:0,height:0});if(!By)return{parentSize:s,parentSizeAction:()=>{}};const e={childList:!0,subtree:!1,attributes:!1};let t;const n=a=>{i.disconnect(),r.disconnect(),i.observe(a),r.observe(a,e)},i=new ResizeObserver(([a])=>{const{width:l,height:u}=a.contentRect;l===s.current.width&&u===s.current.height||s.set({width:l,height:u})}),r=new MutationObserver(a=>{for(const l of a)for(const u of l.removedNodes)if(t===u&&t.parentElement){n(t.parentElement);return}}),o=a=>{t=a;const l=t.parentElement;l&&(s.set({width:l.clientWidth,height:l.clientHeight}),n(l))};return Oi(()=>{i.disconnect(),r.disconnect()}),{parentSize:s,parentSizeAction:o}};function xE(s,e){const t=Kr(s);let n=s;const i=t.subscribe(a=>n=a);return Oi(i),{...t,set:a=>{if((a==null?void 0:a.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(a),e==null||e(a,l)},update:a=>{const l=a(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const u=n;t.set(l),e==null||e(l,u)}}}const kh=()=>{const s=qr("threlte");if(s===void 0)throw new Error("No Threlte context found, are you using this hook inside of <Canvas>?");return s},zy=Symbol("threlte-hierarchical-parent-context"),yE=()=>qr(zy),GF=s=>pr(zy,s),HF=s=>{const e=xE(s);return pr(zy,e),e};function XF(s){let e;const t=s[7].default,n=Cu(t,s,s[6],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&64)&&Tu(n,t,i,i[6],e?Au(t,i[6],r,null):Eu(i[6]),null)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}const qF=()=>({onChildMount:qr("threlte-hierarchical-object-on-mount"),onChildDestroy:qr("threlte-hierarchical-object-on-destroy")});function KF(s,e,t){var m;let n,{$$slots:i={},$$scope:r}=e,{object:o=void 0}=e,{onChildMount:a=void 0}=e;const l=g=>{a==null||a(g)};let{onChildDestroy:u=void 0}=e;const c=g=>{u==null||u(g)},{invalidate:h}=kh(),d=yE();Pc(s,d,g=>t(5,n=g));let{parent:f=n}=e;const p=qF();o&&((m=p.onChildMount)==null||m.call(p,o),h());const x=xE(o,(g,y)=>{var v,w;y&&((v=p.onChildDestroy)==null||v.call(p,y),h()),g&&((w=p.onChildMount)==null||w.call(p,g),h())});return Oi(()=>{var g;o&&((g=p.onChildDestroy)==null||g.call(p,o),h())}),pr("threlte-hierarchical-object-on-mount",l),pr("threlte-hierarchical-object-on-destroy",c),GF(x),s.$$set=g=>{"object"in g&&t(2,o=g.object),"onChildMount"in g&&t(3,a=g.onChildMount),"onChildDestroy"in g&&t(4,u=g.onChildDestroy),"parent"in g&&t(1,f=g.parent),"$$scope"in g&&t(6,r=g.$$scope)},s.$$.update=()=>{s.$$.dirty&32&&t(1,f=n),s.$$.dirty&4&&x.set(o)},[d,f,o,a,u,n,r,i]}class jF extends ao{constructor(e){super(),lo(this,e,KF,XF,oo,{object:2,onChildMount:3,onChildDestroy:4,parent:1})}}function YF(s){let e;const t=s[1].default,n=Cu(t,s,s[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&16)&&Tu(n,t,i,i[4],e?Au(t,i[4],r,null):Eu(i[4]),null)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}function ZF(s){let e,t;return e=new jF({props:{object:s[0],onChildMount:s[2],onChildDestroy:s[3],$$slots:{default:[YF]},$$scope:{ctx:s}}}),{c(){Tn(e.$$.fragment)},l(n){En(e.$$.fragment,n)},m(n,i){An(e,n,i),t=!0},p(n,[i]){const r={};i&1&&(r.object=n[0]),i&1&&(r.onChildMount=n[2]),i&1&&(r.onChildDestroy=n[3]),i&16&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ct(e.$$.fragment,n),t=!0)},o(n){Lt(e.$$.fragment,n),t=!1},d(n){In(e,n)}}}function JF(s,e,t){let{$$slots:n={},$$scope:i}=e,{object:r}=e;const o=l=>r.add(l),a=l=>r.remove(l);return s.$$set=l=>{"object"in l&&t(0,r=l.object),"$$scope"in l&&t(4,i=l.$$scope)},[r,n,o,a,i]}class bE extends ao{constructor(e){super(),lo(this,e,JF,ZF,oo,{object:0})}}const QF=()=>{pr("threlte-cache",[])},eU=Sh.replace("dev",""),tU=Number.parseInt(eU),nU=s=>{const e=Kr(void 0),t=(n,i)=>{s.renderer=new by({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(s.renderer)};return cr([s.colorManagementEnabled],([n])=>{Qt.enabled=n}),cr([e,s.colorSpace],([n,i])=>{n&&(n.outputColorSpace=i)}),cr([e,s.dpr],([n,i])=>{n==null||n.setPixelRatio(i)}),cr([e,s.size],([n,i])=>{var r;(r=n==null?void 0:n.xr)!=null&&r.isPresenting||n==null||n.setSize(i.width,i.height)}),cr([e,s.shadows],([n,i])=>{n&&(n.shadowMap.enabled=!!i,i&&i!==!0?n.shadowMap.type=i:i===!0&&(n.shadowMap.type=Kf))}),cr([e,s.toneMapping],([n,i])=>{n&&(n.toneMapping=i)}),cr([e,s.useLegacyLights],([n,i])=>{n&&i&&(n.useLegacyLights=i)}),{createRenderer:t}},vE=()=>qr("threlte-internal-context");function OS(s){let e,t;return e=new bE({props:{object:s[0].scene,$$slots:{default:[sU]},$$scope:{ctx:s}}}),{c(){Tn(e.$$.fragment)},l(n){En(e.$$.fragment,n)},m(n,i){An(e,n,i),t=!0},p(n,i){const r={};i&131072&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ct(e.$$.fragment,n),t=!0)},o(n){Lt(e.$$.fragment,n),t=!1},d(n){In(e,n)}}}function sU(s){let e;const t=s[15].default,n=Cu(t,s,s[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&131072)&&Tu(n,t,i,i[17],e?Au(t,i[17],r,null):Eu(i[17]),null)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}function iU(s){let e,t,n,i,r=s[2]&&OS(s);return{c(){e=vr("canvas"),r&&r.c(),this.h()},l(o){e=wr(o,"CANVAS",{class:!0});var a=Ua(e);r&&r.l(a),a.forEach(qt),this.h()},h(){Yi(e,"class","svelte-o3oskp")},m(o,a){xn(o,e,a),r&&r.m(e,null),s[16](e),t=!0,n||(i=$N(s[4].call(null,e)),n=!0)},p(o,[a]){o[2]?r?(r.p(o,a),a&4&&Ct(r,1)):(r=OS(o),r.c(),Ct(r,1),r.m(e,null)):r&&($c(),Lt(r,1,1,()=>{r=null}),Dc())},i(o){t||(Ct(r),t=!0)},o(o){Lt(r),t=!1},d(o){o&&qt(e),r&&r.d(),s[16](null),n=!1,i()}}}function rU(s,e,t){let n,{$$slots:i={},$$scope:r}=e,{colorManagementEnabled:o=!0}=e,{colorSpace:a="srgb"}=e,{dpr:l=By?window.devicePixelRatio:1}=e,{renderMode:u="on-demand"}=e,{rendererParameters:c=void 0}=e,{shadows:h=Kf}=e,{size:d=void 0}=e,{toneMapping:f=Jx}=e,{useLegacyLights:p=!(tU>=155)}=e,{autoRender:x=!0}=e,m,g=Kr(!1);Pc(s,g,R=>t(2,n=R));const y=Kr(d),{parentSize:v,parentSizeAction:w}=WF(),_=VF({colorManagementEnabled:o,colorSpace:a,dpr:l,renderMode:u,parentSize:v,autoRender:x,shadows:h,toneMapping:f,useLegacyLights:p,userSize:y}),T=vE(),A=_;cr([g,A.autoRender],([R,$])=>(R&&$?A.autoRenderTask.start():A.autoRenderTask.stop(),()=>{A.autoRenderTask.stop()})),QF();const{createRenderer:M}=nU(A);wh(()=>{M(m,c),A.renderer.setAnimationLoop(R=>{T.dispose(),A.scheduler.run(R),T.resetFrameInvalidation()}),g.set(!0)}),Oi(()=>{var R;T.dispose(!0),A.scheduler.dispose(),(R=A.renderer)==null||R.dispose()});function C(R){mg[R?"unshift":"push"](()=>{m=R,t(1,m)})}return s.$$set=R=>{"colorManagementEnabled"in R&&t(5,o=R.colorManagementEnabled),"colorSpace"in R&&t(6,a=R.colorSpace),"dpr"in R&&t(7,l=R.dpr),"renderMode"in R&&t(8,u=R.renderMode),"rendererParameters"in R&&t(9,c=R.rendererParameters),"shadows"in R&&t(10,h=R.shadows),"size"in R&&t(11,d=R.size),"toneMapping"in R&&t(12,f=R.toneMapping),"useLegacyLights"in R&&t(13,p=R.useLegacyLights),"autoRender"in R&&t(14,x=R.autoRender),"$$scope"in R&&t(17,r=R.$$scope)},s.$$.update=()=>{s.$$.dirty&2048&&y.set(d),s.$$.dirty&64&&A.colorSpace.set(a),s.$$.dirty&128&&A.dpr.set(l),s.$$.dirty&256&&A.renderMode.set(u),s.$$.dirty&16384&&A.autoRender.set(x),s.$$.dirty&1024&&A.shadows.set(h),s.$$.dirty&4096&&A.toneMapping.set(f)},[A,m,n,g,w,o,a,l,u,c,h,d,f,p,x,i,C,r]}class oU extends ao{constructor(e){super(),lo(this,e,rU,iU,oo,{colorManagementEnabled:5,colorSpace:6,dpr:7,renderMode:8,rendererParameters:9,shadows:10,size:11,toneMapping:12,useLegacyLights:13,autoRender:14,ctx:0})}get ctx(){return this.$$.ctx[0]}}function aU(s){let e;const t=s[9].default,n=Cu(t,s,s[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&256)&&Tu(n,t,i,i[8],e?Au(t,i[8],r,null):Eu(i[8]),null)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}const FS="threlte-disposable-object-context";function lU(s,e,t){let n,i,{$$slots:r={},$$scope:o}=e;const{collectDisposableObjects:a,addDisposableObjects:l,removeDisposableObjects:u}=vE();let{object:c=void 0}=e,h=c,{dispose:d=void 0}=e;const f=qr(FS);Pc(s,f,m=>t(7,i=m));const p=Kr(d??i??!0);Pc(s,p,m=>t(6,n=m)),pr(FS,p);let x=n?a(c):[];return l(x),Oi(()=>{u(x)}),s.$$set=m=>{"object"in m&&t(2,c=m.object),"dispose"in m&&t(3,d=m.dispose),"$$scope"in m&&t(8,o=m.$$scope)},s.$$.update=()=>{s.$$.dirty&136&&p.set(d??i??!0),s.$$.dirty&116&&c!==h&&(u(x),t(5,x=n?a(c):[]),l(x),t(4,h=c))},[f,p,c,d,h,x,n,i,o,r]}class uU extends ao{constructor(e){super(),lo(this,e,lU,aU,oo,{object:2,dispose:3})}}const cU=/^\s*class\s+/,hU=s=>typeof s!="function"?!1:cU.test(s.toString()),dU=s=>Array.isArray(s),US=(s,e)=>hU(s)?dU(e)?new s(...e):new s:s,fU=s=>"isObject3D"in s,BS=s=>"dispose"in s,wE=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},Wm=Symbol("initialValueBeforeAttach"),pU=()=>{const{invalidate:s}=kh();let e=!1,t=Wm,n,i,r;const o=(l,u,c)=>{if(a(),!c){const h=l;((h==null?void 0:h.isMaterial)||!1)&&(c="material"),((h==null?void 0:h.isBufferGeometry)||(h==null?void 0:h.isGeometry)||!1)&&(c="geometry")}if(c){if(typeof c=="function")n=c(u,l);else{const{target:h,key:d}=wE(u,c);t=h[d],h[d]=l,i=h,r=d}e=!0,s()}},a=()=>{e&&(n?(n(),n=void 0):i&&r&&t!==Wm&&(i[r]=t,t=Wm,i=void 0,r=void 0),e=!1,s())};return Oi(()=>{a()}),{update:o}},mU=s=>s&&s.isCamera,SE=s=>s&&s.isOrthographicCamera,_E=s=>s&&s.isPerspectiveCamera,gU=s=>_E(s)||SE(s),xU=()=>{const{invalidate:s,size:e,camera:t}=kh();let n,i;Oi(()=>{i==null||i()});const r=l=>{n&&(SE(n)?(n.left=l.width/-2,n.right=l.width/2,n.top=l.height/2,n.bottom=l.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()):_E(n)&&(n.aspect=l.width/l.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()))};return{update:(l,u)=>{if(i==null||i(),u||!gU(l)){n=void 0;return}n=l,i=e.subscribe(r)},makeDefaultCamera:(l,u)=>{!mU(l)||!u||(t.set(l),s())}}},CE=()=>{const s=t2(),e=(n,i)=>{const r=s.$$.callbacks[n];r&&r.forEach(o=>{o(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!s.$$.callbacks[n],enumerable:!0}),e},yU=()=>{const s=CE(),e=[];let t,n=!1;const i=()=>{e.forEach(a=>a()),e.length=0,s("create",{ref:t,cleanup:a=>{e.push(a)}})},r=o=>{t=o,n&&i()};return wh(()=>{i(),n=!0}),Oi(()=>{e.forEach(o=>o())}),{updateRef:r}},zS=s=>!!(s!=null&&s.addEventListener),bU=()=>{const s=CE(),e=t2(),t=l=>{l!=null&&l.type&&s(l.type,l)},n=(l,u)=>{zS(l)&&u.forEach(c=>{l.removeEventListener(c,t)})},i=(l,u)=>{zS(l)&&u.forEach(c=>{l.addEventListener(c,t)})},r=Kr(),o=Kr([]);return cr([r,o],([l,u])=>(i(l,u),()=>n(l,u))),wh(()=>{o.set(Object.keys(e.$$.callbacks))}),{updateRef:l=>{r.set(l)}}},vU=s=>{const t=qr("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(u=>u(s)).filter(Boolean),i=n.flatMap(u=>u.pluginProps??[]);let r=[];return Oi(()=>{r.forEach(u=>u())}),{updateRef:u=>{r.forEach(c=>c()),r=[],n.forEach(c=>{var d;const h=(d=c.onRefChange)==null?void 0:d.call(c,u);h&&r.push(h)})},updateProps:u=>{n.forEach(c=>{var h;(h=c.onPropsChange)==null||h.call(c,u)})},updateRestProps:u=>{n.forEach(c=>{var h;(h=c.onRestPropsChange)==null||h.call(c,u)})},pluginsProps:i}},wU=new Set(["$$scope","$$slots","type","args","attach","instance"]),SU=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),_U=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,VS=(s,e,t)=>{var n,i,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((n=s[e])==null?void 0:n.setScalar)=="function"&&!((i=s[e])!=null&&i.isColor)?(o,a,l)=>{o[a].setScalar(l)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,l)=>{o[a].set(...l)}:(o,a,l)=>{o[a].set(l)}:(o,a,l)=>{o[a]=l}},CU=()=>{const{invalidate:s}=kh(),e=new Map,t=new Map,n=(r,o,a,l)=>{if(_U(a)){const h=e.get(o);if(h&&h.instance===r&&h.value===a)return;e.set(o,{instance:r,value:a})}const{key:u,target:c}=wE(r,o);if(a!=null){const h=t.get(o);if(h)h(c,u,a);else{const d=VS(c,u,a);t.set(o,d),d(c,u,a)}}else VS(c,u,a)(c,u,a);l.manualCamera||SU.has(u)&&(c.isPerspectiveCamera||c.isOrthographicCamera)&&c.updateProjectionMatrix()};return{updateProps:(r,o,a)=>{var l;for(const u in o)!wU.has(u)&&!((l=a.pluginsProps)!=null&&l.includes(u))&&n(r,u,o[u],a),s()}}},TU=s=>({ref:s&2}),WS=s=>({ref:s[1]}),EU=s=>({ref:s&2}),GS=s=>({ref:s[1]});function HS(s){let e,t;return e=new uU({props:{object:s[1],dispose:s[0]}}),{c(){Tn(e.$$.fragment)},l(n){En(e.$$.fragment,n)},m(n,i){An(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&1&&(r.dispose=n[0]),e.$set(r)},i(n){t||(Ct(e.$$.fragment,n),t=!0)},o(n){Lt(e.$$.fragment,n),t=!1},d(n){In(e,n)}}}function AU(s){let e;const t=s[10].default,n=Cu(t,s,s[11],WS);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&2050)&&Tu(n,t,i,i[11],e?Au(t,i[11],r,TU):Eu(i[11]),WS)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}function IU(s){let e,t;return e=new bE({props:{object:s[1],$$slots:{default:[RU]},$$scope:{ctx:s}}}),{c(){Tn(e.$$.fragment)},l(n){En(e.$$.fragment,n)},m(n,i){An(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&2050&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ct(e.$$.fragment,n),t=!0)},o(n){Lt(e.$$.fragment,n),t=!1},d(n){In(e,n)}}}function RU(s){let e;const t=s[10].default,n=Cu(t,s,s[11],GS);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&2050)&&Tu(n,t,i,i[11],e?Au(t,i[11],r,EU):Eu(i[11]),GS)},i(i){e||(Ct(n,i),e=!0)},o(i){Lt(n,i),e=!1},d(i){n&&n.d(i)}}}function MU(s){let e=BS(s[1]),t,n,i,r,o,a,l=e&&HS(s);const u=[IU,AU],c=[];function h(d,f){return f&2&&(n=null),n==null&&(n=!!fU(d[1])),n?0:1}return i=h(s,-1),r=c[i]=u[i](s),{c(){l&&l.c(),t=Kn(),r.c(),o=gf()},l(d){l&&l.l(d),t=jn(d),r.l(d),o=gf()},m(d,f){l&&l.m(d,f),xn(d,t,f),c[i].m(d,f),xn(d,o,f),a=!0},p(d,[f]){f&2&&(e=BS(d[1])),e?l?(l.p(d,f),f&2&&Ct(l,1)):(l=HS(d),l.c(),Ct(l,1),l.m(t.parentNode,t)):l&&($c(),Lt(l,1,1,()=>{l=null}),Dc());let p=i;i=h(d,f),i===p?c[i].p(d,f):($c(),Lt(c[p],1,1,()=>{c[p]=null}),Dc(),r=c[i],r?r.p(d,f):(r=c[i]=u[i](d),r.c()),Ct(r,1),r.m(o.parentNode,o))},i(d){a||(Ct(l),Ct(r),a=!0)},o(d){Lt(l),Lt(r),a=!1},d(d){d&&(qt(t),qt(o)),l&&l.d(d),c[i].d(d)}}}function NU(s,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=i1(e,n),r,{$$slots:o={},$$scope:a}=e,{is:l}=e,{args:u=void 0}=e,{attach:c=void 0}=e,{manual:h=void 0}=e,{makeDefault:d=void 0}=e,{dispose:f=void 0}=e;const p=yE();Pc(s,p,$=>t(9,r=$));const x=yU();let m=US(l,u);x.updateRef(m);let g=!1;const y=()=>{if(!g){g=!0;return}t(1,m=US(l,u)),x.updateRef(m)};let{ref:v=m}=e;const w=HF(m),_=vU({ref:m,props:e}),T=(_==null?void 0:_.pluginsProps)??[],A=CU(),M=xU(),C=pU(),R=bU();return s.$$set=$=>{t(23,e=r1(r1({},e),o1($))),t(22,i=i1(e,n)),"is"in $&&t(4,l=$.is),"args"in $&&t(5,u=$.args),"attach"in $&&t(6,c=$.attach),"manual"in $&&t(7,h=$.manual),"makeDefault"in $&&t(8,d=$.makeDefault),"dispose"in $&&t(0,f=$.dispose),"ref"in $&&t(3,v=$.ref),"$$scope"in $&&t(11,a=$.$$scope)},s.$$.update=()=>{s.$$.dirty&48&&y(),s.$$.dirty&2&&t(3,v=m),s.$$.dirty&2&&w.set(m),A.updateProps(m,i,{manualCamera:h,pluginsProps:T}),s.$$.dirty&130&&M.update(m,h),s.$$.dirty&258&&M.makeDefaultCamera(m,d),s.$$.dirty&578&&C.update(m,r,c),s.$$.dirty&2&&R.updateRef(m),s.$$.dirty&2&&(_==null||_.updateRef(m)),_==null||_.updateProps(e),_==null||_.updateRestProps(i)},e=o1(e),[f,m,p,v,l,u,c,h,d,r,o,a]}let TE=class extends ao{constructor(e){super(),lo(this,e,NU,MU,oo,{is:4,args:5,attach:6,manual:7,makeDefault:8,dispose:0,ref:3})}};const PU={},kU=(s,e)=>{const t=PU[e]||kF[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...s,props:{...s.props,is:t}}},$U=s=>new Proxy(class{},{construct(e,[t]){const n=t;return new TE(kU(n,s))}}),Cs=new Proxy(class{},{construct(s,[e]){const t=e;return new TE(t)},get(s,e){return $U(e)}}),Gm=s=>`useFrame-order-${s.toString()}`,DU=(s,e)=>{if(!By)return{start:()=>{},stop:()=>{},started:LN(!1)};const t=Kr(!1),n=kh(),{useFrameOrders:i}=zF(),{autoInvalidations:r}=qr("threlte-internal-context");let o=0;for(;i.includes(o);)o+=.01;i.push(o);const a=Gm(o),l=d=>{s(n,d)},u=n.mainStage.createTask(a,l,{after:i.filter(d=>d<o).map(d=>Gm(d)),before:i.filter(d=>d>o).map(d=>Gm(d))}),c=()=>{t.set(!0),r.add(s),u.start()},h=()=>{t.set(!0),r.delete(s),u.stop()};return c(),Oi(()=>{n.mainStage.removeTask(a),i.splice(i.indexOf(o),1)}),{start:c,stop:h,started:{subscribe:t.subscribe}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU=1e-7,OU=1e-4;class EE{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Vy{refCount(e){return Xs("refCount")}incRef(e){return Xs("incRef")}timerAvailable(){return!0}time(e){return Xs("time")}read(e){return Xs("read")}readSync(e){return Xs("readSync")}readToGPU(e,t){return Xs("readToGPU")}numDataIds(){return Xs("numDataIds")}disposeData(e,t){return Xs("disposeData")}write(e,t,n){return Xs("write")}move(e,t,n,i,r){return Xs("move")}createTensorFromGPUData(e,t,n){return Xs("createTensorFromGPUData")}memory(){return Xs("memory")}floatPrecision(){return Xs("floatPrecision")}epsilon(){return this.floatPrecision()===32?LU:OU}dispose(){return Xs("dispose")}}function Xs(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _f(s,e,t){return Math.max(s,Math.min(e,t))}function Wy(s){return s%2===0?s:s+1}function hc(s,e,t){const n=s[e];s[e]=s[t],s[t]=n}function AE(s){let e=0;for(let t=0;t<s.length;t++)e+=s[t];return e}function D(s,e){if(!s)throw new Error(typeof e=="string"?e:e())}function ai(s,e,t=""){D(en(s,e),()=>t+` Shapes ${s} and ${e} must match`)}function ku(s){D(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ae(s){if(s.length===0)return 1;let e=s[0];for(let t=1;t<s.length;t++)e*=s[t];return e}function XS(s){return s.length===0}function FU(s,e){if(s===e)return!0;if(s==null||e==null||s.length!==e.length)return!1;for(let t=0;t<s.length;t++)if(s[t]!==null&&e[t]!==null&&s[t]!==e[t])return!1;return!0}function en(s,e){if(s===e)return!0;if(s==null||e==null||s.length!==e.length)return!1;for(let t=0;t<s.length;t++)if(s[t]!==e[t])return!1;return!0}function fu(s){return s%1===0}function ox(s){const e=Math.ceil(Math.sqrt(s));return[e,Math.ceil(s/e)]}function iu(s,e){return e<=s.length?s:s+" ".repeat(e-s.length)}function qS(s,e=i=>0,t,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=e(o);if(t!=null&&o>=t){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function IE(s,e){let t=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)t*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${s}`);return s}if(t===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const i=s.slice();return i[n]=e/t,i}function wn(s,e){const t=e.length;return s=s==null?e.map((n,i)=>i):[].concat(s),D(s.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${s}`),D(s.every(n=>fu(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?t+n:n)}function jo(s,e){const t=[],n=[],i=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||i?null:wn(e,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(t.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(t.push(s[a]),n.push(a))}return{newShape:t,keptDims:n}}function Cr(s,e){return Yn(s,e)}function Yn(s,e){let t=null;if(s==null||s==="float32")t=new Float32Array(e);else if(s==="int32")t=new Int32Array(e);else if(s==="bool")t=new Uint8Array(e);else if(s==="string")t=new Array(e);else throw new Error(`Unknown data type ${s}`);return t}function UU(s,e){for(let t=0;t<s.length;t++){const n=s[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function BU(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function RE(s,e){return!(e==="complex64"||e==="float32"&&s!=="complex64"||e==="int32"&&s!=="float32"&&s!=="complex64"||e==="bool"&&s==="bool")}function Cf(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function zU(s){if(s==null)return 0;let e=0;return s.forEach(t=>e+=t.length),e}function $h(s){return typeof s=="string"||s instanceof String}function VU(s){return typeof s=="boolean"}function WU(s){return typeof s=="number"}function $u(s){return Array.isArray(s)?$u(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":WU(s)?"float32":$h(s)?"string":VU(s)?"bool":"float32"}function ax(s){return!!(s&&s.constructor&&s.call&&s.apply)}function lx(s,e){for(let t=e;t<s;++t)if(s%t===0)return t;return s}function kn(s){const e=s.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=s[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*s[n+1];return t}function ME(s,e,t,n=!1){const i=new Array;if(e.length===1){const r=e[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=t[s+o]}else{const r=e[0],o=e.slice(1),a=o.reduce((l,u)=>l*u)*(n?2:1);for(let l=0;l<r;l++)i[l]=ME(s+l*a,o,t,n)}return i}function ux(s,e,t=!1){if(s.length===0)return e[0];const n=s.reduce((i,r)=>i*r)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${s}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return ME(0,s,e,t)}function Hm(s,e){if(Array.isArray(s))return s;if(e==="float32")return s instanceof Float32Array?s:new Float32Array(s);if(e==="int32")return s instanceof Int32Array?s:new Int32Array(s);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(s));throw new Error(`Unknown dtype ${e}`)}function NE(s,e){const t=Jr(s,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Jr(s,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(s);if(e==="int32")return new Int32Array(s);if(e==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${e}`)}function bi(s){s.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function cx(s,e,t){if(e===0)return 0;if(e===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=t[i]*s[i];return n}function Gy(s,e,t){if(e===0)return[];if(e===1)return[s];const n=new Array(e);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/t[i]),s-=n[i]*t[i];return n[n.length-1]=s,n}function Ga(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS="tfjsflags";class GU{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=HU,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){const i=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${i}.`),this.set(e,i)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ga(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);KS in e&&e[KS].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=qU(i,r)})}}function HU(s){const e={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(XU(e,n[0],n[1]),n.join("="))),e}function XU(s,e,t){s[decodeURIComponent(e)]=decodeURIComponent(t||"")}function qU(s,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function J(){return PE}let PE=null;function KU(s){PE=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xm;function kE(){if(Xm==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");Xm=s}return Xm}function jU(){const s=kE();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function Hy(s,e){const t=jU();if(t.has(s))return t.get(s);{const n=e();return t.set(s,n),t.get(s)}}const Xy="Abs",qy="Acos",Ky="Acosh",Tp="Add",jy="AddN",Yy="All",Zy="Any",Jy="ArgMax",Qy="ArgMin",e0="Asin",t0="Asinh",n0="Atan",s0="Atanh",i0="Atan2",r0="AvgPool",$E="AvgPoolGrad",o0="AvgPool3D",DE="AvgPool3DGrad",a0="BatchMatMul",l0="BatchToSpaceND",u0="Bincount",LE="BitwiseAnd",c0="BroadcastArgs",Ep="Cast",h0="Ceil",d0="ClipByValue",f0="Complex",p0="ComplexAbs",m0="Concat",g0="Conv2D",x0="Conv2DBackpropFilter",y0="Conv2DBackpropInput",b0="Conv3D",OE="Conv3DBackpropFilterV2",v0="Conv3DBackpropInputV2",w0="Cos",S0="Cosh",_0="Cumprod",C0="Cumsum",T0="CropAndResize",E0="DenseBincount",A0="DepthToSpace",I0="DepthwiseConv2dNative",R0="DepthwiseConv2dNativeBackpropFilter",M0="DepthwiseConv2dNativeBackpropInput",N0="Diag",P0="Dilation2D",YU="Dilation2DBackpropInput",ZU="Dilation2DBackpropFilter",FE="Draw",k0="RealDiv",$0="Einsum",D0="Elu",UE="EluGrad",L0="Erf",O0="Equal",F0="Exp",U0="ExpandDims",B0="Expm1",z0="FFT",V0="Fill",W0="FlipLeftRight",G0="Floor",H0="FloorDiv",X0="FusedBatchNorm",q0="GatherV2",K0="GatherNd",j0="Greater",Y0="GreaterEqual",Ap="Identity",Z0="IFFT",J0="Imag",Q0="IsFinite",eb="IsInf",tb="IsNan",nb="LeakyRelu",sb="Less",ib="LessEqual",rb="LinSpace",ob="Log",ab="Log1p",lb="LogicalAnd",ub="LogicalNot",cb="LogicalOr",hb="LRN",BE="LRNGrad",db="Max",fb="Maximum",pb="MaxPool",zE="MaxPoolGrad",mb="MaxPool3D",VE="MaxPool3DGrad",gb="MaxPoolWithArgmax",xb="Mean",yb="Min",bb="Minimum",vb="MirrorPad",wb="Mod",Sb="Multinomial",_b="Multiply",Cb="Neg",Tb="NotEqual",Eb="NonMaxSuppressionV3",WE="NonMaxSuppressionV4",Ab="NonMaxSuppressionV5",Ib="OnesLike",Rb="OneHot",Mb="Pack",Nb="PadV2",Pb="Pow",kb="Prelu",$b="Prod",GE="RaggedGather",HE="RaggedRange",XE="RaggedTensorToTensor",Db="Range",Lb="Real",Ob="Reciprocal",Fb="Relu",Ub="Reshape",Bb="ResizeNearestNeighbor",qE="ResizeNearestNeighborGrad",zb="ResizeBilinear",KE="ResizeBilinearGrad",Vb="Relu6",Wb="Reverse",Gb="Round",Hb="Rsqrt",Xb="ScatterNd",qb="TensorScatterUpdate",Kb="SearchSorted",jb="Select",Yb="Selu",Zb="Slice",Jb="Sin",Qb="Sinh",ev="Sign",tv="Sigmoid",nv="Softplus",sv="Sqrt",iv="Sum",rv="SpaceToBatchND",ov="SplitV",av="Softmax",jE="SparseFillEmptyRows",YE="SparseReshape",lv="SparseSegmentMean",uv="SparseSegmentSum",cv="SparseToDense",hv="SquaredDifference",ZE="Square",JE="StaticRegexReplace",dv="StridedSlice",fv="StringNGrams",QE="StringSplit",eA="StringToHashBucketFast",pv="Sub",mv="Tan",gv="Tanh",Ip="Tile",xv="TopK",yv="Transform",Ac="Transpose",tA="Unique",bv="Unpack",vv="UnsortedSegmentSum",wv="ZerosLike",Sv="Step",Tf="FromPixels",_v="RotateWithOffset",Ef="_FusedMatMul",Af="FusedConv2D",If="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(...s){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...s)}function JU(...s){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rf=Hy("kernelRegistry",()=>new Map),QU=Hy("gradRegistry",()=>new Map);function Mf(s,e){const t=sA(s,e);return Rf.get(t)}function jS(s){return QU.get(s)}function YS(s){const e=Rf.entries(),t=[];for(;;){const{done:n,value:i}=e.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&t.push(o)}return t}function nA(s){const{kernelName:e,backendName:t}=s,n=sA(e,t);Rf.has(n)&&Zi(`The kernel '${e}' for backend '${t}' is already registered`),Rf.set(n,s)}function sA(s,e){return`${e}_${s}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}var gr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function eB(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}function tB(s){if(s.__esModule)return s;var e=s.default;if(typeof e=="function"){var t=function n(){return this instanceof n?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),t}var rA=bn,Ri=null;try{Ri=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function bn(s,e,t){this.low=s|0,this.high=e|0,this.unsigned=!!t}bn.prototype.__isLong__;Object.defineProperty(bn.prototype,"__isLong__",{value:!0});function li(s){return(s&&s.__isLong__)===!0}bn.isLong=li;var ZS={},JS={};function nl(s,e){var t,n,i;return e?(s>>>=0,(i=0<=s&&s<256)&&(n=JS[s],n)?n:(t=vn(s,(s|0)<0?-1:0,!0),i&&(JS[s]=t),t)):(s|=0,(i=-128<=s&&s<128)&&(n=ZS[s],n)?n:(t=vn(s,s<0?-1:0,!1),i&&(ZS[s]=t),t))}bn.fromInt=nl;function Mi(s,e){if(isNaN(s))return e?Ia:Ni;if(e){if(s<0)return Ia;if(s>=oA)return uA}else{if(s<=-9223372036854776e3)return ni;if(s+1>=sB)return lA}return s<0?Mi(-s,e).neg():vn(s%pu|0,s/pu|0,e)}bn.fromNumber=Mi;function vn(s,e,t){return new bn(s,e,t)}bn.fromBits=vn;var Nf=Math.pow;function Cv(s,e,t){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return Ni;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return Cv(s.substring(1),e,t).neg();for(var i=Mi(Nf(t,8)),r=Ni,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),t);if(a<8){var u=Mi(Nf(t,a));r=r.mul(u).add(Mi(l))}else r=r.mul(i),r=r.add(Mi(l))}return r.unsigned=e,r}bn.fromString=Cv;function ir(s,e){return typeof s=="number"?Mi(s,e):typeof s=="string"?Cv(s,e):vn(s.low,s.high,typeof e=="boolean"?e:s.unsigned)}bn.fromValue=ir;var QS=65536,nB=1<<24,pu=QS*QS,oA=pu*pu,sB=oA/2,e_=nl(nB),Ni=nl(0);bn.ZERO=Ni;var Ia=nl(0,!0);bn.UZERO=Ia;var nu=nl(1);bn.ONE=nu;var aA=nl(1,!0);bn.UONE=aA;var hx=nl(-1);bn.NEG_ONE=hx;var lA=vn(-1,2147483647,!1);bn.MAX_VALUE=lA;var uA=vn(-1,-1,!0);bn.MAX_UNSIGNED_VALUE=uA;var ni=vn(0,-2147483648,!1);bn.MIN_VALUE=ni;var $e=bn.prototype;$e.toInt=function(){return this.unsigned?this.low>>>0:this.low};$e.toNumber=function(){return this.unsigned?(this.high>>>0)*pu+(this.low>>>0):this.high*pu+(this.low>>>0)};$e.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(ni)){var t=Mi(e),n=this.div(t),i=n.mul(t).sub(this);return n.toString(e)+i.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=Mi(Nf(e,6),this.unsigned),o=this,a="";;){var l=o.div(r),u=o.sub(l.mul(r)).toInt()>>>0,c=u.toString(e);if(o=l,o.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};$e.getHighBits=function(){return this.high};$e.getHighBitsUnsigned=function(){return this.high>>>0};$e.getLowBits=function(){return this.low};$e.getLowBitsUnsigned=function(){return this.low>>>0};$e.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ni)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};$e.isZero=function(){return this.high===0&&this.low===0};$e.eqz=$e.isZero;$e.isNegative=function(){return!this.unsigned&&this.high<0};$e.isPositive=function(){return this.unsigned||this.high>=0};$e.isOdd=function(){return(this.low&1)===1};$e.isEven=function(){return(this.low&1)===0};$e.equals=function(e){return li(e)||(e=ir(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};$e.eq=$e.equals;$e.notEquals=function(e){return!this.eq(e)};$e.neq=$e.notEquals;$e.ne=$e.notEquals;$e.lessThan=function(e){return this.comp(e)<0};$e.lt=$e.lessThan;$e.lessThanOrEqual=function(e){return this.comp(e)<=0};$e.lte=$e.lessThanOrEqual;$e.le=$e.lessThanOrEqual;$e.greaterThan=function(e){return this.comp(e)>0};$e.gt=$e.greaterThan;$e.greaterThanOrEqual=function(e){return this.comp(e)>=0};$e.gte=$e.greaterThanOrEqual;$e.ge=$e.greaterThanOrEqual;$e.compare=function(e){if(li(e)||(e=ir(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};$e.comp=$e.compare;$e.negate=function(){return!this.unsigned&&this.eq(ni)?ni:this.not().add(nu)};$e.neg=$e.negate;$e.add=function(e){li(e)||(e=ir(e));var t=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=e.high>>>16,a=e.high&65535,l=e.low>>>16,u=e.low&65535,c=0,h=0,d=0,f=0;return f+=r+u,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,c+=h>>>16,h&=65535,c+=t+o,c&=65535,vn(d<<16|f,c<<16|h,this.unsigned)};$e.subtract=function(e){return li(e)||(e=ir(e)),this.add(e.neg())};$e.sub=$e.subtract;$e.multiply=function(e){if(this.isZero())return Ni;if(li(e)||(e=ir(e)),Ri){var t=Ri.mul(this.low,this.high,e.low,e.high);return vn(t,Ri.get_high(),this.unsigned)}if(e.isZero())return Ni;if(this.eq(ni))return e.isOdd()?ni:Ni;if(e.eq(ni))return this.isOdd()?ni:Ni;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(e_)&&e.lt(e_))return Mi(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,l=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,f=0,p=0;return p+=o*c,f+=p>>>16,p&=65535,f+=r*c,d+=f>>>16,f&=65535,f+=o*u,d+=f>>>16,f&=65535,d+=i*c,h+=d>>>16,d&=65535,d+=r*u,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*c+i*u+r*l+o*a,h&=65535,vn(f<<16|p,h<<16|d,this.unsigned)};$e.mul=$e.multiply;$e.divide=function(e){if(li(e)||(e=ir(e)),e.isZero())throw Error("division by zero");if(Ri){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Ri.div_u:Ri.div_s)(this.low,this.high,e.low,e.high);return vn(t,Ri.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ia:Ni;var n,i,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Ia;if(e.gt(this.shru(1)))return aA;r=Ia}else{if(this.eq(ni)){if(e.eq(nu)||e.eq(hx))return ni;if(e.eq(ni))return nu;var o=this.shr(1);return n=o.div(e).shl(1),n.eq(Ni)?e.isNegative()?nu:hx:(i=this.sub(e.mul(n)),r=n.add(i.div(e)),r)}else if(e.eq(ni))return this.unsigned?Ia:Ni;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=Ni}for(i=this;i.gte(e);){n=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:Nf(2,a-48),u=Mi(n),c=u.mul(e);c.isNegative()||c.gt(i);)n-=l,u=Mi(n,this.unsigned),c=u.mul(e);u.isZero()&&(u=nu),r=r.add(u),i=i.sub(c)}return r};$e.div=$e.divide;$e.modulo=function(e){if(li(e)||(e=ir(e)),Ri){var t=(this.unsigned?Ri.rem_u:Ri.rem_s)(this.low,this.high,e.low,e.high);return vn(t,Ri.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};$e.mod=$e.modulo;$e.rem=$e.modulo;$e.not=function(){return vn(~this.low,~this.high,this.unsigned)};$e.and=function(e){return li(e)||(e=ir(e)),vn(this.low&e.low,this.high&e.high,this.unsigned)};$e.or=function(e){return li(e)||(e=ir(e)),vn(this.low|e.low,this.high|e.high,this.unsigned)};$e.xor=function(e){return li(e)||(e=ir(e)),vn(this.low^e.low,this.high^e.high,this.unsigned)};$e.shiftLeft=function(e){return li(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?vn(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):vn(0,this.low<<e-32,this.unsigned)};$e.shl=$e.shiftLeft;$e.shiftRight=function(e){return li(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?vn(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):vn(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};$e.shr=$e.shiftRight;$e.shiftRightUnsigned=function(e){if(li(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return vn(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?vn(t,0,this.unsigned):vn(t>>>e-32,0,this.unsigned)};$e.shru=$e.shiftRightUnsigned;$e.shr_u=$e.shiftRightUnsigned;$e.toSigned=function(){return this.unsigned?vn(this.low,this.high,!1):this};$e.toUnsigned=function(){return this.unsigned?this:vn(this.low,this.high,!0)};$e.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};$e.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};$e.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};bn.fromBytes=function(e,t,n){return n?bn.fromBytesLE(e,t):bn.fromBytesBE(e,t)};bn.fromBytesLE=function(e,t){return new bn(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};bn.fromBytesBE=function(e,t){return new bn(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const cA=eB(rA),iB=ON({__proto__:null,default:cA},[rA]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba=cA||iB;function Rp(s){return ba.fromString(s,!0,16)}const hA=Rp("c3a5c85c97cb3127"),ga=Rp("b492b66fbe98f273"),Ts=Rp("9ae16a3b2f90404f");function dx(s){return s.xor(s.shru(47))}function dA(s,e,t){const n=s.slice(e,e+t);return ba.fromBytes(Array.from(n),!0,!0)}function fn(s,e){return dA(s,e,8)}function t_(s,e){return dA(s,e,4)}function Qn(s,e){return e===0?s:s.shru(e).or(s.shl(64-e))}function $o(s,e,t=Rp("9ddfea08eb382d69")){let n=s.xor(e).mul(t);n=n.xor(n.shru(47));let i=e.xor(n).mul(t);return i=i.xor(i.shru(47)),i=i.mul(t),i}function rB(s,e,t,n,i,r){i=i.add(s),r=Qn(r.add(i).add(n),21);const o=i;return i=i.add(e),i=i.add(t),r=r.add(Qn(i,44)),[i.add(n),r.add(o)]}function Xd(s,e,t,n){return rB(fn(s,e),fn(s,e+8),fn(s,e+16),fn(s,e+24),t,n)}function oB(s,e=s.length){if(e>=8){const t=Ts.add(e*2),n=fn(s,0).add(Ts),i=fn(s,e-8),r=Qn(i,37).mul(t).add(n),o=Qn(n,25).add(i).mul(t);return $o(r,o,t)}if(e>=4){const t=Ts.add(e*2),n=t_(s,0);return $o(n.shl(3).add(e),t_(s,e-4),t)}if(e>0){const t=s[0],n=s[e>>1],i=s[e-1],r=t+(n<<8),o=e+(i<<2);return dx(Ts.mul(r).xor(hA.mul(o))).mul(Ts)}return Ts}function aB(s,e=s.length){const t=Ts.add(e*2),n=fn(s,0).mul(ga),i=fn(s,8),r=fn(s,e-8).mul(t),o=fn(s,e-16).mul(Ts);return $o(Qn(n.add(i),43).add(Qn(r,30)).add(o),n.add(Qn(i.add(Ts),18)).add(r),t)}function lB(s,e=s.length){const t=Ts.add(e*2),n=fn(s,0).mul(Ts),i=fn(s,8),r=fn(s,e-8).mul(t),o=fn(s,e-16).mul(Ts),a=Qn(n.add(i),43).add(Qn(r,30)).add(o),l=$o(a,n.add(Qn(i.add(Ts),18)).add(r),t),u=fn(s,16).mul(t),c=fn(s,24),h=a.add(fn(s,e-32)).mul(t),d=l.add(fn(s,e-24)).mul(t);return $o(Qn(u.add(c),43).add(Qn(h,30)).add(d),u.add(Qn(c.add(n),18)).add(h),t)}function uB(s,e=s.length){const t=ba.fromNumber(81,!0);if(e<=32)return e<=16?oB(s,e):aB(s,e);if(e<=64)return lB(s,e);let n=t,i=t.mul(ga).add(113),r=dx(i.mul(Ts).add(113)).mul(Ts),o=[ba.UZERO,ba.UZERO],a=[ba.UZERO,ba.UZERO];n=n.mul(Ts).add(fn(s,0));let l=0;const u=(e-1>>6)*64,c=u+(e-1&63)-63;do n=Qn(n.add(i).add(o[0]).add(fn(s,l+8)),37).mul(ga),i=Qn(i.add(o[1]).add(fn(s,l+48)),42).mul(ga),n=n.xor(a[1]),i=i.add(o[0]).add(fn(s,l+40)),r=Qn(r.add(a[0]),33).mul(ga),o=Xd(s,l,o[1].mul(ga),n.add(a[0])),a=Xd(s,l+32,r.add(a[1]),i.add(fn(s,l+16))),[r,n]=[n,r],l+=64;while(l!==u);const h=ga.add(r.and(255).shl(1));return l=c,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Qn(n.add(i).add(o[0]).add(fn(s,l+8)),37).mul(h),i=Qn(i.add(o[1]).add(fn(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(fn(s,l+40))),r=Qn(r.add(a[0]),33).mul(h),o=Xd(s,l,o[1].mul(h),n.add(a[0])),a=Xd(s,l+32,r.add(a[1]),i.add(fn(s,l+16))),[r,n]=[n,r],$o($o(o[0],a[0],h).add(dx(i).mul(hA)).add(r),$o(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Du(s,e){return e==="string"?Do(s):Mp([s],e)}function cB(s,e){return s instanceof Float32Array&&e==="float32"||s instanceof Int32Array&&e==="int32"||s instanceof Uint8Array&&e==="bool"}function Mp(s,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=eo(s)),J().getBool("DEBUG")&&UU(s,e),cB(s,e))return s;if(e==null||e==="float32"||e==="complex64")return new Float32Array(s);if(e==="int32")return new Int32Array(s);if(e==="bool"){const t=new Uint8Array(s.length);for(let n=0;n<t.length;++n)Math.round(s[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Xi(){return J().platform.now()}function Do(s,e="utf-8"){return e=e||"utf-8",J().platform.encode(s,e)}function Qr(s,e="utf-8"){return e=e||"utf-8",J().platform.decode(s,e)}function Di(s){return J().platform.isTypedArray!=null?J().platform.isTypedArray(s):iA(s)}function eo(s,e=[],t=!1){if(e==null&&(e=[]),typeof s=="boolean"||typeof s=="number"||typeof s=="string"||Ga(s)||s==null||Di(s)&&t)e.push(s);else if(Array.isArray(s)||Di(s))for(let n=0;n<s.length;++n)eo(s[n],e,t);else{let n=-1;for(const i of Object.keys(s))/^([1-9]+[0-9]*|0)$/.test(i)&&(n=Math.max(n,Number(i)));for(let i=0;i<=n;i++)eo(s[i],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hB{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new fB)}profileKernel(e,t,n){let i;const r=()=>{i=n()};let o;const a=Xi();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const u of i)u.dataSync();o=Promise.resolve({kernelMs:Xi()-a})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<i.length;u++){const c=i[u];c.data().then(h=>{dB(h,c.dtype,e)})}return{kernelName:e,outputs:i,inputs:t,timeMs:o.then(u=>u.kernelMs),extraInfo:o.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:i,inputs:r,extraInfo:o}=e;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],r,l[2])})})}}function dB(s,e,t){if(e!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${t}'`),!0}return!1}class fB{logKernelProfile(e,t,n,i,r,o){const a=typeof i=="number"?iu(`${i}ms`,9):i.error,l=iu(e,25),u=t.rank,c=t.size,h=iu(t.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const x=p.shape||t.shape,m=x.length;d+=`${f}: ${m}D ${m>0?x:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${h}	%c${c}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(s,e,t){const n={},i={};for(let l=0;l<e.length;l++)n[e[l].id]=!0;for(let l=0;l<s.length;l++){const u=s[l],c=u.inputs;for(const h in c){const d=c[h];let f=!1;for(let p=0;p<e.length;p++)if(n[d.id]){u.outputs.forEach(x=>n[x.id]=!0),f=!0,i[u.id]=!0;break}if(f)break}}const r={};r[t.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const u=s[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(r[u.outputs[h].id]){for(const d in c)r[c[d].id]=!0,o[u.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const u=s[l];if(i[u.id]&&o[u.id]){const c={};for(const d in u.inputs){const f=u.inputs[d];n[f.id]&&(c[d]=f)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,a.push(h)}}return a}function mB(s,e,t,n){for(let i=e.length-1;i>=0;i--){const r=e[i],o=[];if(r.outputs.forEach(l=>{const u=s[l.id];u!=null?o.push(u):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const u=t(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=r.inputs[l];if(!en(u.shape,c.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(s[c.id]==null)s[c.id]=u;else{const h=s[c.id];s[c.id]=n(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_=20,dc=3,qm=7;function gB(s,e,t,n){const i=kn(e),r=xB(s,e,t,i),o=e.length,a=hf(s,e,t,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function xB(s,e,t,n){const i=ae(e),r=n[n.length-1],o=new Array(r).fill(0),a=e.length,l=t==="complex64"?yc(s):s;if(a>1)for(let u=0;u<i/r;u++){const c=u*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],xc(l[c+h],0,t).length)}return o}function xc(s,e,t){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(qm))} + ${parseFloat(s[1].toFixed(qm))}j`:$h(s)?n=`'${s}'`:t==="bool"?n=fA(s):n=parseFloat(s.toFixed(qm)).toString(),iu(n,e)}function fA(s){return s===0?"false":"true"}function hf(s,e,t,n,i,r=!0){const o=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const x=yc(s);return[xc(x[0],0,t)]}return t==="bool"?[fA(s[0])]:[s[0].toString()]}if(l===1){if(a>n_){const m=dc*o;let g=Array.from(s.slice(0,m)),y=Array.from(s.slice((a-dc)*o,a*o));return t==="complex64"&&(g=yc(g),y=yc(y)),["["+g.map((v,w)=>xc(v,i[w],t)).join(", ")+", ..., "+y.map((v,w)=>xc(v,i[a-dc+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?yc(s):Array.from(s)).map((m,g)=>xc(m,i[g],t)).join(", ")+"]"]}const u=e.slice(1),c=n.slice(1),h=n[0]*o,d=[];if(a>n_){for(let x=0;x<dc;x++){const m=x*h,g=m+h;d.push(...hf(s.slice(m,g),u,t,c,i,!1))}d.push("...");for(let x=a-dc;x<a;x++){const m=x*h,g=m+h;d.push(...hf(s.slice(m,g),u,t,c,i,x===a-1))}}else for(let x=0;x<a;x++){const m=x*h,g=m+h;d.push(...hf(s.slice(m,g),u,t,c,i,x===a-1))}const f=l===2?",":"";d[0]="["+(a>0?d[0]+f:"");for(let x=1;x<d.length-1;x++)d[x]=" "+d[x]+f;let p=`,
`;for(let x=2;x<l;x++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function yc(s){const e=[];for(let t=0;t<s.length;t+=2)e.push([s[t],s[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mu{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ae(e),n!=null){const i=n.length;D(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Yn(t,this.size),this.strides=kn(e)}set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const i of e){if(i<0||i>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let i=0;i<e.length-1;++i)n+=this.strides[i]*e[i];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ki().makeTensor(this.values,this.shape,this.dtype)}}let Ki=null,ql=null;function yB(s){Ki=s}function bB(s){ql=s}class Nn{constructor(e,t,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ae(e),this.strides=kn(e),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ql.buffer(this.shape,this.dtype,e)}bufferSync(){return ql.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ux(this.shape,e,this.dtype==="complex64")}arraySync(){return ux(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Ki().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(n=>Qr(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ki().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ki().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Qr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ki().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ki().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ql.print(this,e)}clone(){return this.throwIfDisposed(),ql.clone(this)}toString(e=!1){const t=this.dataSync();return gB(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ql.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ki().makeVariable(this,e,t,n)}}Object.defineProperty(Nn,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function pA(){return Hy("Tensor",()=>Nn)}pA();class Pf extends Nn{constructor(e,t,n,i){super(e.shape,e.dtype,e.dataId,i),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!en(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ki().disposeTensor(this),this.dataId=e.dataId,Ki().incRef(this,null)}dispose(){Ki().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Pf,Symbol.hasInstance,{value:s=>s instanceof Nn&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var s_;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(s_||(s_={}));var fx;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(fx||(fx={}));var px;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(px||(px={}));var mx;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(mx||(mx={}));var gx;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(gx||(gx={}));const vB={float32:mx,int32:fx,bool:px,complex64:gx};function zs(s,e){if(s==="string"||e==="string"){if(s==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${s} with ${e}`)}return vB[s][e]}function Np(s){return zs(s,"int32")}function mA(s){return s!=null&&typeof s=="object"&&"texture"in s&&s.texture instanceof WebGLTexture}function gA(s){return typeof GPUBuffer<"u"&&s!=null&&typeof s=="object"&&"buffer"in s&&s.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(s,e){if(s.dtype===e.dtype)return[s,e];const t=zs(s.dtype,e.dtype);return[s.cast(t),e.cast(t)]}function wB(s,e){D(s.dtype===e.dtype,()=>`The dtypes of the first(${s.dtype}) and second(${e.dtype}) input must match`)}function xA(s){const e=[];return yA(s,e,new Set),e}function yA(s,e,t){if(s==null)return;if(s instanceof Nn){e.push(s);return}if(!SB(s))return;const n=s;for(const i in n){const r=n[i];t.has(r)||(t.add(r),yA(r,e,t))}}function SB(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(s){return s.kernelName!=null}class i_{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class gu{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new i_}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Zi(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new hB(this.backendInstance),!0}setupRegisteredKernels(){YS(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){YS(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(n&&!(n instanceof Vy)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Zi(`Initialization of backend ${e} failed`),Zi(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Zi(`Initialization of backend ${e} failed`),Zi(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),i=n.backend,r=this.readSync(t),o=i.refCount(t);i.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=t(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(e,t,n){e();try{const i=n();return t(),i}catch(i){throw t(),i}}nextTensorId(){return gu.nextTensorId++}nextVariableId(){return gu.nextVariableId++}clone(e){const t=K.runKernel(Ap,{x:e}),n={x:e},i=o=>({x:()=>{const a="float32",l={x:o},u={dtype:a};return K.runKernel(Ep,l,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],i,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Mf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-t-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const u=Km(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Km(e)){const{kernelName:p,inputs:x,attrs:m}=e;this.backendName==null&&this.backend;const g=Mf(p,this.backendName);D(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const y=this.backend.numDataIds();l=g.kernelFunc({inputs:x,attrs:m,backend:this.backend});const v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,y,v);const w=v.map(_=>_.rank!=null?_:this.makeTensorFromTensorInfo(_));if(i){const _=this.getTensorsForGradient(p,x,w);n=this.saveTensorsForBackwardMode(_)}return w}}else{const{forwardFunc:p}=e,x=m=>{i&&(n=m.map(g=>this.keep(this.clone(g))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,x));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}const{inputs:c,attrs:h}=e,d=Km(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(f=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),i&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(p=>c[p]!=null?c[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){const i=jS(e);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(D(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(u=>t[u])):a=r.map(u=>t[u]);const l=n.filter((u,c)=>o[c]);return a.concat(l)}return[]}makeTensor(e,t,n,i){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=e;n==="string"&&$h(e[0])&&(r=e.map(l=>Do(l)));const o=i.write(r,t,n),a=new Nn(t,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),u=zU(r);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(e,t,n,i){n=n||"float32";const r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:i,dtype:r}=e,o=new Nn(i,r,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==e.dtype&&(e=e.cast(i));const r=new Pf(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*Cf(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Pf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const n=e.size*Cf(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},l=jS(e);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=u=>(u=u.map((c,h)=>{if(c==null){const d=n[h],f=Jr(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return c}),i(u.length>1?u:u[0],r,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=xA(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(e,t,n,i=!1){if(D(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(r instanceof Nn,()=>"The result y returned by f() must be a tensor.");const o=pB(this.state.activeTape,t,r);if(!i&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n??_B(r.shape),mB(a,o,u=>this.tidy(u),CB);const l=t.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const c of u.saved)c.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return D(ax(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{D(t.every(a=>a instanceof Nn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};t.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=e(...t,l),D(n.value instanceof Nn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(ax(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const u=n.gradFunc(a,l),c=Array.isArray(u)?u:[u];D(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(c.every(d=>d instanceof Nn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Xi(),n=await this.backend.time(e);return n.wallMs=Xi()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new i_;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}gu.nextTensorId=0;gu.nextVariableId=0;function _B(s){const e=NE(ae(s),"float32");return K.makeTensor(e,s,"float32")}function bA(){const s=kE();if(s._tfengine==null){const e=new GU(s);s._tfengine=new gu(e)}return KU(s._tfengine.ENV),yB(()=>s._tfengine),s._tfengine}const K=bA();function CB(s,e){const t={a:s,b:e};return K.runKernel(Tp,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(){return typeof navigator<"u"&&navigator!=null}function vA(s){if(s||TB()){if(s||(s=navigator),s.product==="ReactNative")return!0;const e=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=s;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function wA(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs=J();Vs.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Vs.registerFlag("IS_BROWSER",()=>wA());Vs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Vs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Vs.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Vs.registerFlag("PROD",()=>!1);Vs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Vs.getBool("DEBUG"));Vs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Vs.registerFlag("IS_TEST",()=>!1);Vs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Vs.getBool("DEBUG"));Vs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Vs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Vs.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(s,e){let t=s;if(Di(s))return e==="string"?[]:[s.length];if(mA(s)){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}else if(gA(s))return[s.buffer.size/(e==null?4:Cf(e))];if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(t)||Di(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(s)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&SA(s,n,[]),n}function SA(s,e,t){if(t=t||[],!Array.isArray(s)&&!Di(s)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${s.length} elements`),D(s.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${s.length} elements`);const n=e.slice(1);for(let i=0;i<s.length;++i)SA(s[i],n,t.concat(i))}function r_(s,e,t,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==e||s==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${s} tensor, but got ${e} tensor`)}}function P(s,e,t,n="numeric"){if(s instanceof pA())return r_(n,s.dtype,e,t),s;let i=$u(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),r_(n,i,e,t),s==null||!Di(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const r=Yo(s,i);!Di(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?Mp(s,i):eo(s,[],!0);return K.makeTensor(a,r,i)}function kf(s,e,t,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>P(r,`${e}[${o}]`,t,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _A="__op";function G(s){const e=Object.keys(s);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const n=s[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+_A;const i=(...r)=>{K.startScope(t);try{const o=n(...r);return Ga(o)&&console.error("Cannot return a Promise inside of tidy."),K.endScope(o),o}catch(o){throw K.endScope(null),o}};return Object.defineProperty(i,"name",{value:t,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(s,e){const t=P(s,"real","complex"),n=P(e,"imag","complex");ai(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:t,imag:n};return K.runKernel(f0,i)}const zo=G({complex_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(s,e,t,n){if(n==null)n=$u(s);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(gA(s)||mA(s)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return K.backend.createTensorFromGPUData(s,e||t,n)}if(!Di(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){bi(e);const i=ae(e),r=ae(t);D(i===r,()=>`Based on the provided shape, [${e}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<t.length;++o){const a=t[o],l=o===t.length-1?a!==ae(e.slice(o)):!0;D(t[o]===e[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Di(s)&&!Array.isArray(s)&&(s=[s]),e=e||t,s=n!=="string"?Mp(s,n):eo(s,[],!0),K.makeTensor(s,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(s,e,t){const n=Yo(s,t);return Zo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ha={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class rr{static join(e){return new rr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(n=>Di(n)?n.buffer:n),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const i=e[n];n!==e.length-1&&i.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+i.byteLength;this.shards.push({buffer:i,start:t,end:r}),t=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(n===-1)throw new Error(`Could not find start shard for byte ${e}`);const i=t-e,r=new ArrayBuffer(i),o=new Uint8Array(r);let a=0;for(let l=n;l<this.shards.length;l++){const u=this.shards[l],h=e+a-u.start,d=a,p=Math.min(t,u.end)-u.start,x=new Uint8Array(u.buffer,h,p-h);if(o.set(x,d),a+=x.length,t<u.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(i){return e<i.start?-1:e>=i.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const n=AB(this.shards,t);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function AB(s,e){let t=0,n=s.length;for(;t<=n;){const i=Math.floor((n-t)/2)+t,r=e(s[i]);if(r===0)return i;r<0?n=i:t=i+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(){return K}function ht(s,e){return K.tidy(s,e)}function Jt(s){xA(s).forEach(t=>t.dispose())}function dr(s){return K.keep(s)}function IB(s){return K.setBackend(s)}function RB(){return K.ready()}function sh(){return K.backendName}function CA(s,e,t=1){return K.registerBackend(s,e,t)}function xu(){return K.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=4;async function MB(s,e){const t=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const c=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,g)=>m+g.length,0)+Vo*d.length,p=new Uint8Array(f);let x=0;for(let m=0;m<d.length;m++){const g=d[m],y=new Uint8Array(new Uint32Array([g.length]).buffer);p.set(y,x),x+=Vo,p.set(g,x),x+=g.length}h(p)});n.push(c)}else n.push(l.data());e!=null&&(u.group=e),t.push(u)}const r=await Promise.all(n);return{data:kB(r),specs:t}}function TA(s,e){const t=new rr(s),n={};let i=0;for(const r of e){const o=NB(r,(a,l)=>t.slice(i+a,i+l));n[r.name]=EA(r,t.slice(i,i+o)),i+=o}return n}function NB(s,e){const t=ae(s.shape);let n;if("quantization"in s){const i=s.quantization;n=Ha[i.dtype]}else if(s.dtype==="string"){let i=0;for(let r=0;r<t;r++)i+=Vo+new Uint32Array(e(i,i+Vo))[0];return i}else n=Ha[s.dtype];return t*n}async function PB(s,e){const t=ae(s.shape);let n;if("quantization"in s){const i=s.quantization;n=Ha[i.dtype]}else if(s.dtype==="string"){let i=0;for(let r=0;r<t;r++)i+=Vo+new Uint32Array(await e(i,i+Vo))[0];return i}else n=Ha[s.dtype];return t*n}function EA(s,e){const t=s.name,n=s.dtype,i=s.shape,r=ae(i);let o,a=0;if("quantization"in s){const l=s.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${s.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(n!=="float32")throw new Error(`Weight ${s.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${n}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=Ha[l.dtype],c=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(n==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){o=new Float32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];o[h]=d*l.scale+l.min}}else if(l.dtype==="float16")o=BB()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(n==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);o=new Int32Array(c.length);for(let h=0;h<c.length;h++){const d=c[h];o[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${n}`);a+=r*u}else if(n==="string"){const l=ae(s.shape);o=[];for(let u=0;u<l;u++){const c=new Uint32Array(e.slice(a,a+Vo))[0];a+=Vo;const h=new Uint8Array(e.slice(a,a+c));o.push(h),a+=c}}else{const l=Ha[n];if(n==="float32")o=new Float32Array(e);else if(n==="int32")o=new Int32Array(e);else if(n==="bool")o=new Uint8Array(e);else if(n==="complex64"){o=new Float32Array(e);const u=new Float32Array(o.length/2),c=new Float32Array(o.length/2);for(let p=0;p<u.length;p++)u[p]=o[p*2],c[p]=o[p*2+1];const h=xr(u,i,"float32"),d=xr(c,i,"float32"),f=zo(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${n}`);a+=r*l}return xr(o,i,n)}async function o_(s,e,t){let n=new Uint8Array(e);for(;n.byteLength<t;){const{done:i,value:r}=await s.read();if(i&&r==null){const a=t-n.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const o=new Uint8Array(n.length+r.byteLength);o.set(n,0),o.set(new Uint8Array(r),n.length),n=o}return n.buffer}async function AA(s,e){const t={},n=s.getReader();let i=new ArrayBuffer(0);for(const r of e){const o=await PB(r,async(u,c)=>(i=await o_(n,i,c),i.slice(u,c)));i=await o_(n,i,o);const a=i.slice(0,o);i=i.slice(o);const l=EA(r,a);if(t[r.name]=l,sh()==="webgpu"){const u=xu();"uploadToGPU"in u&&ae(l.shape)>=J().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function kB(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let e=0;const t=[];s.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(e);let i=0;return t.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const Tv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function a_(s){return Tv?Buffer.byteLength(s,"utf8"):new Blob([s]).size}function $B(s){if(Tv)return Buffer.from(s).toString("base64");const e=new Uint8Array(s);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function DB(s){if(Tv){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const e=atob(s),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function LB(s){return rr.join(s)}function l_(s){const e="/";for(s=s.trim();s.endsWith(e);)s=s.slice(0,s.length-1);const t=s.split(e);return t[t.length-1]}function IA(s,e){const t={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:e};return s.signature!=null&&(t.signature=s.signature),s.userDefinedMetadata!=null&&(t.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(t.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(t.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(t.trainingConfig=s.trainingConfig),t}function RA(s,e,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=e,n.weightData=t}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function Ev(s,e){let t,n;return s.weightsManifest!=null&&([t,n]=await e(s.weightsManifest)),RA(s,t,n)}function Dh(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:a_(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:a_(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:new rr(s.weightData).byteLength}}function xx(s){const e=[];for(const t of s)e.push(...t.weights);return e}function OB(){const s=t=>{let n=t<<13,i=0;for(;!(n&8388608);)i-=8388608,n<<=1;return n&=-8388609,i+=947912704,n|i},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=s(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function FB(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let e=1;e<31;e++)s[e]=e<<23;for(let e=33;e<63;e++)s[e]=2147483648+(e-32<<23);return s}function UB(){const s=new Uint32Array(64);for(let e=0;e<64;e++)s[e]=1024;return s[0]=s[32]=0,s}function BB(){const s=OB(),e=FB(),t=UB();return n=>{const i=new ArrayBuffer(4*n.length),r=new Uint32Array(i);for(let o=0;o<n.length;o++){const a=n[o],l=s[t[a>>10]+(a&1023)]+e[a>>10];r[o]=l}return new Float32Array(i)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Cn.instance==null&&(Cn.instance=new Cn),Cn.instance}static registerSaveRouter(e){Cn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Cn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Cn.getHandlers(e,"save")}static getLoadHandlers(e,t){return Cn.getHandlers(e,"load",t)}static getHandlers(e,t,n){const i=[];return(t==="load"?Cn.getInstance().loadRouters:Cn.getInstance().saveRouters).forEach(o=>{const a=o(e,n);a!==null&&i.push(a)}),i}}const zB=s=>Cn.registerSaveRouter(s),VB=s=>Cn.registerLoadRouter(s),WB=s=>Cn.getSaveHandlers(s),GB=(s,e)=>Cn.getLoadHandlers(s,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yx="tensorflowjs",bx=1,Ra="models_store",Io="model_info_store";function MA(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,e=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function vx(s){const e=s.result;e.createObjectStore(Ra,{keyPath:"modelPath"}),e.createObjectStore(Io,{keyPath:"modelPath"})}class Xa{constructor(e){if(this.indexedDB=MA(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,i)=>{const r=this.indexedDB.open(yx,bx);r.onupgradeneeded=()=>vx(r),r.onsuccess=()=>{const o=r.result;if(t==null){const a=o.transaction(Ra,"readonly"),u=a.objectStore(Ra).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(o.close(),i(u.error)),a.oncomplete=()=>o.close()}else{t.weightData=rr.join(t.weightData);const a=Dh(t),l=o.transaction(Io,"readwrite");let u=l.objectStore(Io),c;try{c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return i(d)}let h;c.onsuccess=()=>{h=o.transaction(Ra,"readwrite");const d=h.objectStore(Ra);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(p){return i(p)}f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{u=l.objectStore(Io);const x=u.delete(this.modelPath);x.onsuccess=()=>(o.close(),i(f.error)),x.onerror=m=>(o.close(),i(f.error))}},c.onerror=d=>(o.close(),i(c.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}Xa.URL_SCHEME="indexeddb://";const NA=s=>J().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Xa.URL_SCHEME)?HB(s.slice(Xa.URL_SCHEME.length)):null;Cn.registerSaveRouter(NA);Cn.registerLoadRouter(NA);function HB(s){return new Xa(s)}function XB(s){return s.startsWith(Xa.URL_SCHEME)?s.slice(Xa.URL_SCHEME.length):s}class qB{constructor(){this.indexedDB=MA()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(yx,bx);n.onupgradeneeded=()=>vx(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(Io,"readonly"),a=r.objectStore(Io).getAll();a.onsuccess=()=>{const l={};for(const u of a.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},a.onerror=l=>(i.close(),t(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>t(n.error)})}async removeModel(e){return e=XB(e),new Promise((t,n)=>{const i=this.indexedDB.open(yx,bx);i.onupgradeneeded=()=>vx(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(Io,"readwrite"),a=o.objectStore(Io),l=a.get(e);let u;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{u=r.transaction(Ra,"readwrite");const f=u.objectStore(Ra).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};c.onsuccess=h,c.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=c=>(r.close(),n(l.error)),o.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur="/",Kl="tensorflowjs_models",PA="info",KB="model_topology",jB="weight_specs",YB="weight_data",ZB="model_metadata";function kA(s){return{info:[Kl,s,PA].join(Ur),topology:[Kl,s,KB].join(Ur),weightSpecs:[Kl,s,jB].join(Ur),weightData:[Kl,s,YB].join(Ur),modelMetadata:[Kl,s,ZB].join(Ur)}}function $A(s){for(const e of Object.values(s))window.localStorage.removeItem(e)}function JB(s){const e=s.split(Ur);if(e.length<3)throw new Error(`Invalid key format: ${s}`);return e.slice(1,e.length-1).join(Ur)}function QB(s){return s.startsWith(qa.URL_SCHEME)?s.slice(qa.URL_SCHEME.length):s}class qa{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=kA(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),i=Dh(e),r=rr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,$B(r));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:i}}catch{throw $A(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=DB(o),t}}qa.URL_SCHEME="localstorage://";const DA=s=>J().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(qa.URL_SCHEME)?ez(s.slice(qa.URL_SCHEME.length)):null;Cn.registerSaveRouter(DA);Cn.registerLoadRouter(DA);function ez(s){return new qa(s)}class tz{constructor(){D(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Kl+Ur,n=Ur+PA;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(n)){const o=JB(r);e[o]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=QB(e);const t=kA(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return $A(t),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ru="://";class _s{constructor(){this.managers={}}static getInstance(){return _s.instance==null&&(_s.instance=new _s),_s.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ru)&&(e=e.slice(0,e.indexOf(ru))),D(e.length>0,()=>"scheme must not be an empty string.");const n=_s.getInstance();D(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=_s.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(_s.getInstance().managers)}}function df(s){if(s.indexOf(ru)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${_s.getSchemes().join(",")}`);return{scheme:s.split(ru)[0],path:s.split(ru)[1]}}async function LA(s,e,t=!1){D(s!==e,()=>`Old path and new path are the same: '${s}'`);const n=Cn.getLoadHandlers(s);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${s}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${s}.`);const i=n[0],r=Cn.getSaveHandlers(e);D(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(r.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);const o=r[0],a=df(s).scheme,l=df(s).path,u=a===df(s).scheme,c=await i.load();t&&u&&await _s.getManager(a).removeModel(l);const h=await o.save(c);return t&&!u&&await _s.getManager(a).removeModel(l),h.modelArtifactsInfo}async function nz(){const s=_s.getSchemes(),e={};for(const t of s){const n=await _s.getManager(t).listModels();for(const i in n){const r=t+ru+i;e[r]=n[i]}}return e}async function sz(s){const e=df(s);return _s.getManager(e.scheme).removeModel(e.path)}async function iz(s,e){return LA(s,e,!1)}async function rz(s,e){return LA(s,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oz{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!J().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return iA(e)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new oz);try{_s.registerManager(qa.URL_SCHEME,new tz)}catch{}try{_s.registerManager(Xa.URL_SCHEME,new qB)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const az={importFetch:()=>require("node-fetch")};let jm;class lz{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return J().global.fetch!=null?J().global.fetch(e,t):(jm==null&&(jm=az.importFetch()),jm(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new lz);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(s,e="float32",t){return e=e||"float32",bi(s),new mu(s,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(s,e){const t=P(s,"x","cast");if(!BU(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:t},i={dtype:e};return K.runKernel(Ep,n,i)}const hn=G({cast_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(s){const t={x:P(s,"x","clone","string_or_numeric")};return K.runKernel(Ap,t)}const Lo=G({clone_:cz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(s,e=!1){console.log(s.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bA();const hz={buffer:tn,cast:hn,clone:Lo,print:OA};bB(hz);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(s,e){let t=P(s,"a","add"),n=P(e,"b","add");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(Tp,i)}const Je=G({add_:dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(s,e){let t=P(s,"a","floorDiv"),n=P(e,"b","floorDiv");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(H0,i)}const FA=G({floorDiv_:fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(s,e){let t=P(s,"a","div"),n=P(e,"b","div");if([t,n]=$n(t,n),t.dtype==="int32"&&n.dtype==="int32")return FA(t,n);const i={a:t,b:n},r={};return K.runKernel(k0,i,r)}const Dt=G({div_:pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(s,e){let t=P(s,"a","mul"),n=P(e,"b","mul");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(_b,i)}const we=G({mul_:mz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(s){const e=P(s,"x","abs");if(e.dtype==="complex64"){const t={x:e};return K.runKernel(p0,t)}else{const t={x:e};return K.runKernel(Xy,t)}}const fi=G({abs_:gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(s){const t={x:P(s,"x","acos")};return K.runKernel(qy,t)}const yz=G({acos_:xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(s){const t={x:P(s,"x","acosh")};return K.runKernel(Ky,t)}const vz=G({acosh_:bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(s){D(Array.isArray(s),()=>"The argument passed to tf.addN() must be a list of tensors"),D(s.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${s.length}`);const e=s.map((i,r)=>P(i,`tensors${r}`,"addN")),t=e[0];e.forEach(i=>{if(i.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(i=>{if(!en(i.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const n=e;return K.runKernel(jy,n)}const Sz=G({addN_:wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(s,e=null,t=!1){const i={x:P(s,"x","all","bool")},r={axis:e,keepDims:t};return K.runKernel(Yy,i,r)}const Cz=G({all_:_z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(s,e=null,t=!1){const i={x:P(s,"x","any","bool")},r={axis:e,keepDims:t};return K.runKernel(Zy,i,r)}const Ez=G({any_:Tz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(s,e=0){const n={x:P(s,"x","argMax")},i={axis:e};return K.runKernel(Jy,n,i)}const UA=G({argMax_:Az});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(s,e=0){const n={x:P(s,"x","argMin")},i={axis:e};return K.runKernel(Qy,n,i)}const Rz=G({argMin_:Iz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(s){const t={x:P(s,"x","asin")};return K.runKernel(e0,t)}const Nz=G({asin_:Mz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(s){const t={x:P(s,"x","asinh")};return K.runKernel(t0,t)}const kz=G({asinh_:Pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(s){const t={x:P(s,"x","atan")};return K.runKernel(n0,t)}const Dz=G({atan_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(s,e){let t=P(s,"a","atan2"),n=P(e,"b","atan2");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(i0,i)}const Oz=G({atan2_:Lz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(s){const t={x:P(s,"x","atanh")};return K.runKernel(s0,t)}const Uz=G({atanh_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lh(s,e,t,n,i="NHWC",r){const o=s[3],a=[...e,o],l=or(i);return Gn(s,a,t,r,n,null,null,l)}function Fi(s,e,t,n,i,r,o="channelsLast"){const[a,l]=ih(e);let u;if(o==="channelsLast")u=[a,l,s[3],s[3]];else if(o==="channelsFirst")u=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Gn(s,u,t,n,i,r,!1,o)}function co(s,e,t,n,i,r,o="NDHWC"){const[a,l,u]=wx(e);let c,h;if(o==="NDHWC")h="channelsLast",c=[a,l,u,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",c=[a,l,u,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return Jo(s,c,t,n,i,!1,h,r)}function Gn(s,e,t,n,i,r,o=!1,a="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,h]=s;else if(a==="channelsFirst")[l,h,u,c]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=e,[x,m]=ih(t),[g,y]=ih(n),v=ou(d,g),w=ou(f,y),{padInfo:_,outHeight:T,outWidth:A}=Vz(i,u,c,x,m,v,w,r,a),M=o?p*h:p;let C;return a==="channelsFirst"?C=[l,M,T,A]:a==="channelsLast"&&(C=[l,T,A,M]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:h,outHeight:T,outWidth:A,outChannels:M,padInfo:_,strideHeight:x,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:g,dilationWidth:y,inShape:s,outShape:C,filterShape:e}}function Jo(s,e,t,n,i,r=!1,o="channelsLast",a){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,u,c,h,d]=s;else if(o==="channelsFirst")[l,d,u,c,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,x,,m]=e,[g,y,v]=wx(t),[w,_,T]=wx(n),A=ou(f,w),M=ou(p,_),C=ou(x,T),{padInfo:R,outDepth:$,outHeight:W,outWidth:q}=Wz(i,u,c,h,g,y,v,A,M,C,a),O=r?m*d:m;let H;return o==="channelsFirst"?H=[l,O,$,W,q]:o==="channelsLast"&&(H=[l,$,W,q,O]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:$,outHeight:W,outWidth:q,outChannels:O,padInfo:R,strideDepth:g,strideHeight:y,strideWidth:v,filterDepth:f,filterHeight:p,filterWidth:x,effectiveFilterDepth:A,effectiveFilterHeight:M,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:_,dilationWidth:T,inShape:s,outShape:H,filterShape:e}}function Bz(s,e,t,n,i){n==null&&(n=Av(s,e,t));const r=s[0],o=s[1],a=rh((r-e+2*n)/t+1,i),l=rh((o-e+2*n)/t+1,i);return[a,l]}function zz(s,e,t,n,i,r){i==null&&(i=Av(s,e[0],n[0]));const o=[0,0,0,t];for(let a=0;a<3;a++)s[a]+2*i>=e[a]&&(o[a]=rh((s[a]-e[a]+2*i)/n[a]+1,r));return o}function Av(s,e,t,n=1){const i=ou(e,n);return Math.floor((s[0]*(t-1)-t+i)/2)}function ih(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function wx(s){return typeof s=="number"?[s,s,s]:s}function ou(s,e){return e<=1?s:s+(s-1)*(e-1)}function Vz(s,e,t,n,i,r,o,a,l){let u,c,h;if(typeof s=="number"){u={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=Bz([e,t],r,n,s,a);c=f[0],h=f[1]}else if(s==="same"){c=Math.ceil(e/n),h=Math.ceil(t/i);const d=Math.max(0,(c-1)*n+r-e),f=Math.max(0,(h-1)*i+o-t),p=Math.floor(d/2),x=d-p,m=Math.floor(f/2),g=f-m;u={top:p,bottom:x,left:m,right:g,type:"SAME"}}else if(s==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-r+1)/n),h=Math.ceil((t-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],x=l==="channelsLast"?s[2][1]:s[3][1];u={top:d,bottom:f,left:p,right:x,type:d===0&&f===0&&p===0&&x===0?"VALID":"EXPLICIT"},c=rh((e-r+d+f)/n+1,a),h=rh((t-o+p+x)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:u,outHeight:c,outWidth:h}}function Wz(s,e,t,n,i,r,o,a,l,u,c){let h,d,f,p;if(s==="valid"&&(s=0),typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=zz([e,t,n,1],[a,l,u],1,[i,r,o],s,c);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(e/i),f=Math.ceil(t/r),p=Math.ceil(n/o);const x=(d-1)*i+a-e,m=(f-1)*r+l-t,g=(p-1)*o+u-n,y=Math.floor(x/2),v=x-y,w=Math.floor(m/2),_=m-w,T=Math.floor(g/2),A=g-T;h={top:w,bottom:_,left:T,right:A,front:y,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function rh(s,e){if(!e)return Math.trunc(s);switch(e){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${e}`)}}function oh(s){const[e,t,n]=ih(s);return e===1&&t===1&&n===1}function Ns(s,e){return oh(s)||oh(e)}function Ka(s){return ih(s).every(e=>e>0)}function or(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function Ui(s,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")D(fu(e),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(i=>{D(fu(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(s,e){const n={x:P(s,"x","reshape","string_or_numeric")},i={shape:e};return K.runKernel(Ub,n,i)}const he=G({reshape_:Gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(s,e,t,n,i){const r=P(s,"x","avgPool","float32"),o=1;D(Ns(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=he(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ui("avgPool",n,i);const u={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:i};let h=K.runKernel(r0,u,c);return h=hn(h,r.dtype),l?he(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const BA=G({avgPool_:Hz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(s,e,t,n,i,r="NDHWC"){const o=P(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),D(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Ui("avgPool3d",n,i);const u={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:i,dataFormat:r};let h=K.runKernel(o0,u,c);return h=hn(h,a.dtype),l?he(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const qz=G({avgPool3d_:Xz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(s,e=0){D(s.length>=1,()=>"Pass at least one tensor to concat");const t=kf(s,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return Lo(t[0]);const n=t,i={axis:e};return K.runKernel(m0,n,i)}const ts=G({concat_:Kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(s,e,t=!1,n=!1){let i=P(s,"a","matMul"),r=P(e,"b","matMul");[i,r]=$n(i,r);const o={a:i,b:r},a={transposeA:t,transposeB:n};return K.runKernel(a0,o,a)}const sn=G({matMul_:jz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(s){const t={x:P(s,"x","sigmoid","float32")};return K.runKernel(tv,t)}const Gr=G({sigmoid_:Yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(s,e,t){const n=P(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:e,size:t};return K.runKernel(Zb,i,r)}const Nt=G({slice_:Zz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(s){const t={x:P(s,"x","tanh","float32")};return K.runKernel(gv,t)}const Sx=G({tanh_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(s,e,t,n,i,r){const o=P(s,"forgetBias","basicLSTMCell"),a=P(e,"lstmKernel","basicLSTMCell"),l=P(t,"lstmBias","basicLSTMCell"),u=P(n,"data","basicLSTMCell"),c=P(i,"c","basicLSTMCell"),h=P(r,"h","basicLSTMCell"),d=ts([u,h],1),f=sn(d,a),p=Je(f,l),x=p.shape[0],m=p.shape[1]/4,g=[x,m],y=Nt(p,[0,0],g),v=Nt(p,[0,m],g),w=Nt(p,[0,m*2],g),_=Nt(p,[0,m*3],g),T=Je(we(Gr(y),Sx(v)),we(c,Gr(Je(o,w)))),A=we(Sx(T),Gr(_));return[T,A]}const eV=G({basicLSTMCell_:Qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(s,e,t){const n=P(s,"x","batchToSpaceND"),i=e.reduce((a,l)=>a*l);D(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`);const r={x:n},o={blockShape:e,crops:t};return K.runKernel(l0,r,o)}const zA=G({batchToSpaceND_:tV});function nV(s){let e;return s.rank===0||s.rank===1?e=he(s,[1,1,1,s.size]):s.rank===2?e=he(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?e=he(s,[1,s.shape[0],s.shape[1],s.shape[2]]):e=s,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(s,e,t,n,i,r){r==null&&(r=.001);const o=P(s,"x","batchNorm"),a=P(e,"mean","batchNorm"),l=P(t,"variance","batchNorm");let u;i!=null&&(u=P(i,"scale","batchNorm"));let c;n!=null&&(c=P(n,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:nV(o),scale:u,offset:c,mean:a,variance:l},f={varianceEpsilon:r},p=K.runKernel(X0,d,f);return he(p,o.shape)}const Pp=G({batchNorm_:sV});function iV(s,e,t,n,i,r){const o=P(s,"x","batchNorm"),a=P(e,"mean","batchNorm"),l=P(t,"variance","batchNorm");let u;i!=null&&(u=P(i,"scale","batchNorm"));let c;return n!=null&&(c=P(n,"offset","batchNorm")),D(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Pp(o,a,l,c,u,r)}const rV=G({batchNorm2d_:iV});function oV(s,e,t,n,i,r){const o=P(s,"x","batchNorm"),a=P(e,"mean","batchNorm"),l=P(t,"variance","batchNorm");let u;i!=null&&(u=P(i,"scale","batchNorm"));let c;return n!=null&&(c=P(n,"offset","batchNorm")),D(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Pp(o,a,l,c,u,r)}const aV=G({batchNorm3d_:oV});function lV(s,e,t,n,i,r){const o=P(s,"x","batchNorm"),a=P(e,"mean","batchNorm"),l=P(t,"variance","batchNorm");let u;i!=null&&(u=P(i,"scale","batchNorm"));let c;return n!=null&&(c=P(n,"offset","batchNorm")),D(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Pp(o,a,l,c,u,r)}const uV=G({batchNorm4d_:lV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(s,e,t){const n=P(s,"x","bincount"),i=P(e,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:t};return K.runKernel(u0,r,o)}const VA=G({bincount_:cV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(s,e){const t=P(s,"x","bitwiseAnd"),n=P(e,"y","bitwiseAnd");if(!en(t.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${n.shape}`);if(t.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${n.dtype}`);const i={a:t,b:n};return K.runKernel(LE,i)}const dV=G({bitwiseAnd_:hV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(s,e){const t=P(s,"s0","broadcastArgs","int32"),n=P(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);const i={s0:t,s1:n};return K.runKernel(c0,i)}const pV=G({broadcastArgs_:fV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(s,e){let t=P(s,"broadcastTo","x");const n=t.shape;if(bi(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=he(t,u)}const i=t.shape,r=Array.from(e);for(let u=e.length-1;u>=0;u--)if(i[u]===e[u])r[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(r.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Lo(t);const a={x:t},l={reps:r};return K.runKernel(Ip,a,l)}const Ic=G({broadcastTo_:mV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(s){const t={x:P(s,"x","ceil","float32")};return K.runKernel(h0,t)}const xV=G({ceil_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(s,e,t){bi(s),t=t||$u(e);const n={shape:s,value:e,dtype:t};return K.runKernel(V0,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(s,e,t){const n=P(s,"x","clipByValue");if(D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Oh(n.shape,e,n.dtype);const i={x:n},r={clipValueMin:e,clipValueMax:t};return K.runKernel(d0,i,r)}const WA=G({clipByValue_:yV});function bV(s){return ts(s,0)}const vV=G({concat1d_:bV});function wV(s,e){return ts(s,e)}const SV=G({concat2d_:wV});function _V(s,e){return ts(s,e)}const CV=G({concat3d_:_V});function TV(s,e){return ts(s,e)}const EV=G({concat4d_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(s,e,t,n,i="NHWC",r=[1,1],o){const a=P(s,"x","conv2d","float32"),l=P(e,"filter","conv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Ui("conv2d",n,o);const h=i==="NHWC"?u.shape[3]:u.shape[1];D(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),D(Ns(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),D(Ka(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(Ka(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:u,filter:l},f={strides:t,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=K.runKernel(g0,d,f);return c?he(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const kp=G({conv2d_:AV});function IV(s,e,t,n,i="NWC",r=1,o){const a=P(s,"x","conv1d"),l=P(e,"filter","conv1d");let u=a,c=!1;a.rank===2&&(c=!0,u=he(a,[1,a.shape[0],a.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Ui("conv1d",n,o),D(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(Ns(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),D(Ka(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(Ka(t),()=>"Error in conv1D: Stride should be larger than 0."),D(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=he(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=he(u,[u.shape[0],1,u.shape[1],u.shape[2]]),m=kp(d,h,[1,t],n,"NHWC",[1,r],o);return c?he(m,[m.shape[2],m.shape[3]]):he(m,[m.shape[0],m.shape[2],m.shape[3]])}const RV=G({conv1d_:IV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(s,e,t,n,i,r="NHWC",o){D(s.length===e.rank,()=>`Length of inShape (${s.length}) and rank of dy (${e.rank}) must match`);let a=s,l=e,u=!1;e.rank===3&&(u=!0,l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,s[0],s[1],s[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];D(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),D(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Ui("conv2dDerInput",i,o);const d={dy:l,filter:t},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=K.runKernel(y0,d,f);return u?he(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const GA=G({conv2DBackpropInput_:MV});function NV(s,e,t,n,i,r){const o=P(s,"x","conv2dTranspose"),a=P(e,"filter","conv2dTranspose");return GA(t,o,a,n,i,"NHWC",r)}const PV=G({conv2dTranspose_:NV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(s,e,t,n,i="NDHWC",r=[1,1,1]){const o=P(s,"x","conv3d"),a=P(e,"filter","conv3d");let l=o,u=!1;o.rank===4&&(u=!0,l=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(Ns(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),D(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`),D(Ka(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(Ka(t),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:l,filter:a},h={strides:t,pad:n,dataFormat:i,dilations:r},d=K.runKernel(b0,c,h);return u?he(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const $V=G({conv3d_:kV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(s,e,t,n,i){D(s.length===e.rank,()=>`Length of inShape (${s.length}) and rank of dy (${e.rank}) must match`);let r=s,o=e,a=!1;e.rank===4&&(a=!0,o=he(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],u=o.shape[4];D(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),D(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),D(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const c={dy:o,filter:t},h={pad:i,strides:n,inputShape:r},d=K.runKernel(v0,c,h);return a?he(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const LV=G({conv3DBackpropInput_:DV});function OV(s,e,t,n,i){const r=P(s,"x","conv3dTranspose"),o=P(e,"filter","conv3dTranspose");return LV(t,r,o,n,i)}const FV=G({conv3dTranspose_:OV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(s){const t={x:P(s,"x","cos","float32")};return K.runKernel(w0,t)}const BV=G({cos_:UV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(s){const t={x:P(s,"x","cosh","float32")};return K.runKernel(S0,t)}const VV=G({cosh_:zV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(s,e=0,t=!1,n=!1){const r={x:P(s,"x","cumprod")},o={axis:e,exclusive:t,reverse:n};return K.runKernel(_0,r,o)}const GV=G({cumprod_:WV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(s,e=0,t=!1,n=!1){const r={x:P(s,"x","cumsum")},o={axis:e,exclusive:t,reverse:n};return K.runKernel(C0,r,o)}const XV=G({cumsum_:HV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(s,e,t,n=!1){const i=P(s,"x","denseBincount"),r=P(e,"weights","denseBincount");D(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),D(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:t,binaryOutput:n};return K.runKernel(E0,o,a)}const KV=G({denseBincount_:qV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(s,e,t="NHWC"){const n=P(s,"x","depthToSpace","float32"),i=t==="NHWC"?n.shape[1]:n.shape[2],r=t==="NHWC"?n.shape[2]:n.shape[3],o=t==="NHWC"?n.shape[3]:n.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e}  for depthToSpace with input shape
    ${n.shape}`),D(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${n.shape}`),D(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:e,dataFormat:t};return K.runKernel(A0,a,l)}const YV=G({depthToSpace_:jV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(s,e,t,n,i="NHWC",r=[1,1],o){const a=P(s,"x","depthwiseConv2d","float32"),l=P(e,"filter","depthwiseConv2d","float32");let u=a,c=!1;a.rank===3&&(c=!0,u=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?u.shape[3]:u.shape[1];D(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ui("depthwiseConv2d",n,o);const d={x:u,filter:l},f={strides:t,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=K.runKernel(I0,d,f);return c?he(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Iv=G({depthwiseConv2d_:ZV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(s){const t={x:P(s,"x","diag")};return K.runKernel(N0,t)}const QV=G({diag_:JV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(s,e,t,n,i=[1,1],r="NHWC"){const o=P(s,"x","dilation2d"),a=P(e,"filter","dilation2d");D(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,u=!1;o.rank===3&&(l=he(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0),D(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const c={x:l,filter:a},h={strides:t,pad:n,dilations:i},d=K.runKernel(P0,c,h);return u?he(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const t4=G({dilation2d_:e4});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yu(s,e){const t=s.length,n=[];for(let i=0;i<t;i++){const r=t-1-i,o=s[r]||1;(e[e.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function HA(s,e){const t=[];for(let n=0;n<e.length;n++){const i=s[s.length-n-1],r=e.length-n-1,o=e[r];(i==null||i===1&&o>1)&&t.unshift(r)}return t}function It(s,e){const t=Math.max(s.length,e.length),n=new Array(t);for(let i=0;i<t;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=e[e.length-i-1];if(o==null&&(o=1),r===1)n[t-i-1]=o;else if(o===1)n[t-i-1]=r;else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${e}.`;throw Error(a)}else n[t-i-1]=r}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(s,e){let t=P(s,"a","equal","string_or_numeric"),n=P(e,"b","equal","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(O0,i)}const XA=G({equal_:n4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(s,e,t){const n=P(e,"a","where"),i=P(t,"b","where"),r=P(s,"condition","where","bool"),o=It(It(r.shape,n.shape),i.shape),a=Ic(r,o),l=Ic(n,o),u=Ic(i,o),c={condition:a,t:l,e:u};return K.runKernel(jb,c)}const Oo=G({where_:s4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(s){const t={x:P(s,"x","zerosLike")};return K.runKernel(wv,t)}const yi=G({zerosLike_:i4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(s,e){let t=P(s,"a","div"),n=P(e,"b","div");[t,n]=$n(t,n);const i=Dt(t,n),r=yi(i),o=XA(n,r);return Oo(o,r,i)}const o4=G({divNoNan_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(s,e){const t=P(s,"t1","dot"),n=P(e,"t2","dot");D((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);const i=t.rank===1?t.size:t.shape[1],r=n.rank===1?n.size:n.shape[0];if(D(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),t.rank===1&&n.rank===1){const o=he(t,[1,-1]),a=he(n,[-1,1]),l=sn(o,a);return he(l,[])}else if(t.rank===1&&n.rank===2){const o=he(t,[1,-1]),a=he(n,[n.shape[0],n.shape[1]]),l=sn(o,a);return he(l,[l.size])}else if(t.rank===2&&n.rank===1){const o=he(n,[-1,1]),a=sn(t,o);return he(a,[a.size])}else{const o=he(n,[n.shape[0],n.shape[1]]);return sn(t,o)}}const l4=G({dot_:a4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(s,...e){const t=e.map((i,r)=>P(i,`tensors${r}`,"einsum")),n={equation:s};return K.runKernel($0,t,n)}const jl=G({einsum_:u4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(s){const t={x:P(s,"x","elu","float32")};return K.runKernel(D0,t)}const qA=G({elu_:c4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(s,e){const t=P(s,"x","ensureShape","string_or_numeric");if(!FU(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return s}const d4=G({ensureShape_:h4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(s){let e=P(s,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=hn(e,"float32"));const t={x:e};return K.runKernel(L0,t)}const p4=G({erf_:f4});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(s,e){for(let t=0;t<s.length;++t)if(s[s.length-t-1]!==e-1-t)return!1;return!0}function KA(s,e,t){const n=s.length+e.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)t.indexOf(a)===-1?i.push(s[r++]):i.push(e[o++]);return i}function vi(s,e){const t=[],n=s.length;for(let r=0;r<n;r++)e.indexOf(r)===-1&&t.push(s[r]);const i=e.map(r=>s[r]);return[t,i]}function ui(s,e){const t=e.map(n=>1);return KA(s,t,e)}function ci(s,e,t){D(Rv(e,t),()=>`${s} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function ms(s,e){if(Rv(s,e))return null;const t=[];for(let n=0;n<e;++n)s.indexOf(n)===-1&&t.push(n);return s.forEach(n=>t.push(n)),t}function Fh(s){return s.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function gs(s,e){const t=[];for(let n=e-s;n<e;++n)t.push(n);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(s,e=null,t=!1){const i={x:P(s,"x","max")},r={reductionIndices:e,keepDims:t};return K.runKernel(db,i,r)}const au=G({max_:m4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(s,e=null,t=!1){const i={x:P(s,"x","min")},r={axis:e,keepDims:t};return K.runKernel(yb,i,r)}const _x=G({min_:g4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(s,e){let t=P(s,"base","pow"),n=P(e,"exp","pow");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(Pb,i)}const ah=G({pow_:x4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(s,e){if((Di(s)&&e!=="string"||Array.isArray(s))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Di(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Zo(s,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(s){const t={x:P(s,"x","sqrt","float32")};return K.runKernel(sv,t)}const to=G({sqrt_:y4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(s){const e=P(s,"x","square"),t={};return K.runKernel("Square",{x:e},t)}const ki=G({square_:b4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(s,e=null,t=!1){let n=P(s,"x","sum");n.dtype==="bool"&&(n=hn(n,"int32"));const i={x:n},r={axis:e,keepDims:t};return K.runKernel(iv,i,r)}const yn=G({sum_:v4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(s,e="euclidean",t=null,n=!1){s=P(s,"x","norm");const i=jA(s,e,t);let r=i.shape;if(n){const o=wn(t,s.shape);r=ui(i.shape,o)}return he(i,r)}function jA(s,e,t=null){if(s.rank===0)return fi(s);if(s.rank!==1&&t===null)return jA(he(s,[-1]),e,t);if(s.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return yn(fi(s),t);if(e===1/0)return au(fi(s),t);if(e===-1/0)return _x(fi(s),t);if(e==="euclidean"||e===2)return to(yn(ah(fi(s),Pt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return au(yn(fi(s),t[0]),t[1]-1);if(e===1/0)return au(yn(fi(s),t[1]),t[0]);if(e===-1/0)return _x(yn(fi(s),t[1]),t[0]);if(e==="fro"||e==="euclidean")return to(yn(ki(s),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const $p=G({norm_:w4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(s,e=null,t=!1){return $p(s,"euclidean",e,t)}const _4=G({euclideanNorm_:S4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(s){const t={x:P(s,"x","exp")};return K.runKernel(F0,t)}const no=G({exp_:C4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(s,e=0){const t=P(s,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");const n={input:t},i={dim:e};return K.runKernel(U0,n,i)}const pi=G({expandDims_:T4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(s){const t={x:P(s,"x","expm1")};return K.runKernel(B0,t)}const A4=G({expm1_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(s,e){const t=P(s,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const n={x:t},i={reps:e};return K.runKernel(Ip,n,i)}const Rc=G({tile_:I4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(s,e,t,n="float32"){e==null&&(e=s);const i=tn([s,e],n),r=s<=e?s:e;for(let a=0;a<r;++a)i.set(1,a,a);const o=he(i.toTensor(),[s,e]);if(t==null)return o;if(t.length===1)return Rc(pi(o,0),[t[0],1,1]);if(t.length===2)return Rc(pi(pi(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return Rc(pi(pi(pi(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const YA=G({eye_:R4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(s){const t={x:P(s,"x","floor","float32")};return K.runKernel(G0,t)}const ZA=G({floor_:M4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(s,e,t=0,n=0){const i=P(s,"x","gather"),r=P(e,"indices","gather","int32"),o={x:i,indices:r},a={axis:t,batchDims:n};return K.runKernel(q0,o,a)}const JA=G({gather_:N4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(s,e){let t=P(s,"a","greater","string_or_numeric"),n=P(e,"b","greater","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(j0,i)}const Dp=G({greater_:P4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(s,e){let t=P(s,"a","greaterEqual","string_or_numeric"),n=P(e,"b","greaterEqual","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(Y0,i)}const QA=G({greaterEqual_:k4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(s){const t={input:P(s,"input","imag")};return K.runKernel(J0,t)}const Lp=G({imag_:$4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(s){const t={x:P(s,"x","isFinite")};return K.runKernel(Q0,t)}const L4=G({isFinite_:D4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(s){const t={x:P(s,"x","isInf")};return K.runKernel(eb,t)}const F4=G({isInf_:O4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(s){const t={x:P(s,"x","isNaN")};return K.runKernel(tb,t)}const B4=G({isNaN_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(s,e=.2){const n={x:P(s,"x","leakyRelu")},i={alpha:e};return K.runKernel(nb,n,i)}const eI=G({leakyRelu_:z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(s,e){let t=P(s,"a","less","string_or_numeric"),n=P(e,"b","less","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(sb,i)}const Cx=G({less_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(s,e){let t=P(s,"a","lessEqual","string_or_numeric"),n=P(e,"b","lessEqual","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(ib,i)}const Mv=G({lessEqual_:W4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(s,e,t){if(t<=0)throw new Error("The number of values should be positive.");const n={start:s,stop:e,num:t};return K.runKernel(rb,{},n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(s,e=5,t=1,n=1,i=.5){const r=P(s,"x","localResponseNormalization");D(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),D(fu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=he(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},u={depthRadius:e,bias:t,alpha:n,beta:i},c=K.runKernel(hb,l,u);return a?he(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const X4=G({localResponseNormalization_:H4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(s){const t={x:P(s,"x","log","float32")};return K.runKernel(ob,t)}const lh=G({log_:q4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(s){const t={x:P(s,"x","log1p")};return K.runKernel(ab,t)}const tI=G({log1p_:K4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(s,e){D(ax(s),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(u=>u instanceof Pf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in K.registeredVariables)e.push(K.registeredVariables[u])}const n=t?e.filter(u=>!u.trainable):null,i=e.length;e=e.filter(u=>u.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=K.gradients(s,e,null,r);D(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return e.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),n!=null&&n.forEach(u=>l[u.name]=null),{value:o,grads:l}}function so(s){return K.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(s){const t={x:P(s,"x","neg")};return K.runKernel(Cb,t)}const yr=G({neg_:Y4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(s){const t={x:P(s,"x","softplus")};return K.runKernel(nv,t)}const nI=G({softplus_:Z4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(s){const e=P(s,"x","logSigmoid");return so(n=>({value:yr(nI(yr(n))),gradFunc:o=>we(o,Gr(yr(n)))}))(e)}const Q4=G({logSigmoid_:J4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(s,e){let t=P(s,"a","sub"),n=P(e,"b","sub");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(pv,i)}const St=G({sub_:eW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(s,e=-1){const t=P(s,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return so((i,r)=>{const a=au(i,e,!0),l=St(i,a),u=St(hn(l,"float32"),lh(yn(no(l),e,!0)));return r([u]),{value:u,gradFunc:(h,d)=>{const[f]=d,p=!0,x=no(f);return St(h,we(yn(h,e,p),x))}}})(t)}const nW=G({logSoftmax_:tW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(s,e=null,t=!1){const n=P(s,"x","logSumExp"),i=wn(e,n.shape),r=au(n,i,!0),o=St(n,r),a=no(o),l=yn(a,i),u=lh(l),c=Je(he(r,u.shape),u);if(t){const h=ui(c.shape,i);return he(c,h)}return c}const sI=G({logSumExp_:sW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(s,e){const t=P(s,"a","logicalAnd","bool"),n=P(e,"b","logicalAnd","bool");It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(lb,i)}const $f=G({logicalAnd_:iW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(s){const t={x:P(s,"x","logicalNot","bool")};return K.runKernel(ub,t)}const iI=G({logicalNot_:rW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(s,e){const t=P(s,"a","logicalOr","bool"),n=P(e,"b","logicalOr","bool");It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(cb,i)}const rI=G({logicalOr_:oW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(s,e){const t=P(s,"a","logicalXor","bool"),n=P(e,"b","logicalXor","bool");return It(t.shape,n.shape),$f(rI(s,e),iI($f(s,e)))}const lW=G({logicalXor_:aW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qd=2147483648;function uW(s,e,t="left"){const n=P(s,"sortedSequence","searchSorted"),i=P(e,"values","searchSorted"),r=n.shape[n.shape.length-1],o=i.shape[i.shape.length-1],a=he(n,[-1,r]),l=he(i,[-1,o]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ae(l.shape)>=qd)throw new Error(`values tensor size must less than ${qd}`);if(a.shape[1]>=qd)throw new Error(`trailing dim_size must less than ${qd} for int32 output type, was ${a.shape[1]}`);const u={sortedSequence:a,values:l},c={side:t};return K.runKernel(Kb,u,c)}const Nv=G({searchSorted_:uW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(s,e){return Nv(s,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hW(s,e,t,n,i){const r=P(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=he(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(Ns(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Ui("maxPool",n,i);const u={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:i},h=K.runKernel(pb,u,c);return l?he(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const oI=G({maxPool_:hW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dW(s,e=[1,1,1],t,n,i,r="NDHWC"){const o=P(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=he(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Ui("maxPool3d",n,i);const u={x:a},c={filterSize:e,strides:t,pad:n,dimRoundingMode:i,dataFormat:r},h=K.runKernel(mb,u,c);return l?he(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const fW=G({maxPool3d_:dW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(s,e,t,n,i=!1){const o={x:P(s,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:n,includeBatchInIndex:i},l=K.runKernel(gb,o,a);return{result:l[0],indexes:l[1]}}const mW=G({maxPoolWithArgmax_:pW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(s,e){let t=P(s,"a","maximum"),n=P(e,"b","maximum");[t,n]=$n(t,n),t.dtype==="bool"&&(t=hn(t,"int32"),n=hn(n,"int32")),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(fb,i)}const aI=G({maximum_:gW});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(s,e=null,t=!1){const i={x:P(s,"x","mean")},r={axis:e,keepDims:t};return K.runKernel(xb,i,r)}const Df=G({mean_:xW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(s,e="float32"){if(bi(s),e==="complex64"){const n=io(s,"float32"),i=io(s,"float32");return zo(n,i)}const t=Jr(ae(s),e);return K.makeTensor(t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ma(s,e="float32"){if(bi(s),e==="complex64"){const n=Ma(s,"float32"),i=io(s,"float32");return zo(n,i)}const t=NE(ae(s),e);return K.makeTensor(t,s,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(s,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(s===void 0)return[];let n=P(s,"x","meshgrid",s instanceof Nn?s.dtype:"float32");if(e===void 0)return[n];let i=P(e,"y","meshgrid",e instanceof Nn?e.dtype:"float32");const r=ae(n.shape),o=ae(i.shape);return t==="xy"?(n=he(n,[1,-1]),i=he(i,[-1,1]),[sn(Ma([o,1],n.dtype),n),sn(i,Ma([1,r],i.dtype))]):(n=he(n,[-1,1]),i=he(i,[1,-1]),[sn(n,Ma([1,o],n.dtype)),sn(Ma([r,1],i.dtype),i)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(s,e){let t=P(s,"a","minimum"),n=P(e,"b","minimum");[t,n]=$n(t,n),t.dtype==="bool"&&(t=hn(t,"int32"),n=hn(n,"int32")),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(bb,i)}const uh=G({minimum_:bW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(s,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const n=P(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);const i=t==="reflect"?1:0;for(let a=0;a<n.rank;a++)D(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[a][0]>=0&&e[a][0]<=n.shape[a]-i&&e[a][1]>=0&&e[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:e,mode:t},o={x:n};return K.runKernel(vb,o,r)}const lI=G({mirrorPad_:vW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(s,e){let t=P(s,"a","mod"),n=P(e,"b","mod");[t,n]=$n(t,n);const i={a:t,b:n};return K.runKernel(wb,i)}const SW=G({mod_:wW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(s,e=null,t=!1){s=P(s,"x","moments");const n=wn(e,s.shape),i=Df(s,n,t);let r=i.shape;t||(r=ui(i.shape,n));const o=ki(St(hn(s,"float32"),he(i,r))),a=Df(o,n,t);return{mean:i,variance:a}}const CW=G({moments_:_W});function TW(s,e,t,n){const i=P(e,"data","multiRNNCell"),r=kf(t,"c","multiRNNCell"),o=kf(n,"h","multiRNNCell");let a=i;const l=[];for(let h=0;h<s.length;h++){const d=s[h](a,r[h],o[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}const EW=G({multiRNNCell_:TW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(s,e,t,n=!1){const i=P(s,"logits","multinomial"),r=i.size,o=i.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const l={logits:o===1?he(i,[1,-1]):i},u={numSamples:e,seed:t,normalized:n},c=K.runKernel(Sb,l,u);return o===1?he(c,[c.size]):c}const IW=G({multinomial_:AW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(s,e){let t=P(s,"a","notEqual","string_or_numeric"),n=P(e,"b","notEqual","string_or_numeric");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n};return K.runKernel(Tb,i)}const uI=G({notEqual_:RW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(s,e,t=1,n=0,i="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:P(s,"indices","oneHot","int32")},a={dtype:i,depth:e,onValue:t,offValue:n};return K.runKernel(Rb,o,a)}const NW=G({oneHot_:MW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){const t={x:P(s,"x","onesLike")};return K.runKernel(Ib,t)}const kW=G({onesLike_:PW});function $W(s,e){const t=P(s,"v1","outerProduct"),n=P(e,"v2","outerProduct");D(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);const i=he(t,[-1,1]),r=he(n,[1,-1]);return sn(i,r)}const DW=G({outerProduct_:$W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(s,e,t=0){const n=P(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:t},r={x:n};return K.runKernel(Nb,r,i)}const Wo=G({pad_:LW});function OW(s,e,t=0){return D(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Wo(s,[e],t)}const FW=G({pad1d_:OW});function UW(s,e,t=0){return D(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(s,e,t)}const BW=G({pad2d_:UW});function zW(s,e,t=0){return D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(s,e,t)}const VW=G({pad3d_:zW});function WW(s,e,t=0){return D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Wo(s,e,t)}const GW=G({pad4d_:WW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(s,e,t){const n=P(s,"x","spaceToBatchND");D(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(n.shape.reduce((o,a,l)=>l>0&&l<=e.length?o&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const i={x:n},r={blockShape:e,paddings:t};return K.runKernel(rv,i,r)}const cI=G({spaceToBatchND_:HW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s,e,t,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=P(s,"x","maxPool");let l=a,u=!1;a.rank===3&&(u=!0,l=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(Ns(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const c=Fi(l.shape,e,r,i,n),h=[c.dilationHeight,c.dilationWidth];let d;n==="same"?d=KW([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,x]=qW([c.inHeight,c.inWidth],h,d),m=f?n:"valid",g=f?l:cI(l,h,p),v=(t==="avg"?()=>BA(g,e,r,m,o):()=>oI(g,e,r,m,o))(),w=f?v:zA(v,h,x);return u?he(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function qW(s,e,t){const n=t.map(c=>c[0]),i=t.map(c=>c[1]),r=s.concat(n,i),o=e.map((c,h)=>(c-r[h]%c)%c),a=i.map((c,h)=>c+o[h]),l=e.map((c,h)=>[n[h],a[h]]),u=e.map((c,h)=>[0,o[h]]);return[l,u]}function KW(s,e){const n=s.map((o,a)=>o+(o-1)*(e[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const jW=G({pool_:XW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s,e){const t=P(s,"x","prelu"),n=P(e,"alpha","prelu"),i={x:t,alpha:n};return K.runKernel(kb,i)}const hI=G({prelu_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s,e=null,t=!1){let n=P(s,"x","prod");n.dtype==="bool"&&(n=hn(n,"int32"));const i={x:n},r={axis:e,keepDims:t};return K.runKernel($b,i,r)}const JW=G({prod_:ZW});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(s,e,t,n){const i=s.map((c,h)=>P(c,`tensors${h}`,"raggedGather","int32")),r=P(e,"paramsDenseValues","raggedGather"),o=P(t,"indices","raggedGather","int32"),a={paramsNestedSplits:i,paramsDenseValues:r,indices:o},l={outputRaggedRank:n},u=K.runKernel(GE,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const eG=G({raggedGather_:QW});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(s,e,t){const n=P(s,"starts","raggedRange"),i=P(e,"limits","raggedRange",n.dtype),r=P(t,"deltas","raggedRange",n.dtype),o={starts:n,limits:i,deltas:r},a=K.runKernel(HE,o);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const nG=G({raggedRange_:tG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(s,e,t,n,i){const r=P(s,"shape","raggedTensorToTensor","int32"),o=P(e,"values","raggedTensorToTensor"),a=P(t,"defaultValue","raggedTensorToTensor",o.dtype),l=n.map((h,d)=>P(h,`tensors${d}`,"raggedTensorToTensor","int32")),u={shape:r,values:o,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:i};return K.runKernel(XE,u,c)}const iG=G({raggedTensorToTensor_:sG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(s,e,t){bi(s);const n=ae(s);let i=null;if(t==null||t==="float32")i=new Float32Array(n);else if(t==="int32")i=new Int32Array(n);else if(t==="bool")i=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let r=0;r<n;r++)i[r]=e();return K.makeTensor(i,s,t)}const oG=G({rand_:rG});var Pv={exports:{}};Pv.exports;(function(s){(function(e,t,n){function i(l){var u=this,c=a();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=c(" "),u.s1=c(" "),u.s2=c(" "),u.s0-=c(l),u.s0<0&&(u.s0+=1),u.s1-=c(l),u.s1<0&&(u.s1+=1),u.s2-=c(l),u.s2<0&&(u.s2+=1),c=null}function r(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function o(l,u){var c=new i(l),h=u&&u.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,c),d.state=function(){return r(c,{})}),d}function a(){var l=4022871197,u=function(c){c=String(c);for(var h=0;h<c.length;h++){l+=c.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return u}t.exports?t.exports=o:this.alea=o})(gr,s)})(Pv);var aG=Pv.exports,kv={exports:{}};kv.exports;(function(s){(function(e,t,n){function i(a){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var u=new i(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}t.exports?t.exports=o:this.xor128=o})(gr,s)})(kv);var lG=kv.exports,$v={exports:{}};$v.exports;(function(s){(function(e,t,n){function i(a){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:u+=a;for(var c=0;c<u.length+64;c++)l.x^=u.charCodeAt(c)|0,c==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var u=new i(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}t.exports?t.exports=o:this.xorwow=o})(gr,s)})($v);var uG=$v.exports,Dv={exports:{}};Dv.exports;(function(s){(function(e,t,n){function i(a){var l=this;l.next=function(){var c=l.x,h=l.i,d,f;return d=c[h],d^=d>>>7,f=d^d<<24,d=c[h+1&7],f^=d^d>>>10,d=c[h+3&7],f^=d^d>>>3,d=c[h+4&7],f^=d^d<<7,d=c[h+7&7],d=d^d<<13,f^=d^d<<9,c[h]=f,l.i=h+1&7,f};function u(c,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],c.x=f,c.i=0,d=256;d>0;--d)c.next()}u(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var u=new i(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(c.x&&r(c,u),h.state=function(){return r(u,{})}),h}t.exports?t.exports=o:this.xorshift7=o})(gr,s)})(Dv);var cG=Dv.exports,Lv={exports:{}};Lv.exports;(function(s){(function(e,t,n){function i(a){var l=this;l.next=function(){var c=l.w,h=l.X,d=l.i,f,p;return l.w=c=c+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(c^c>>>16)|0};function u(c,h){var d,f,p,x,m,g=[],y=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,y=Math.max(y,h.length)),p=0,x=-32;x<y;++x)h&&(f^=h.charCodeAt((x+32)%h.length)),x===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,x>=0&&(m=m+1640531527|0,d=g[x&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(g[(h&&h.length||0)&127]=-1),p=127,x=4*128;x>0;--x)f=g[p+34&127],d=g[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,g[p]=f^d;c.w=m,c.X=g,c.i=p}u(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var u=new i(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(c.X&&r(c,u),h.state=function(){return r(u,{})}),h}t.exports?t.exports=o:this.xor4096=o})(gr,s)})(Lv);var hG=Lv.exports,Ov={exports:{}};Ov.exports;(function(s){(function(e,t,n){function i(a){var l=this,u="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):u+=a;for(var c=0;c<u.length+20;c++)l.b^=u.charCodeAt(c)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var u=new i(a),c=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var d=u.next()>>>11,f=(u.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=u.next,h.quick=h,c&&(typeof c=="object"&&r(c,u),h.state=function(){return r(u,{})}),h}t.exports?t.exports=o:this.tychei=o})(gr,s)})(Ov);var dG=Ov.exports,dI={exports:{}};const fG={},pG=Object.freeze(Object.defineProperty({__proto__:null,default:fG},Symbol.toStringTag,{value:"Module"})),mG=tB(pG);(function(s){(function(e,t,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),u=n.pow(2,o),c=u*2,h=i-1,d;function f(w,_,T){var A=[];_=_==!0?{entropy:!0}:_||{};var M=g(m(_.entropy?[w,v(t)]:w??y(),3),A),C=new p(A),R=function(){for(var $=C.g(r),W=l,q=0;$<u;)$=($+q)*i,W*=i,q=C.g(1);for(;$>=c;)$/=2,W/=2,q>>>=1;return($+q)/W};return R.int32=function(){return C.g(4)|0},R.quick=function(){return C.g(4)/4294967296},R.double=R,g(v(C.S),t),(_.pass||T||function($,W,q,O){return O&&(O.S&&x(O,C),$.state=function(){return x(C,{})}),q?(n[a]=$,W):$})(R,M,"global"in _?_.global:this==n,_.state)}function p(w){var _,T=w.length,A=this,M=0,C=A.i=A.j=0,R=A.S=[];for(T||(w=[T++]);M<i;)R[M]=M++;for(M=0;M<i;M++)R[M]=R[C=h&C+w[M%T]+(_=R[M])],R[C]=_;(A.g=function($){for(var W,q=0,O=A.i,H=A.j,Z=A.S;$--;)W=Z[O=h&O+1],q=q*i+Z[h&(Z[O]=Z[H=h&H+W])+(Z[H]=W)];return A.i=O,A.j=H,q})(i)}function x(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function m(w,_){var T=[],A=typeof w,M;if(_&&A=="object")for(M in w)try{T.push(m(w[M],_-1))}catch{}return T.length?T:A=="string"?w:w+"\0"}function g(w,_){for(var T=w+"",A,M=0;M<T.length;)_[h&M]=h&(A^=_[h&M]*19)+T.charCodeAt(M++);return v(_)}function y(){try{var w;return d&&(w=d.randomBytes)?w=w(i):(w=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(w)),v(w)}catch{var _=e.navigator,T=_&&_.plugins;return[+new Date,e,T,e.screen,v(t)]}}function v(w){return String.fromCharCode.apply(0,w)}if(g(n.random(),t),s.exports){s.exports=f;try{d=mG}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:gr,[],Math)})(dI);var gG=dI.exports,xG=aG,yG=lG,bG=uG,vG=cG,wG=hG,SG=dG,sl=gG;sl.alea=xG;sl.xor128=yG;sl.xorwow=bG;sl.xorshift7=vG;sl.xor4096=wG;sl.tychei=SG;var Fv=sl;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uv{constructor(e,t,n,i,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=Fv.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let e,t,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*i*a,t=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class _G{constructor(e,t,n,i){this.alpha=e,this.beta=1/t,this.dtype=n;const r=i||Math.random();this.randu=Fv.alea(r.toString()),this.randn=new Uv(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,i,r,o;for(;;){do i=this.randn.nextValue(),o=1+this.c*i;while(o<=0);if(o*=o*o,e=i*i,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),r=this.randu(),r<t||Math.log(r)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class CG{constructor(e=0,t=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Fv.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(s,e,t=1,n="float32",i){if(bi(s),t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);const r=new _G(e,t,n,i),o=tn(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const EG=G({randomGamma_:TG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(s,e=0,t=1,n,i){if(bi(s),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new Uv(e,t,n,!1,i),o=tn(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const fI=G({randomNormal_:AG});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(s,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return fI(s,0,1,e,t)}const RG=G({randomStandardNormal_:IG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s,e=0,t=1,n="float32",i){bi(s);const r=tn(s,n),o=new CG(e,t,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const Bv=G({randomUniform_:MG});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(s,e,t,n){return Bv(s,e,t,"int32",n)}const PG=G({randomUniformInt_:NG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ch(s,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:e,step:t,dtype:n};return K.runKernel(Db,{},i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(s){const t={input:P(s,"input","real")};return K.runKernel(Lb,t)}const hh=G({real_:kG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(s){const t={x:P(s,"x","reciprocal")};return K.runKernel(Ob,t)}const DG=G({reciprocal_:$G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(s){const t={x:P(s,"x","relu")};return K.runKernel(Fb,t)}const Op=G({relu_:LG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OG(s){const t={x:P(s,"x","relu6")};return K.runKernel(Vb,t)}const pI=G({relu6_:OG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(s,e){const n={x:P(s,"x","reverse")},i={dims:e};return K.runKernel(Wb,n,i)}const ja=G({reverse_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s){const e=P(s,"x","reverse");return D(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ja(e,0)}const BG=G({reverse1d_:UG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(s,e){const t=P(s,"x","reverse");return D(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),ja(t,e)}const VG=G({reverse2d_:zG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(s,e){const t=P(s,"x","reverse");return D(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),ja(t,e)}const GG=G({reverse3d_:WG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(s,e){const t=P(s,"x","reverse");return D(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),ja(t,e)}const XG=G({reverse4d_:HG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(s){const t={x:P(s,"x","round")};return K.runKernel(Gb,t)}const mI=G({round_:qG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KG(s){const t={x:P(s,"x","rsqrt","float32")};return K.runKernel(Hb,t)}const jG=G({rsqrt_:KG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(s){const t={x:P(s,"x","selu")};return K.runKernel(Yb,t)}const ZG=G({selu_:YG});function JG(s,e,t,n,i,r=[1,1],o="NHWC"){const a=P(s,"x","separableConv2d"),l=P(e,"depthwiseFilter","separableConv2d"),u=P(t,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=he(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],f=l.shape[3];D(u.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`);const p=Iv(c,l,n,i,o,r),m=kp(p,u,1,"valid",o);return h?he(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const QG=G({separableConv2d_:JG});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eH(s,e){const t=P(s,"x","setdiff1d"),n=P(e,"y","setdiff1d");D(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),D(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);const i=await t.data(),r=await n.data(),o=new Set(r);let a=0;for(let c=0;c<i.length;c++)o.has(i[c])||a++;const l=new mu([a],t.dtype),u=new mu([a],"int32");for(let c=0,h=0;c<i.length;c++)o.has(i[c])||(l.values[h]=i[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]}const tH=eH;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(s){const t={x:P(s,"x","sign")};return K.runKernel(ev,t)}const sH=G({sign_:nH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s){const t={x:P(s,"x","sin","float32")};return K.runKernel(Jb,t)}const rH=G({sin_:iH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s){const t={x:P(s,"x","sinh")};return K.runKernel(Qb,t)}const aH=G({sinh_:oH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(s,e,t){const n=P(s,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Nt(n,[e],[t])}const uH=G({slice1d_:lH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s,e,t){const n=P(s,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Nt(n,e,t)}const hH=G({slice2d_:cH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s,e,t){const n=P(s,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Nt(n,e,t)}const fH=G({slice3d_:dH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(s,e,t){const n=P(s,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Nt(n,e,t)}const mH=G({slice4d_:pH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(s,e=-1){const t=P(s,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const n={logits:t},i={dim:e};return K.runKernel(av,n,i)}const xH=G({softmax_:gH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s){D(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const e={input:s};return K.runKernel(z0,e)}const zv=G({fft_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s){D(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const e={input:s};return K.runKernel(Z0,e)}const Lf=G({ifft_:bH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(s){const e=s.shape[s.shape.length-1],t=s.size/e;let n;if(e<=2){const i=he(s,[t,e]);n=Lf(i)}else{const i=[t,2*(e-1)],r=he(hh(s),[t,e]),o=he(Lp(s),[t,e]),a=ja(Nt(r,[0,1],[t,e-2]),1),l=we(ja(Nt(o,[0,1],[t,e-2]),1),Pt(-1)),u=ts([r,a],1),c=ts([o,l],1),h=he(zo(u,c),[i[0],i[1]]);n=Lf(h)}if(n=hh(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=he(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const gI=G({irfft_:vH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,e,t=0){const i={x:P(s,"x","split")},r={numOrSizeSplits:e,axis:t};return K.runKernel(ov,i,r)}const dh=G({split_:wH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s,e){D(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let t=s.shape[s.shape.length-1];const n=s.size/t;let i;if(e!=null&&e<t){const p=s.shape.map(m=>0),x=s.shape.map(m=>m);x[s.shape.length-1]=e,i=Nt(s,p,x),t=e}else if(e!=null&&e>t){const p=s.shape.map(x=>x);p[s.shape.length-1]=e-t,i=ts([s,io(p)],s.shape.length-1),t=e}else i=s;const r=yi(i),o=he(zo(i,r),[n,t]),a=zv(o),l=Math.floor(t/2)+1,u=hh(a),c=Lp(a),h=dh(u,[l,t-l],u.shape.length-1),d=dh(c,[l,t-l],c.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,he(zo(h[0],d[0]),f)}const Vv=G({rfft_:SH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(s,e){let t=P(s,"a","squaredDifference"),n=P(e,"b","squaredDifference");[t,n]=$n(t,n),It(t.shape,n.shape);const i={a:t,b:n},r={};return K.runKernel(hv,i,r)}const xI=G({squaredDifference_:_H});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(s,e){const t=P(s,"x","squeeze","string_or_numeric");return he(t,jo(t.shape,e).newShape)}const nn=G({squeeze_:CH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s,e=0){const t=kf(s,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const n=t,i={axis:e};return K.runKernel(Mb,n,i)}const ro=G({stack_:TH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(s,e=0){const n={x:P(s,"x","step")},i={alpha:e};return K.runKernel(Sv,n,i)}const yI=G({step_:EH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(s,e,t,n,i=0,r=0,o=0,a=0,l=0){const c={x:P(s,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return K.runKernel(dv,c,h)}const IH=G({stridedSlice_:AH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(s){const t={x:P(s,"x","tan","float32")};return K.runKernel(mv,t)}const MH=G({tan_:RH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(s,e){ku(s);const t=Yo(s,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Zo(s,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(s,e,t){if(ku(s),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=Yo(s,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Zo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(s,e,t){if(ku(s),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const n=Yo(s,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Zo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s,e,t){if(ku(s),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const n=Yo(s,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Zo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(s,e,t){if(ku(s),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const n=Yo(s,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Zo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(s,e,t){if(ku(s),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const n=Yo(s,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,Zo(s,e,n,t)}function vI(s,e,t){const n=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(t.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(t.rank-i))throw new Error(r+` Output shape length < ${n+(t.rank-i)}`);if(t.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(t.shape[o]!==e.shape[o])throw new Error(r+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-i;++o)if(t.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${t.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function Wv(s,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}vI(t,e,s)}function il(s,e,t){const n=e.shape.length,i=n>1?e.shape[n-1]:1,r=t.length;let o=1;for(let h=i;h<r;++h)o*=t[h];const a=i<1?1:i,l=ae(e.shape)/a,u=[...kn(t.slice(0,i)),1],c=ae(t);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:u,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(s,e,t){const n=P(s,"tensor","tensorScatterupdate"),i=P(e,"indices","tensorScatterupdate","int32"),r=P(t,"updates","tensorScatterupdate");if(Wv(r,i,n.shape),n.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${r.dtype}.`);const o={tensor:n,indices:i,updates:r},a={};return K.runKernel(qb,o,a)}const DH=G({tensorScatterUpdate_:$H});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s,e=1,t=!0){const n=P(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const r={x:n},o={k:e,sorted:t},[a,l]=K.runKernel(xv,r,o);return{values:a,indices:l}}const OH=G({topk_:LH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(s,e=0,t=1,n,i){if(bi(s),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Uv(e,t,n,!0,i),o=tn(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const UH=G({truncatedNormal_:FH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(s,e=0){const t=P(s,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");const n={x:t},i={axis:e},[r,o]=K.runKernel(tA,n,i);return{values:r,indices:o}}const zH=G({unique_:BH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(s,e,t){const n=P(s,"x","unsortedSegmentSum"),i=P(e,"segmentIds","unsortedSegmentSum","int32");D(fu(t),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:t};return K.runKernel(vv,r,o)}const WH=G({unsortedSegmentSum_:VH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(s,e=0){const t=P(s,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const n={value:t},i={axis:e};return K.runKernel(bv,n,i)}const rl=G({unstack_:GH});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(s,e){return Nv(s,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(s,e=!0,t,n){return K.makeVariable(s,e,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(s,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const n=tn(s,"int32"),i=tn([t.length,s.length],"int32");for(let r=0;r<t.length;r++){const o=n.indexToLoc(t[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qH(s){const e=P(s,"condition","whereAsync","bool"),t=await e.data(),n=wI(e.shape,t);return s!==e&&e.dispose(),n}const SI=qH;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KH(s,e,t){const n=P(s,"tensor","boolMask"),i=P(e,"mask","boolMask","bool"),r=t??0,o=i.rank,a=n.shape;D(o>0,()=>"mask cannot be scalar"),ai(a.slice(r,r+o),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let x=r;x<r+o;x++)l*=a[x];const u=a.slice(0,r).concat([l],a.slice(r+o)),c=he(n,u),h=he(i,[-1]),d=await SI(h),f=nn(d,[1]),p=JA(c,f,r);return s!==n&&n.dispose(),e!==i&&i.dispose(),f.dispose(),c.dispose(),h.dispose(),d.dispose(),p}const jH=KH;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(s,e,t){const n=P(s,"x","transpose");if(e==null&&(e=n.shape.map((o,a)=>a).reverse()),D(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(o=>{D(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:e};return n.dtype==="complex64"?ht(()=>{let o=hh(n),a=Lp(n);return o=K.runKernel(Ac,{x:o},r),a=K.runKernel(Ac,{x:a},r),t&&(a=yr(a)),zo(o,a)}):K.runKernel(Ac,i,r)}const Tx=G({transpose_:YH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(s,e,t,n,i=!0){const r=P(s,"v","movingAverage"),o=P(e,"x","movingAverage"),a=P(t,"decay","movingAverage");wB(r,o),D(en(r.shape,o.shape),()=>"Shape mismatch in v and x");const l=Pt(1),u=St(l,a);let c=we(St(o,r),u);if(i){D(n!=null,()=>"When using zeroDebias: true, step is required.");const h=P(n,"step","movingAverage");c=Dt(c,St(l,ah(a,h)))}return Je(r,c)}const JH=G({movingAverage_:ZH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(s,e,t){bi(t);const n=P(s,"indices","scatterND","int32"),i=P(e,"updates","scatterND");Wv(i,n,t);const r={indices:n,updates:i},o={shape:t};return K.runKernel(Xb,r,o)}const e5=G({scatterND_:QH});function t5(s,e,t,n){if(s.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${s.shape}.`);const i=s.rank>0?s.shape[0]:1,r=s.rank>1?s.shape[1]:1;if(t.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${r}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===i))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${i}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(s,e,t,n=0){bi(t);const i=P(s,"sparseIndices","sparseToDense","int32"),r=P(e,"sparseValues","sparseToDense","string_or_numeric"),o=P(n,"defaultValue","sparseToDense",r.dtype);t5(i,r,t,o);const a={sparseIndices:i,sparseValues:r,defaultValue:o},l={outputShape:t};return K.runKernel(cv,a,l)}const s5=G({sparseToDense_:n5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(s,e){const t=P(e,"indices","gatherND","int32"),i={params:P(s,"x","gatherND","string_or_numeric"),indices:t};return K.runKernel(K0,i)}const r5=G({gatherND_:i5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(s,e){if(e==null)return s.shape.slice();if(en(s.shape,e))return e;if(s.shape.length===e.length){const t=[];for(let n=0;n<s.shape.length;n++)e[n]==null&&s.shape[n]!=null?t.push(s.shape[n]):t.push(e[n]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(s,e,t,n){const i=P(s,"x","dropout");if(D(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return s instanceof Nn?i.clone():i;const r=o5(i,t),o=1-e,a=Dt(ZA(Je(Bv(r,0,1,"float32",n),o)),o);return we(i,a)}const l5=G({dropout_:a5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function Gv(s,e,t){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=e-t*Math.cos(o)}return ps(i,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function u5(s,e,t=1){const n=P(s,"predictions","inTopK"),i=P(e,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${i.rank}`),ai(n.shape.slice(0,n.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=n.shape[n.shape.length-1];D(t>0&&t<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${t}`);const o=await n.data(),a=await i.data(),[l,u]=[o.length/r,r],c=Cr("bool",l);for(let h=0;h<l;h++){const d=h*u,f=o.subarray(d,d+u),p=[];for(let x=0;x<f.length;x++)p.push({value:f[x],index:x});p.sort((x,m)=>m.value-x.value),c[h]=0;for(let x=0;x<t;x++)if(p[x].index===a[h]){c[h]=1;break}}return s!==n&&n.dispose(),e!==i&&i.dispose(),xr(c,i.shape,"bool")}const c5=u5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(s,e,t,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=he(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=e;l.rank===3&&(l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=r==="NHWC"?a.shape[3]:a.shape[1],c=r==="NHWC"?l.shape[3]:l.shape[1];D(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),D(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),Ui("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:t};return K.runKernel(x0,h,d)}const d5=G({conv2DBackpropFilter_:h5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(s,e,t){if(t==null||t==="linear")return s;if(t==="relu")return we(s,yI(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Up(s,e){let t=e;const n=HA(s.shape,e.shape);return n.length>0&&(t=yn(t,n)),he(t,s.shape)}function Bp(s,e,t,n){if(e==="linear")return s;if(e==="relu")return Op(s);if(e==="elu")return qA(s);if(e==="relu6")return pI(s);if(e==="prelu")return hI(s,t);if(e==="leakyrelu")return eI(s,n);if(e==="sigmoid")return Gr(s);throw new Error(`Unknown fused activation ${e}.`)}const zp=(s,e)=>!(s>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5({x:s,filter:e,strides:t,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",zp(K.state.gradientDepth,l)===!1){D(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=kp(s,e,t,n,i,r,o);return a!=null&&(T=Je(T,a)),Bp(T,l,u,c)}const h=P(s,"x","conv2d","float32"),d=P(e,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=he(h,[1,h.shape[0],h.shape[1],h.shape[2]])),D(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),D(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ui("fused conv2d",n,o);const x=i==="NHWC"?f.shape[3]:f.shape[1];D(d.shape[2]===x,()=>`Error in conv2d: depth of input (${x}) must match input depth for filter ${d.shape[2]}.`),D(Ns(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const m=Gn(f.shape,d.shape,t,r,n,o);let g;a!=null&&(g=P(a,"bias","fused conv2d"),[g]=$n(g,h),i==="NHWC"?It(m.outShape,g.shape):(D(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),D(g.shape.length===0||g.shape[0]===m.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let y;if(u!=null){const T=u.shape;if(D(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`),T.length===1)D(T[0]===1||T[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${m.outChannels}).`);else if(T.length===3)try{It(T,m.outShape)}catch{const M=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(M)}y=P(u,"prelu weights","fused conv2d")}const v=(T,A)=>{D(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[M,C,R,$]=A,W=Fp(T,R,l);D(oh(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const q=GA(C.shape,W,M,t,n),O=d5(C,W,M.shape,t,n),H=[q,O];if($!=null){const Z=Up($,W);H.push(Z)}return H},w={x:f,filter:d,bias:g,preluActivationWeights:y},_={strides:t,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return a==null?so((A,M,C)=>{let R=K.runKernel(Af,w,_);return C([M,A,R]),p&&(R=he(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:v}})(f,d):so((A,M,C,R)=>{let $=K.runKernel(Af,w,_);return R([M,A,$,C]),p&&($=he($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:v}})(f,d,g)}const p5=G({fusedConv2d_:f5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m5(s,e,t,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=he(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=e;l.rank===3&&(l=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:a,dy:l},c={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:t};return K.runKernel(R0,u,c)}const g5=G({depthwiseConv2dNativeBackpropFilter_:m5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(s,e,t,n,i,r=[1,1],o){let a=e,l=!1;e.rank===3&&(l=!0,a=he(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:a,filter:t},c={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=K.runKernel(M0,u,c);return l?he(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const y5=G({depthwiseConv2dNativeBackpropInput_:x5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5({x:s,filter:e,strides:t,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(zp(K.state.gradientDepth,l)===!1){let _=Iv(s,e,t,n,i,r,o);return a!=null&&(_=Je(_,a)),Bp(_,l,u,c)}const h=P(s,"x","depthwiseConv2d","float32"),d=P(e,"filter","depthwiseConv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=he(h,[1,h.shape[0],h.shape[1],h.shape[2]])),D(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),D(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),D(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),r==null&&(r=[1,1]),D(Ns(t,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),Ui("fused depthwiseConv2d",n,o);const x=Gn(f.shape,d.shape,t,r,n,o,!0);let m;a!=null&&(m=P(a,"bias","fused conv2d"),[m]=$n(m,h),It(x.outShape,m.shape));let g;u!=null&&(g=P(u,"prelu weights","fused depthwiseConv2d"));const y=(_,T)=>{D(oh(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[A,M,C,R]=T,$=Fp(_,C,l),W=y5(M.shape,$,A,t,n,r,o),q=g5(M,$,A.shape,t,n,r,o);if(R!=null){const O=Up(m,$);return[W,q,O]}return[W,q]},v={x:f,filter:d,bias:m,preluActivationWeights:g},w={strides:t,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return a==null?so((T,A,M)=>{let C=K.runKernel(If,v,w);return M([A,T,C]),p&&(C=he(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:y}})(f,d):so((T,A,M,C)=>{let R=K.runKernel(If,v,w);return C([A,T,R,M]),p&&(R=he(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:y}})(f,d,m)}const v5=G({fusedDepthwiseConv2d_:b5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5({a:s,b:e,transposeA:t=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(zp(K.state.gradientDepth,r)===!1){let $=sn(s,e,t,n);return i!=null&&($=Je($,i)),Bp($,r,o,a)}let l=P(s,"a","fused matMul"),u=P(e,"b","fused matMul");[l,u]=$n(l,u);const c=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=l.shape.slice(0,-2),x=u.shape.slice(0,-2),m=ae(p),g=ae(x);D(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);const v=It(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,f]),w=t?he(l,[m,c,d]):he(l,[m,d,c]),_=n?he(u,[g,f,h]):he(u,[g,h,f]);let T;i!=null&&(T=P(i,"bias","fused matMul"),[T]=$n(T,l),It(v,T.shape));let A;o!=null&&(A=P(o,"prelu weights","fused matMul"));const M=($,W)=>{const[q,O,H,Z]=W,ee=Fp(he($,H.shape),H,r);let ce,ne;if(!t&&!n?(ce=sn(ee,O,!1,!0),ne=sn(q,ee,!0,!1)):!t&&n?(ce=sn(ee,O,!1,!1),ne=sn(ee,q,!0,!1)):t&&!n?(ce=sn(O,ee,!1,!0),ne=sn(q,ee,!1,!1)):(ce=sn(O,ee,!0,!0),ne=sn(ee,q,!0,!0)),i!=null){const fe=Up(Z,ee);return[ce,ne,fe]}else return[ce,ne]},C={a:w,b:_,bias:T,preluActivationWeights:A},R={transposeA:t,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?so((W,q,O)=>{const H=K.runKernel(Ef,C,R);return O([W,q,H]),{value:he(H,v),gradFunc:M}})(w,_):so((W,q,O,H)=>{const Z=K.runKernel(Ef,C,R);return H([W,q,Z,O]),{value:he(Z,v),gradFunc:M}})(w,_,T)}const S5=G({fusedMatMul_:w5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5=Object.freeze(Object.defineProperty({__proto__:null,conv2d:p5,depthwiseConv2d:v5,matMul:S5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(s){return Gv(s,.54,.46)}const T5=G({hammingWindow_:C5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(s){return Gv(s,.5,.5)}const CI=G({hannWindow_:E5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(s,e,t,n=!1,i=0){let r=0;const o=[];for(;r+e<=s.size;)o.push(Nt(s,r,e)),r+=t;if(n)for(;r<s.size;){const a=r+e-s.size,l=ts([Nt(s,r,e-a),Oh([a],i)]);o.push(l),r+=t}return o.length===0?$i([],[0,e]):he(ts(o),[o.length,e])}const TI=G({frame_:A5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(s,e,t,n,i=CI){n==null&&(n=_I(e));const r=TI(s,e,t),o=we(r,i(e));return Vv(o,n)}const R5=G({stft_:I5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(s,e,t,n,i="bilinear",r=0){const o=P(s,"image","cropAndResize"),a=P(e,"boxes","cropAndResize","float32"),l=P(t,"boxInd","cropAndResize","int32"),u=a.shape[0];D(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const c={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return K.runKernel(T0,c,h)}const N5=G({cropAndResize_:M5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(s){const e=P(s,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return K.runKernel(W0,t,{})}const k5=G({flipLeftRight_:P5});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(s){const e=P(s,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(e.rank);return i.fill(1,0,t),i[t]=3,Rc(e,i)}const D5=G({grayscaleToRGB_:$5});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L5(s){const e=P(s,"image","RGBToGrayscale"),t=e.rank-1,n=e.shape[t];D(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),D(n===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`);const i=e.dtype,r=hn(e,"float32"),o=ps([.2989,.587,.114]);let a;switch(e.rank){case 2:a=jl("ij,j->i",r,o);break;case 3:a=jl("ijk,k->ij",r,o);break;case 4:a=jl("ijkl,l->ijk",r,o);break;case 5:a=jl("ijklm,m->ijkl",r,o);break;case 6:a=jl("ijklmn,n->ijklm",r,o);break;default:throw new Error("Not a valid tensor rank.")}return a=pi(a,-1),hn(a,i)}const O5=G({rgbToGrayscale_:L5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(s,e,t=0,n=.5){const i=P(s,"image","rotateWithOffset","float32");D(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:e,fillValue:t,center:n};return K.runKernel(_v,r,o)}const U5=G({rotateWithOffset_:F5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lu(s,e,t,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return t=Math.min(t,o),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),D(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),D(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY){const r=P(s,"boxes","nonMaxSuppression","float32"),o=P(e,"scores","nonMaxSuppression","float32"),a=Lu(r,o,t,n,i);t=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:n,scoreThreshold:i};return K.runKernel(Eb,{boxes:r,scores:o},l)}const z5=G({nonMaxSuppression_:B5});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(s,e,t){const n=W5(s,e,t),i=n<0?-(n+1):n;s.splice(i,0,e)}function W5(s,e,t){return G5(s,e,t)}function G5(s,e,t){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=t(e,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hv(s,e,t,n,i){return qv(s,e,t,n,i,0)}function EI(s,e,t,n,i,r){return qv(s,e,t,n,i,0,!1,r,!0)}function Xv(s,e,t,n,i,r){return qv(s,e,t,n,i,r,!0)}function qv(s,e,t,n,i,r,o=!1,a=!1,l=!1){const u=[];for(let m=0;m<e.length;m++)e[m]>i&&u.push({score:e[m],boxIndex:m,suppressBeginIndex:0});u.sort(u_);const c=r>0?-.5/r:0,h=[],d=[];for(;h.length<t&&u.length>0;){const m=u.pop(),{score:g,boxIndex:y,suppressBeginIndex:v}=m;if(g<i)break;let w=!1;for(let _=h.length-1;_>=v;--_){const T=H5(s,y,h[_]);if(T>=n){w=!0;break}if(m.score=m.score*X5(n,c,T),m.score<=i)break}m.suppressBeginIndex=h.length,w||(m.score===g?(h.push(y),d.push(m.score)):m.score>i&&V5(u,m,u_))}const f=h.length,p=t-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const x={selectedIndices:h};return o&&(x.selectedScores=d),l&&(x.validOutputs=f),x}function H5(s,e,t){const n=s.subarray(e*4,e*4+4),i=s.subarray(t*4,t*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(i[0],i[2]),c=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-u)*(d-c);if(f<=0||p<=0)return 0;const x=Math.max(r,u),m=Math.max(o,c),g=Math.min(a,h),y=Math.min(l,d),v=Math.max(g-x,0)*Math.max(y-m,0);return v/(f+p-v)}function X5(s,e,t){const n=Math.exp(e*t*t);return t<=s?n:0}function u_(s,e){return s.score-e.score||s.score===e.score&&e.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function q5(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY){const r=P(s,"boxes","nonMaxSuppressionAsync"),o=P(e,"scores","nonMaxSuppressionAsync"),a=Lu(r,o,t,n,i);t=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=Hv(u,c,t,n,i);return r!==s&&r.dispose(),o!==e&&o.dispose(),ps(h,"int32")}const K5=q5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=P(s,"boxes","nonMaxSuppression"),a=P(e,"scores","nonMaxSuppression"),l=Lu(o,a,t,n,i,r);t=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const u={boxes:o,scores:a},c={maxOutputSize:t,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=K.runKernel(Ab,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const Y5=G({nonMaxSuppressionWithScore_:j5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Z5(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=P(s,"boxes","nonMaxSuppressionAsync"),a=P(e,"scores","nonMaxSuppressionAsync"),l=Lu(o,a,t,n,i,r);t=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const u=await Promise.all([o.data(),a.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:f}=Xv(c,h,t,n,i,r);return o!==s&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:ps(d,"int32"),selectedScores:ps(f)}}const J5=Z5;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=P(s,"boxes","nonMaxSuppression"),a=P(e,"scores","nonMaxSuppression"),l=Lu(o,a,t,n,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:r},p=K.runKernel(WE,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const e6=G({nonMaxSuppressionPadded_:Q5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function t6(s,e,t,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=P(s,"boxes","nonMaxSuppressionAsync"),a=P(e,"scores","nonMaxSuppressionAsync"),l=Lu(o,a,t,n,i,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:x}=EI(d,f,u,c,h,r);return o!==s&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:ps(p,"int32"),validOutputs:Pt(x,"int32")}}const n6=t6;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(s,e,t=!1,n=!1){const i=P(s,"images","resizeBilinear");D(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=he(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:n,size:e},u=K.runKernel(zb,a,l);return o?he(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const i6=G({resizeBilinear_:s6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(s,e,t=!1,n=!1){const i=P(s,"images","resizeNearestNeighbor");D(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=he(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:t,halfPixelCenters:n,size:e},u=K.runKernel(Bb,a,l);return o?he(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const o6=G({resizeNearestNeighbor_:r6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(s,e="binary",t=!1,n=.5){const i=P(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let u=we(ps([n]),255),c,h,d,f;if(D(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),D(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),D(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),i.shape[2]===3){[c,h,d]=dh(i,[1,1,1],-1);const m=we(c,r),g=we(h,o),y=we(d,a);f=Je(Je(m,g),y)}else f=s;if(e==="otsu"){const m=VA(hn(mI(f),"int32"),xr([]),256);u=l6(m,l)}const p=t?Mv(f,u):Dp(f,u);return hn(we(p,255),"int32")}function l6(s,e){let t=ps([-1]),n=ps([0]),i=ps([0]),r,o,a,l,u,c;for(let h=0;h<s.size-1;h++){r=Nt(s,0,h+1),o=Nt(s,h+1),u=Dt(yn(r),e),c=Dt(yn(o),e);const d=yn(we(r,ch(0,r.size)));a=Dt(d,yn(r));const f=Oh(o.shape,r.size),p=Je(ch(0,o.size),f),x=we(o,p);l=Dt(yn(x),yn(o));const m=St(a,l),g=St(a,l),y=we(u,c);i=we(we(y,m),g);const v=Dp(i,n);n=Oo(v,i,n),t=Oo(v,ps([h]),t)}return t}const u6=G({threshold_:a6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(s,e,t="nearest",n="constant",i=0,r){const o=P(s,"image","transform","float32"),a=P(e,"transforms","transform","float32");D(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),D(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},u={interpolation:t,fillMode:n,fillValue:i,outputShape:r};return K.runKernel(yv,l,u)}const h6=G({transform_:c6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(s,e,t){const n=P(s,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);let a,l;typeof e=="number"?(D(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),a=P(e<0?r:e,"numLower","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Oo(Cx(e,0),r,uh(e,r))),typeof t=="number"?(D(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),D(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),l=P(t<0?o:t,"numUpper","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Oo(Cx(t,0),o,uh(t,o)));const u=he(ch(0,r,1,"int32"),[-1,1]),c=ch(0,o,1,"int32"),h=St(u,c),d=$f(Mv(h,a),QA(h,yr(l))),f=io([r,o],n.dtype);return he(ro(rl(he(n,[-1,r,o])).map(p=>Oo(d,p,f))),i)}const f6=G({bandPart_:d6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(s){let e;if(Array.isArray(s)){e=!1,D(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)D(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else e=!0,s=dh(s,s.shape[0],0).map(i=>nn(i,[0]));D(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const t=[],n=s;for(let i=0;i<s.length;++i)t.push(K.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=we(yn(we(t[o],r)),t[o]);r=St(r,a)}return Dt(r,$p(r,"euclidean"))}));return e?ro(t,0):t}const m6=G({gramSchmidt_:p6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(s,e=!1){if(D(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return c_(s,e);{const t=s.shape.slice(0,s.shape.length-2).reduce((l,u)=>l*u),n=rl(he(s,[t,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[u,c]=c_(l,e);i.push(u),r.push(c)});const o=he(ro(i,0),s.shape),a=he(ro(r,0),s.shape);return[o,a]}}function c_(s,e=!1){return K.tidy(()=>{D(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const t=s.shape[0],n=s.shape[1];let i=YA(t),r=Lo(s);const o=$i([[1]],[1,1]);let a=Lo(o);const l=t>=n?n:t;for(let u=0;u<l;++u){const c=r,h=a,d=i;[a,r,i]=K.tidy(()=>{const f=Nt(r,[u,u],[t-u,1]),p=$p(f),x=Nt(r,[u,u],[1,1]),m=Oo(Dp(x,0),$i([[-1]]),$i([[1]])),g=St(x,we(m,p)),y=Dt(f,g);y.shape[0]===1?a=Lo(o):a=ts([o,Nt(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const v=yr(Dt(sn(m,g),p)),w=Nt(r,[u,0],[t-u,n]),_=we(v,a),T=Tx(a);if(u===0)r=St(w,sn(_,sn(T,w)));else{const C=St(w,sn(_,sn(T,w)));r=ts([Nt(r,[0,0],[u,n]),C],0)}const A=Tx(_),M=Nt(i,[0,u],[t,i.shape[1]-u]);if(u===0)i=St(M,sn(sn(M,a),A));else{const C=St(M,sn(sn(M,a),A));i=ts([Nt(i,[0,0],[t,u]),C],1)}return[a,r,i]}),Jt([c,h,d])}return!e&&t>n&&(i=Nt(i,[0,0],[t,n]),r=Nt(r,[0,0],[n,n])),[i,r]})}const x6=G({qr_:g6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Os;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Os||(Os={}));function y6(s,e,t=Os.SUM_BY_NONZERO_WEIGHTS){const n=P(s,"losses","computeWeightedLoss");let i=null;e!=null&&(i=P(e,"weights","computeWeightedLoss"));const r=i==null?n:we(n,i);if(t===Os.NONE)return r;if(t===Os.SUM)return yn(r);if(t===Os.MEAN){if(i==null)return Df(r);{const o=n.size/i.size,a=Dt(yn(r),yn(i));return o>1?Dt(a,Pt(o)):a}}if(t===Os.SUM_BY_NONZERO_WEIGHTS){if(i==null)return Dt(yn(r),Pt(n.size));{const o=we(i,Ma(n.shape)),a=hn(yn(uI(o,Pt(0))),"float32");return Dt(yn(r),a)}}throw Error(`Unknown reduction: ${t}`)}const ho=G({computeWeightedLoss_:y6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(s,e,t,n=Os.SUM_BY_NONZERO_WEIGHTS){const i=P(s,"labels","absoluteDifference"),r=P(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=P(t,"weights","absoluteDifference")),ai(i.shape,r.shape,"Error in absoluteDifference: ");const a=fi(St(i,r));return ho(a,o,n)}const v6=G({absoluteDifference_:b6});function w6(s,e,t,n,i=Os.SUM_BY_NONZERO_WEIGHTS){const r=P(s,"labels","cosineDistance"),o=P(e,"predictions","cosineDistance");let a=null;n!=null&&(a=P(n,"weights","cosineDistance")),ai(r.shape,o.shape,"Error in cosineDistance: ");const l=Pt(1),u=St(l,yn(we(r,o),t,!0));return ho(u,a,i)}const S6=G({cosineDistance_:w6});function _6(s,e,t,n=Os.SUM_BY_NONZERO_WEIGHTS){let i=P(s,"labels","hingeLoss");const r=P(e,"predictions","hingeLoss");let o=null;t!=null&&(o=P(t,"weights","hingeLoss")),ai(i.shape,r.shape,"Error in hingeLoss: ");const a=Pt(1);i=St(we(Pt(2),i),a);const l=Op(St(a,we(i,r)));return ho(l,o,n)}const C6=G({hingeLoss_:_6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(s,e,t,n=1,i=Os.SUM_BY_NONZERO_WEIGHTS){const r=P(s,"labels","huberLoss"),o=P(e,"predictions","huberLoss");let a=null;t!=null&&(a=P(t,"weights","huberLoss")),ai(r.shape,o.shape,"Error in huberLoss: ");const l=Pt(n),u=fi(St(o,r)),c=uh(u,l),h=St(u,c),d=Je(we(Pt(.5),ki(c)),we(l,h));return ho(d,a,i)}const E6=G({huberLoss_:T6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(s,e,t,n=1e-7,i=Os.SUM_BY_NONZERO_WEIGHTS){const r=P(s,"labels","logLoss"),o=P(e,"predictions","logLoss");let a=null;t!=null&&(a=P(t,"weights","logLoss")),ai(r.shape,o.shape,"Error in logLoss: ");const l=Pt(1),u=Pt(n),c=yr(we(r,lh(Je(o,u)))),h=we(St(l,r),lh(Je(St(l,o),u))),d=St(c,h);return ho(d,a,i)}const I6=G({logLoss_:A6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(s,e,t,n=Os.SUM_BY_NONZERO_WEIGHTS){const i=P(s,"labels","meanSquaredError"),r=P(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=P(t,"weights","meanSquaredError")),ai(i.shape,r.shape,"Error in meanSquaredError: ");const a=xI(i,r);return ho(a,o,n)}const M6=G({meanSquaredError_:R6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(s,e){const t=P(s,"labels","sigmoidCrossEntropyWithLogits"),n=P(e,"logits","sigmoidCrossEntropyWithLogits");ai(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Op(n),r=we(n,t),o=tI(no(yr(fi(n))));return Je(St(i,r),o)}function P6(s,e,t,n=0,i=Os.SUM_BY_NONZERO_WEIGHTS){let r=P(s,"multiClassLabels","sigmoidCrossEntropy");const o=P(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=P(t,"weights","sigmoidCrossEntropy")),ai(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const u=Pt(n),c=Pt(1),h=Pt(.5);r=Je(we(r,St(c,u)),we(h,u))}const l=N6(r,o);return ho(l,a,i)}const k6=G({sigmoidCrossEntropy_:P6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(s,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return so((i,r,o)=>{const l=sI(r,[t],!0),u=St(hn(r,"float32"),l);o([i,u]);const c=yr(we(u,i));return{value:yn(c,[t]),gradFunc:(f,p)=>{const[x,m]=p,g=ui(f.shape,[t]);return[we(he(f,g),St(hn(x,"float32"),no(m))),we(he(f,g),St(no(m),hn(x,"float32")))]}}})(s,e)}function D6(s,e,t,n=0,i=Os.SUM_BY_NONZERO_WEIGHTS){let r=P(s,"onehotLabels","softmaxCrossEntropy");const o=P(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=P(t,"weights","softmaxCrossEntropy")),ai(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const u=Pt(n),c=Pt(1),h=Pt(r.shape[1]);r=Je(we(r,St(c,u)),Dt(u,h))}const l=$6(r,o);return ho(l,a,i)}const L6=G({softmaxCrossEntropy_:D6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(s,e,t,n){const i=P(s,"indices","sparseFillEmptyRows","int32"),r=P(e,"values","sparseFillEmptyRows"),o=P(t,"denseShape","sparseFillEmptyRows","int32"),a=P(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},u=K.runKernel(jE,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const F6=G({sparseFillEmptyRows_:O6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(s,e,t){const n=P(s,"inputIndices","sparseReshape","int32"),i=P(e,"inputShape","sparseReshape","int32"),r=P(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=K.runKernel(YE,o);return{outputIndices:a[0],outputShape:a[1]}}const B6=G({sparseReshape_:U6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(s,e,t){const n=P(s,"data","sparseSegmentMean"),i=P(e,"indices","sparseSegmentMean","int32"),r=P(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return K.runKernel(lv,o)}const V6=G({sparseSegmentMean_:z6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(s,e,t){const n=P(s,"data","sparseSegmentSum"),i=P(e,"indices","sparseSegmentSum","int32"),r=P(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return K.runKernel(uv,o)}const G6=G({sparseSegmentSum_:W6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(s,e,t,n,i,r,o,a){const l=P(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=P(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:u},d=K.runKernel(fv,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const X6=G({stringNGrams_:H6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(s,e,t=!0){const n=P(s,"input","stringSplit","string"),i=P(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:t},o={input:n,delimiter:i},a=K.runKernel(QE,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const K6=G({stringSplit_:q6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(s,e){const t=P(s,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const i={input:t};return K.runKernel(eA,i,n)}const Y6=G({stringToHashBucketFast_:j6});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(s,e,t,n=!0){const i=P(s,"input","staticRegexReplace","string"),r={pattern:e,rewrite:t,replaceGlobal:n};return K.runKernel(JE,{x:i},r)}const J6=G({staticRegexReplace_:Z6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={fft:zv,ifft:Lf,rfft:Vv,irfft:gI},eX={hammingWindow:T5,hannWindow:CI,frame:TI,stft:R5},La={flipLeftRight:k5,grayscaleToRGB:D5,resizeNearestNeighbor:o6,resizeBilinear:i6,rgbToGrayscale:O5,rotateWithOffset:U5,cropAndResize:N5,nonMaxSuppression:z5,nonMaxSuppressionAsync:K5,nonMaxSuppressionWithScore:Y5,nonMaxSuppressionWithScoreAsync:J5,nonMaxSuppressionPadded:e6,nonMaxSuppressionPaddedAsync:n6,threshold:u6,transform:h6},tX={bandPart:f6,gramSchmidt:m6,qr:x6},nX={absoluteDifference:v6,computeWeightedLoss:ho,cosineDistance:S6,hingeLoss:C6,huberLoss:E6,logLoss:I6,meanSquaredError:M6,sigmoidCrossEntropy:k6,softmaxCrossEntropy:L6},sX={sparseFillEmptyRows:F6,sparseReshape:B6,sparseSegmentMean:V6,sparseSegmentSum:G6},iX={stringNGrams:X6,stringSplit:K6,stringToHashBucketFast:Y6,staticRegexReplace:J6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=new Map,oX=new Map;class aX{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class va{constructor(){this.classNameMap={}}static getMap(){return va.instance==null&&(va.instance=new va),va.instance}static register(e){va.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function lX(s,e,t){D(s.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),D(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=s.className);const n=t,i=e+">"+n;return va.register(s),rX.set(i,s),oX.set(s,i),s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ol extends aX{minimize(e,t=!1,n){const{value:i,grads:r}=this.computeGradients(e,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return Jt(r),t?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return j4(e,t)}dispose(){this.iterations_!=null&&Jt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Pt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ol,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uX extends ol{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,i)=>{const r=K.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:ht(()=>yi(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:ht(()=>yi(r).variable(o))});const a=Array.isArray(e)?e[i].tensor:e[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,u=this.accumulatedUpdates[i].variable;ht(()=>{const c=Je(we(l,this.rho),we(ki(a),1-this.rho)),h=we(Dt(to(Je(u,this.epsilon)),to(Je(l,this.epsilon))),a),d=Je(we(u,this.rho),we(ki(h),1-this.rho));l.assign(c),u.assign(d);const f=Je(we(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Jt(this.accumulatedGrads.map(e=>e.variable)),Jt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cX extends ol{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,i)=>{const r=K.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:ht(()=>Oh(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[i].tensor:e[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;ht(()=>{const l=Je(a,ki(o));a.assign(l);const u=Je(we(Dt(o,to(Je(l,K.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Jt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hX extends ol{static get className(){return"Adam"}constructor(e,t,n,i=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ht(()=>{this.accBeta1=Pt(t).variable(),this.accBeta2=Pt(n).variable()}),i==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);ht(()=>{const n=St(1,this.accBeta1),i=St(1,this.accBeta2);t.forEach((r,o)=>{const a=K.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:ht(()=>yi(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:ht(()=>yi(a).variable(l))});const u=Array.isArray(e)?e[o].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Je(we(c,this.beta1),we(u,1-this.beta1)),f=Je(we(h,this.beta2),we(ki(u),1-this.beta2)),p=Dt(d,n),x=Dt(f,i);c.assign(d),h.assign(f);const m=Je(we(Dt(p,Je(to(x),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(we(this.accBeta1,this.beta1)),this.accBeta2.assign(we(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Jt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Jt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ht(()=>{this.accBeta1.assign(ah(this.beta1,this.iterations_+1)),this.accBeta2.assign(ah(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dX extends ol{static get className(){return"Adamax"}constructor(e,t,n,i=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ht(()=>{this.iteration=Pt(0).variable(),this.accBeta1=Pt(t).variable()}),i==null&&(this.epsilon=K.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);ht(()=>{const n=St(1,this.accBeta1),i=Dt(-this.learningRate,Je(we(this.iteration,this.decay),1));t.forEach((r,o)=>{const a=K.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:yi(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:yi(a).variable(l)});const u=Array.isArray(e)?e[o].tensor:e[r];if(u==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Je(we(c,this.beta1),we(u,1-this.beta1)),f=we(h,this.beta2),p=fi(u),x=aI(f,p);c.assign(d),h.assign(x);const m=Je(we(Dt(i,n),Dt(d,Je(x,this.epsilon))),a);a.assign(m)}),this.iteration.assign(Je(this.iteration,1)),this.accBeta1.assign(we(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Jt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Jt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AI extends ol{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,i)=>{const r=Array.isArray(e)?e[i].tensor:e[n];if(r==null)return;const o=K.registeredVariables[n];ht(()=>{const a=Je(we(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=dr(Pt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fX extends AI{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Pt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,i)=>{const r=K.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:ht(()=>yi(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(e)?e[i].tensor:e[n];a!=null&&ht(()=>{let l;const u=Je(we(this.m,o),a);this.useNesterov?l=Je(we(this.c,Je(a,we(u,this.m))),r):l=Je(we(this.c,u),r),o.assign(u),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Jt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pX extends ol{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,i=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=K.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,i)=>{const r=K.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:ht(()=>yi(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:ht(()=>yi(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:ht(()=>yi(r).variable(o))});const a=Array.isArray(e)?e[i].tensor:e[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,u=this.accumulatedMoments[i].variable;ht(()=>{const c=Je(we(l,this.decay),we(ki(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=Je(we(h,this.decay),we(a,1-this.decay)),f=Dt(we(a,this.learningRate),to(St(c,Je(ki(d),this.epsilon)))),p=Je(we(u,this.momentum),f);l.assign(c),h.assign(d),u.assign(p);const x=St(r,p);r.assign(x)}else{const h=Je(we(l,this.decay),we(ki(a),1-this.decay)),d=Je(we(u,this.momentum),Dt(we(a,this.learningRate),to(Je(h,this.epsilon))));l.assign(h),u.assign(d);const f=St(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Jt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Jt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Jt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=[uX,cX,hX,dX,fX,pX,AI];function gX(){for(const s of mX)lX(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xX="model",yX=".json",bX=".weights.bin";function h_(s){return new Promise(e=>setTimeout(e)).then(s)}class Ya{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ya.URL_SCHEME)&&(e=e.slice(Ya.URL_SCHEME.length)),(e==null||e.length===0)&&(e=xX),this.modelJsonFileName=e+yX,this.weightDataFileName=e+bX}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=rr.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const i=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=IA(e,i),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,await h_(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=n,await h_(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Dh(e)}}}}Ya.URL_SCHEME="downloads://";class vX{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=i=>{const r=JSON.parse(i.target.result),o=r.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const l=Ev(r,u=>this.loadWeights(u));e(l)},n.onerror=i=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const o of e)t.push(...o.weights),n.push(...o.paths);const i=this.checkManifestAndWeightFiles(e),r=n.map(o=>this.loadWeightsFile(o,i[o]));return Promise.all(r).then(o=>[t,o])}loadWeightsFile(e,t){return new Promise((n,i)=>{const r=new FileReader;r.onload=o=>{const a=o.target.result;n(a)},r.onerror=o=>i(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(r=>l_(r.name)),i={};for(const r of e)r.paths.forEach(o=>{const a=l_(o);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);i[o]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return i}}const wX=s=>J().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ya.URL_SCHEME)?SX(s.slice(Ya.URL_SCHEME.length)):null;Cn.registerSaveRouter(wX);function SX(s="model"){return new Ya(s)}function _X(s){return new vX(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(s,e,t,n){o(s),t=t??0,n=n??1,a(t,n);let i=0;const r=l=>(l.then(u=>{const c=t+ ++i/s.length*(n-t);return e(c),u}),l);function o(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function II(s,e){e==null&&(e={});const t=e.fetchFunc==null?J().platform.fetch:e.fetchFunc,n=s.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(n):await d_(n,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await d_(a,e.onProgress,.5,1)}function CX(s,e){var t;const n=e.fetchFunc==null?J().platform.fetch:e.fetchFunc;let i=0,r;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async o=>{for(var a;i<s.length;){r||(r=(await n(s[i],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await r.read();if(l){i++,r=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,i/s.length);continue}o.enqueue(u);return}o.close()}})}async function TX(s,e="",t,n){return RI(o=>II(o,{requestInit:n}))(s,e,t)}function RI(s){return async(e,t="",n)=>{const i=e.map(()=>!1),r={},o=n!=null?n.map(()=>!1):[],a=[];if(e.forEach((f,p)=>{let x=0;f.weights.forEach(m=>{const g="quantization"in m?m.quantization.dtype:m.dtype,y=Ha[g]*ae(m.shape),v=()=>{i[p]=!0,r[p]==null&&(r[p]=[]),r[p].push({manifestEntry:m,groupOffset:x,sizeBytes:y})};n!=null?n.forEach((w,_)=>{w===m.name&&(v(),o[_]=!0)}):v(),a.push(m.name),x+=y})}),!o.every(f=>f)){const f=n.filter((p,x)=>!o[x]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=i.reduce((f,p,x)=>(p&&f.push(x),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(p=>{const x=t+(t.endsWith("/")?"":"/")+p;u.push(x)})});const c=await s(u),h={};let d=0;return l.forEach(f=>{const p=e[f].paths.length,x=new rr(c.slice(d,d+p));r[f].forEach(g=>{const y=x.slice(g.groupOffset,g.groupOffset+g.sizeBytes),v=TA(y,[g.manifestEntry]);for(const w in v)h[w]=v[w]}),d+=p}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX="application/octet-stream",AX="application/json";class Kv{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],i=IA(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(i)],{type:AX}),"model.json"),e.weightData!=null){const o=rr.join(e.weightData);t.body.append("model.weights.bin",new Blob([o],{type:EX}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Dh(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=t.modelTopology,i=t.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Ev(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=xx(e.weightsManifest),i=()=>CX(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:i})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=IX(t),r=this.weightPathPrefix||n,o=[],a=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(u)):o.push(r+u+i);return this.weightUrlConverter&&o.push(...await Promise.all(a)),o}async loadWeights(e){const t=await this.getWeightUrls(e),n=xx(e),i=await II(t,this.loadOptions);return[n,i]}}Kv.URL_SCHEME_REGEX=/^https?:\/\//;function IX(s){const e=s.lastIndexOf("/"),t=s.lastIndexOf("?"),n=s.substring(0,e),i=t>e?s.substring(t):"";return[n+"/",i]}function Ex(s){return s.match(Kv.URL_SCHEME_REGEX)!=null}const MI=(s,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(s)?t=s.every(n=>Ex(n)):t=Ex(s),t)return jv(s,e)}return null};Cn.registerSaveRouter(MI);Cn.registerLoadRouter(MI);function jv(s,e){return new Kv(s,e)}function RX(s,e){return jv(s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ym{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class NI{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class MX{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function NX(s,e,t,n){const i=arguments;return new MX(PI(...i))}function PI(s,e,t,n){return arguments.length===1?s.modelTopology!=null||s.weightSpecs!=null?new Ym(s):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ym({modelTopology:s})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ym({modelTopology:s,weightSpecs:e,weightData:t,trainingConfig:n}))}function PX(s){return new NI(s)}function kX(s){return new NI(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kI=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:rr,browserFiles:_X,browserHTTPRequest:RX,concatenateArrayBuffers:LB,copyModel:iz,decodeWeights:TA,decodeWeightsStream:AA,encodeWeights:MB,fromMemory:NX,fromMemorySync:PI,getLoadHandlers:GB,getModelArtifactsForJSON:Ev,getModelArtifactsForJSONSync:RA,getModelArtifactsInfoForJSON:Dh,getSaveHandlers:WB,getWeightSpecs:xx,http:jv,isHTTPScheme:Ex,listModels:nz,loadWeights:TX,moveModel:rz,registerLoadRouter:VB,registerSaveRouter:zB,removeModel:sz,weightsLoaderFactory:RI,withSaveHandler:PX,withSaveHandlerSync:kX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let da,f_=!1;function $X(s,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,i=!1,r=!1,o=!1,a=!1;if(s.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&s instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement)i=!0;else if(typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement)r=!0;else if(s.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&s instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${s.constructor.name}`);if(Mf(Tf,K.backendName)!=null){const p={pixels:s},x={numChannels:e};return K.runKernel(Tf,p,x)}const[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height];let h;if(o)h=s.getContext("2d").getImageData(0,0,u,c).data;else if(n||t)h=s.data;else if(r||i||a){if(da==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")da=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else da=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});da.canvas.width=u,da.canvas.height=c,da.drawImage(s,0,0,u,c),h=da.getImageData(0,0,u,c).data}let d;if(e===4)d=new Int32Array(h);else{const p=u*c;d=new Int32Array(p*e);for(let x=0;x<p;x++)for(let m=0;m<e;++m)d[x*e+m]=h[x*4+m]}return bI(d,[c,u,e],"int32")}function DX(s){if(s.rank!==2&&s.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${s.rank}.`);const e=s.rank===2?1:s.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(s.dtype!=="float32"&&s.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${s.dtype}. Please use float32 or int32 tensors.`)}async function Yv(s,e){let t=P(s,"img","toPixels");if(!(s instanceof Nn)){const u=t;t=hn(u,"int32"),u.dispose()}DX(t);const[n,i]=t.shape.slice(0,2),r=t.rank===2?1:t.shape[2],o=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(i*n*4);for(let u=0;u<n*i;++u){const c=[0,0,0,255];for(let d=0;d<r;d++){const f=o[u*r+d];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);r===1?(c[0]=f*a,c[1]=f*a,c[2]=f*a):c[d]=f*a}const h=u*4;l[h+0]=Math.round(c[0]),l[h+1]=Math.round(c[1]),l[h+2]=Math.round(c[2]),l[h+3]=Math.round(c[3])}if(e!=null){f_||Mf(FE,K.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),f_=!0),e.width=i,e.height=n;const u=e.getContext("2d"),c=new ImageData(l,i,n);u.putImageData(c,0,0)}return t!==s&&t.dispose(),l}const $I=G({fromPixels_:$X});function Zv(s,e){const t=s.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(ae(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=e.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let u=1;for(let h=r;h<t;++h)u*=a[h],l.push(a[h]);const c=[...kn(s.shape).map(h=>h/u),1].slice(0,r);return[l,o,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ax=-2,LX=-1;function Jv(s,e,t){const n=s.shape.length;D(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),D(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)D(e[i]+t[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function OX(s){const e=[];let t=0;for(;s>0;)s&1&&e.push(t),s/=2,t++;return e}function Qv(s,e,t){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((e[i]-s[i])/t[i]);return n}function DI(s,e,t,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<t;r++)r===0?i[e]=1:(i.splice(e,0,1),i.pop());return i}function LI(s,e,t){return t<=s?t:t-(e-1)}function OI(s,e){const t=[];for(let n=0;n<s;n++)t.push(e+n);return t}function FX(s,e,t,n,i,r,o,a,l){const u=s.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&t>0){const f=e[0],p=t+1;c=FI(o,f,p,n,s),h=UI(a,f,p,i,s),d=DI(r,f,p,s)}else for(let f=0;f<u;f++)c[f]=zI(o,n,r,s,f,l),h[f]=VI(a,i,r,s,f,l),d[f]=BI(r,f,l);return{begin:c,end:h,strides:d}}function FI(s,e,t,n,i){const r=[...i],o=OI(t,e);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=LI(e,t,a);let u=n[l];s&1<<l&&(u=0),r[a]=u}return r}function UI(s,e,t,n,i){const r=[...i],o=OI(t,e);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=LI(e,t,a);let u=n[l];s&1<<l&&(u=Number.MAX_SAFE_INTEGER),r[a]=u}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=_f(0,r[a],i[a])}return r}function BI(s,e,t){let n=s[e];return(t&1<<e||n==null)&&(n=1),n}function zI(s,e,t,n,i,r){let o=e[i];const a=t[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=_f(0,o,l-1),o}function VI(s,e,t,n,i,r){let o=e[i];const a=t[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=_f(0,o,l):o=_f(-1,o,l-1),o}function ew(s,e,t){let n=t.length;for(let i=0;i<t.length;i++)if(t[i]>1){n=i;break}for(let i=n+1;i<t.length;i++)if(e[i]>0||t[i]!==s[i])return!1;return!0}function tw(s,e){let t=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)t+=s[n]*e[n];return t}function nw(s,e,t){let n;const i=s.shape.length;typeof e=="number"?n=[e,...new Array(i-1).fill(0)]:e.length<i?n=e.concat(new Array(i-e.length).fill(0)):n=e.slice(),n.forEach(o=>{D(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(i).fill(-1):typeof t=="number"?r=[t,...new Array(i-1).fill(-1)]:t.length<i?r=t.concat(new Array(i-t.length).fill(-1)):r=t,r=r.map((o,a)=>o>=0?o:(D(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function sw(s,e,t,n,i,r,o,a,l){let u;if(n==null?(u=new Array(e.length),u.fill(1)):u=n,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<h.dims;v++)c&&1<<v&a&&h.numAddAxisAfterEllipsis++,1<<v&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};UX(h,d);let f=!0,p=!0,x=!0;const m=[],g=[];for(let v=0;v<s.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<v),_=s[v];if(_===-1){m.push(w?1:-1);continue}const T=[d.beginMask&1<<v,d.endMask&1<<v],A=[d.strides[v]>0?0:-1,d.strides[v]>0?_:_-1];if(w&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");x=x&&d.strides[v]===1;const M=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(w){const W=d.begin[v]<0?_+d.begin[v]:d.begin[v];if(d.begin[v]=W,d.end[v]=d.begin[v]+1,W<0||W>=_)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=p_(d.begin[v],0,d.strides[v],_,T,A),d.end[v]=p_(d.end[v],1,d.strides[v],_,T,A);const $=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===_;f=f&&$,p=p&&(v===0&&d.strides[v]===1||$)}else f=f&&d.strides[v]===1&&M,p=p&&(v===0&&d.strides[v]===1||M);let C,R=!1;if(d.beginValid&&d.endValid?(C=d.end[v]-d.begin[v],R=!0):w?(C=1,R=!0):M&&_>=0&&(d.strides[v]<0?C=-_:C=_,R=!0),R){let $;C===0||C<0!=d.strides[v]<0?$=0:$=Math.trunc(C/d.strides[v])+(C%d.strides[v]!==0?1:0),m.push($)}else m.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const w=d.finalShapeGatherIndices[v];w>=0?g.push(m[w]):w===Ax&&g.push(1)}return{finalShapeSparse:g.filter((v,w)=>d.finalShapeGatherIndices[w]!==Ax),finalShape:g,isIdentity:f,sliceDim0:p,isSimpleSlice:x,begin:d.begin,end:d.end,strides:d.strides}}function UX(s,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=s.begin!=null,e.endValid=s.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(e.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,e.dims);for(;t<i;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&s.newAxisMask)e.finalShapeGatherIndices.push(Ax),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);s.begin!=null&&(e.begin[t]=s.begin[n]),s.end!=null&&(e.end[t]=s.end[n]),e.strides[t]=s.strides[n],s.beginMask&1<<n&&(e.beginMask|=1<<t),s.endMask&1<<n&&(e.endMask|=1<<t),s.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(LX),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function p_(s,e,t,n,i,r){if(i[e])return t>0?r[e]:r[e+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const BX=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Jv,computeFlatOffset:tw,computeOutShape:Qv,getNormalizedAxes:FX,isSliceContinous:ew,maskToAxes:OX,parseSliceParams:nw,sliceInfo:sw,startForAxis:zI,startIndicesWithElidedDims:FI,stopForAxis:VI,stopIndicesWithElidedDims:UI,stridesForAxis:BI,stridesWithElidedDims:DI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s();function VX(){return new Promise(s=>zX(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iw(s,e){const t=s[0].length;s.forEach((i,r)=>{D(i.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<t;o++)D(o===e||i[o]===n[o],()=>`Error in concat${t}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function Li(s,e){const t=s[0].slice();for(let n=1;n<s.length;n++)t[e]+=s[n][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ji;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(ji||(ji={}));function WI(s,e,t){let n=new Array;if(t==null&&e==null)return n;if(e==null)for(;n.length<s+t.length;)n.push(-1);else n=e.slice();if(t==null)return n;if(s+t.length!==n.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${s+t.length}, but shape.rank = ${n.length}`);for(let i=1;i<t.length;++i){const r=t[i],o=n[n.length-t.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function GI(s){const e={FIRST_DIM_SIZE:ji.FIRST_DIM_SIZE,VALUE_ROWIDS:ji.VALUE_ROWIDS,ROW_LENGTHS:ji.ROW_LENGTHS,ROW_SPLITS:ji.ROW_SPLITS,ROW_LIMITS:ji.ROW_LIMITS,ROW_STARTS:ji.ROW_STARTS},t=[];for(const n of s)if(n in e)t.push(e[n]);else break;return t}function HI(s){return s.length===0?0:s[0]===ji.FIRST_DIM_SIZE?s.length-1:s.length}function XI(s,e){if(s==null||e==null)return;const t=s.length,n=e.length;if(t>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(t,n-1);++i){const r=s[i],o=e[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw=30;function Vp(s){return s<=rw?s:lx(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(s,e,t){const n=t*(typeof s=="number"?s:s[0]),i=e*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(s,e,t,n=!0){let i=[];if(n)i=i.concat(e.slice(0)),i.push(s[0]/t),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=e.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/e[o],e[o]]);i=i.concat(s.slice(r+1))}return i}function Bh(s,e,t=!0){const n=[];if(t){n.push(e);for(let i=e+1;i<s;++i)i<=2*e?(n.push(i),n.push(i-(e+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=e*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function zh(s,e,t,n=!0){const i=[];n?i.push(s[0]/t):i.push(s[0]*t);for(let r=1;r<s.length;++r)r<=e.length?n?i.push(e[r-1]*s[r]):i.push(s[r]/e[r-1]):i.push(s[r]);return i}function aw(s,e){const t=[0];for(let n=0;n<e;++n)t.push(s[n][0]);return t}function lw(s,e,t){const n=s.slice(0,1);for(let i=0;i<t;++i)n.push(s[i+1]-e[i][0]-e[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uw=1.7580993408473768,cw=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hw=.3275911,dw=.254829592,fw=-.284496736,pw=1.421413741,mw=-1.453152027,gw=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fh(s,e){if(s.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${e.length}.`);const t=new Float32Array(s.length*2);for(let n=0;n<t.length;n+=2)t[n]=s[n/2],t[n+1]=e[n/2];return t}function WX(s){const e=new Float32Array(s.length/2),t=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)e[n/2]=s[n],t[n/2]=s[n+1];return{real:e,imag:t}}function GX(s){const e=Math.ceil(s.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let i=0;i<s.length;i+=4)t[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:t,imag:n}}function HX(s){const e=Math.floor(s.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let i=2;i<s.length;i+=4)t[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:t,imag:n}}function XX(s,e){const t=s[e*2],n=s[e*2+1];return{real:t,imag:n}}function qX(s,e,t,n){s[n*2]=e,s[n*2+1]=t}function KX(s,e){const t=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(e?2:-2)*Math.PI*(i/s);t[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:t,imag:n}}function jX(s,e,t){const n=(t?2:-2)*Math.PI*(s/e),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zm="->",YX=/->/g,m_=",",g_="...";function xw(s,e){s=s.replace(/\s/g,"");const t=(s.length-s.replace(YX,"").length)/Zm.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Zm}").`);const[n,i]=s.split(Zm);D(n.indexOf(g_)===-1,()=>`The ellipsis notation ("${g_}") is not supported yet.`);const r=n.split(m_),o=r.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==m_&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const u=a.length,c=i.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function yw(s,e){let t=new Array(s);t.fill(-1);for(let i=0;i<e.length;++i)t[e[i]]=i;const n=[];for(let i=0;i<s;++i)t[i]===-1&&n.push(i);return t=t.filter(i=>i!==-1),{permutationIndices:t,expandDims:n}}function bw(s,e,t){const n=new Array(s);for(let i=0;i<t.length;++i){const r=t[i].shape;for(let o=0;o<e[i].length;++o)n[e[i][o]]===void 0?n[e[i][o]]=r[o]:D(n[e[i][o]]===r[o],()=>`Expected dimension ${n[e[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function vw(s,e){const t=s,n=[];let i=0;s.length===0&&t.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<t.length;++o){const a=t[o],l=ZX(e,a);for(const u of l)r.indexOf(u)===-1&&(n[o].push(u),r.push(u))}return{path:t,steps:n}}function ww(s){return s.every((e,t)=>e===t)}function ZX(s,e){const t=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function Sw(s,e,t=0){let n=[];if(typeof e=="number")D(s.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(s.shape[t]/e);else{const i=e.reduce((o,a)=>(a===-1&&(o+=1),o),0);D(i<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const o=e.reduce((a,l)=>l>0?a+l:a);e[r]=s.shape[t]-o}D(s.shape[t]===e.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function KI(s,e){return`indices(${s}, 0) is invalid: ${e} < 0`}function jI(s,e,t){return`indices(${s}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(s,e){return`only one output dimension may be -1, not both ${s} and ${e}`}function ZI(s,e){return`size ${s} must be non-negative, not ${e}`}function JI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function QI(s,e){const t=ae(s),n=ae(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${e}`}function eR(s,e){const t=ae(s),n=ae(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ix(){return"segment ids must be >= 0"}function tR(){return"segment ids are not increasing"}function nR(s,e){return`Segment id ${s} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function sR(s,e,t){return`Bad: indices[${s}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(s,e){let t=!1,n;for(s<=rw?(n=s,t=!0):n=lx(s,Math.floor(Math.sqrt(s)));!t;)n>e||n===s?t=!0:n=lx(s,n+1);return n}function _w(s,e,t){const n=[],i=s.length;for(let r=0;r<i;r++)r!==e?n.push(s[r]):n.push(t);return n}function Cw(s,e,t,n){const i=e.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let h=0;h<n;++h)if(s.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=s.shape[t],a=[];let l=1,u=1,c=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<t;h++)a.push(s.shape[h]),u*=s.shape[h];for(let h=n;h<i;h++)a.push(e.shape[h]);for(let h=t+1;h<r;h++)a.push(s.shape[h]),c*=s.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:a}}const JX=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Cw,computeOutShape:_w,segOpComputeOptimalWindowSize:iR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(s){try{return s.map(e=>Qr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function rR(s){return s.map(e=>Do(e))}const QX=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:dw,ERF_A2:fw,ERF_A3:pw,ERF_A4:mw,ERF_A5:gw,ERF_P:hw,PARALLELIZE_THRESHOLD:rw,get RowPartitionType(){return ji},SELU_SCALE:cw,SELU_SCALEALPHA:uw,applyActivation:Bp,assertAndGetBroadcastShape:It,assertAxesAreInnerMostDims:ci,assertParamsConsistent:iw,assignToTypedArray:qX,axesAreInnerMostDims:Rv,calculateShapes:il,checkEinsumDimSizes:bw,checkPadOnDimRoundingMode:Ui,combineLocations:KA,combineRaggedTensorToTensorShapes:WI,complexWithEvenIndex:GX,complexWithOddIndex:HX,computeConv2DInfo:Gn,computeConv3DInfo:Jo,computeDefaultPad:Av,computeDilation2DInfo:Lh,computeOptimalWindowSize:Vp,computeOutAndReduceShapes:vi,computeOutShape:Li,computePool2DInfo:Fi,computePool3DInfo:co,convertConv2DDataFormat:or,decodeEinsumEquation:xw,eitherStridesOrDilationsAreOne:Ns,expandShapeToKeepDim:ui,exponent:jX,exponents:KX,fromStringArrayToUint8:rR,fromUint8ToStringArray:Go,getAxesPermutation:ms,getBroadcastDims:yu,getComplexWithIndex:XX,getEinsumComputePath:vw,getEinsumPermutation:yw,getFusedBiasGradient:Up,getFusedDyActivation:Fp,getImageCenter:ow,getInnerMostAxes:gs,getPermuted:Bh,getRaggedRank:HI,getReductionAxes:HA,getReshaped:Uh,getReshapedPermuted:zh,getRowPartitionTypesHelper:GI,getSliceBeginCoords:aw,getSliceSize:lw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:qI,getSparseFillEmptyRowsNegativeIndexErrorMessage:KI,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:jI,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:JI,getSparseReshapeInputOutputMismatchErrorMessage:eR,getSparseReshapeInputOutputMultipleErrorMessage:QI,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:YI,getSparseReshapeNegativeOutputDimErrorMessage:ZI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:sR,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Ix,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:tR,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:nR,getUndoAxesPermutation:Fh,isIdentityPermutation:ww,log:JU,mergeRealAndImagArrays:fh,prepareAndValidate:Zv,prepareSplitSize:Sw,segment_util:JX,shouldFuse:zp,slice_util:BX,splitRealAndImagArrays:WX,stridesOrDilationsArePositive:Ka,tupleValuesAreOne:oh,upcastType:zs,validateDefaultValueShape:XI,validateInput:Wv,validateUpdateShape:vI,warn:Zi},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gX();function x_(s,e,t){const n=s.slice();n[9]=e[t];const i=n[9].y;n[10]=i;const r=2;n[11]=r;const o=Hr-(n[10]+n[11]/2);n[12]=o;const a=n[10]-n[11]/2-Qs;return n[13]=a,n}function e8(s){let e,t,n,i;return e=new Cs.PlaneGeometry({props:{args:[20,80]}}),n=new Cs.MeshStandardMaterial({props:{color:"#BB8888"}}),{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment)},l(r){En(e.$$.fragment,r),t=jn(r),En(n.$$.fragment,r)},m(r,o){An(e,r,o),xn(r,t,o),An(n,r,o),i=!0},p:kc,i(r){i||(Ct(e.$$.fragment,r),Ct(n.$$.fragment,r),i=!0)},o(r){Lt(e.$$.fragment,r),Lt(n.$$.fragment,r),i=!1},d(r){r&&qt(t),In(e,r),In(n,r)}}}function t8(s){let e,t,n,i;return e=new Cs.PlaneGeometry({props:{args:[20,80]}}),n=new Cs.MeshStandardMaterial({props:{color:"#8888BB"}}),{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment)},l(r){En(e.$$.fragment,r),t=jn(r),En(n.$$.fragment,r)},m(r,o){An(e,r,o),xn(r,t,o),An(n,r,o),i=!0},p:kc,i(r){i||(Ct(e.$$.fragment,r),Ct(n.$$.fragment,r),i=!0)},o(r){Lt(e.$$.fragment,r),Lt(n.$$.fragment,r),i=!1},d(r){r&&qt(t),In(e,r),In(n,r)}}}function n8(s){let e,t,n,i;return e=new Cs.BoxGeometry({props:{args:[20,s[12],1]}}),n=new Cs.MeshStandardMaterial({props:{color:"#8888BB"}}),{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment)},l(r){En(e.$$.fragment,r),t=jn(r),En(n.$$.fragment,r)},m(r,o){An(e,r,o),xn(r,t,o),An(n,r,o),i=!0},p(r,o){const a={};o&1&&(a.args=[20,r[12],1]),e.$set(a)},i(r){i||(Ct(e.$$.fragment,r),Ct(n.$$.fragment,r),i=!0)},o(r){Lt(e.$$.fragment,r),Lt(n.$$.fragment,r),i=!1},d(r){r&&qt(t),In(e,r),In(n,r)}}}function s8(s){let e,t,n,i,r;return e=new Cs.BoxGeometry({props:{args:[20,s[13],1]}}),n=new Cs.MeshStandardMaterial({props:{color:"#BB8888"}}),{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment),i=Kn()},l(o){En(e.$$.fragment,o),t=jn(o),En(n.$$.fragment,o),i=jn(o)},m(o,a){An(e,o,a),xn(o,t,a),An(n,o,a),xn(o,i,a),r=!0},p(o,a){const l={};a&1&&(l.args=[20,o[13],1]),e.$set(l)},i(o){r||(Ct(e.$$.fragment,o),Ct(n.$$.fragment,o),r=!0)},o(o){Lt(e.$$.fragment,o),Lt(n.$$.fragment,o),r=!1},d(o){o&&(qt(t),qt(i)),In(e,o),In(n,o)}}}function y_(s){let e,t,n,i;return e=new Cs.Mesh({props:{position:[s[9].x,Hr-s[12]/2,s[9].z],$$slots:{default:[n8]},$$scope:{ctx:s}}}),n=new Cs.Mesh({props:{position:[s[9].x,Qs+s[13]/2,s[9].z],$$slots:{default:[s8]},$$scope:{ctx:s}}}),{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment)},l(r){En(e.$$.fragment,r),t=jn(r),En(n.$$.fragment,r)},m(r,o){An(e,r,o),xn(r,t,o),An(n,r,o),i=!0},p(r,o){const a={};o&1&&(a.position=[r[9].x,Hr-r[12]/2,r[9].z]),o&65537&&(a.$$scope={dirty:o,ctx:r}),e.$set(a);const l={};o&1&&(l.position=[r[9].x,Qs+r[13]/2,r[9].z]),o&65537&&(l.$$scope={dirty:o,ctx:r}),n.$set(l)},i(r){i||(Ct(e.$$.fragment,r),Ct(n.$$.fragment,r),i=!0)},o(r){Lt(e.$$.fragment,r),Lt(n.$$.fragment,r),i=!1},d(r){r&&qt(t),In(e,r),In(n,r)}}}function i8(s){let e,t,n,i,r,o,a,l,u,c,h,d,f,p;e=new Cs.PerspectiveCamera({props:{makeDefault:!0,position:[0,Qs+s[1]*(Hr-Qs),Mc],fov:75}}),e.$on("create",s[3]),n=new Cs.DirectionalLight({props:{position:[5,5,-15],intensity:1.5}}),r=new Cs.DirectionalLight({props:{position:[-5,5,-15],intensity:1.5}}),a=new Cs.AmbientLight({props:{intensity:1.5}}),u=new Cs.Mesh({props:{"position.y":Qs,"rotation.x":-Math.PI/2,$$slots:{default:[e8]},$$scope:{ctx:s}}}),h=new Cs.Mesh({props:{"position.y":Hr,"rotation.x":Math.PI/2,$$slots:{default:[t8]},$$scope:{ctx:s}}});let x=a1(s[0]),m=[];for(let y=0;y<x.length;y+=1)m[y]=y_(x_(s,x,y));const g=y=>Lt(m[y],1,1,()=>{m[y]=null});return{c(){Tn(e.$$.fragment),t=Kn(),Tn(n.$$.fragment),i=Kn(),Tn(r.$$.fragment),o=Kn(),Tn(a.$$.fragment),l=Kn(),Tn(u.$$.fragment),c=Kn(),Tn(h.$$.fragment),d=Kn();for(let y=0;y<m.length;y+=1)m[y].c();f=gf()},l(y){En(e.$$.fragment,y),t=jn(y),En(n.$$.fragment,y),i=jn(y),En(r.$$.fragment,y),o=jn(y),En(a.$$.fragment,y),l=jn(y),En(u.$$.fragment,y),c=jn(y),En(h.$$.fragment,y),d=jn(y);for(let v=0;v<m.length;v+=1)m[v].l(y);f=gf()},m(y,v){An(e,y,v),xn(y,t,v),An(n,y,v),xn(y,i,v),An(r,y,v),xn(y,o,v),An(a,y,v),xn(y,l,v),An(u,y,v),xn(y,c,v),An(h,y,v),xn(y,d,v);for(let w=0;w<m.length;w+=1)m[w]&&m[w].m(y,v);xn(y,f,v),p=!0},p(y,[v]){const w={};v&2&&(w.position=[0,Qs+y[1]*(Hr-Qs),Mc]),e.$set(w);const _={};v&65536&&(_.$$scope={dirty:v,ctx:y}),u.$set(_);const T={};if(v&65536&&(T.$$scope={dirty:v,ctx:y}),h.$set(T),v&1){x=a1(y[0]);let A;for(A=0;A<x.length;A+=1){const M=x_(y,x,A);m[A]?(m[A].p(M,v),Ct(m[A],1)):(m[A]=y_(M),m[A].c(),Ct(m[A],1),m[A].m(f.parentNode,f))}for($c(),A=x.length;A<m.length;A+=1)g(A);Dc()}},i(y){if(!p){Ct(e.$$.fragment,y),Ct(n.$$.fragment,y),Ct(r.$$.fragment,y),Ct(a.$$.fragment,y),Ct(u.$$.fragment,y),Ct(h.$$.fragment,y);for(let v=0;v<x.length;v+=1)Ct(m[v]);p=!0}},o(y){Lt(e.$$.fragment,y),Lt(n.$$.fragment,y),Lt(r.$$.fragment,y),Lt(a.$$.fragment,y),Lt(u.$$.fragment,y),Lt(h.$$.fragment,y),m=m.filter(Boolean);for(let v=0;v<m.length;v+=1)Lt(m[v]);p=!1},d(y){y&&(qt(t),qt(i),qt(o),qt(l),qt(c),qt(d),qt(f)),In(e,y),In(n,y),In(r,y),In(a,y),In(u,y),In(h,y),DN(m,y)}}}const r8=300,Qs=0,Hr=10,Mc=10,o8=.05;function a8(s,e,t){let{normalizedDistance:n=!0}=e,i=[],r=0,o=.5,a=0;const l=-40,u=n2();function c(){const d=Qs+o*(Hr-Qs);for(const f of i){const p=f.y,x=2,m=p+x/2,g=p-x/2;if(f.z>=Mc-1&&f.z<=Mc+1&&(d<g||d>m))return a=0,u("score",a),!0}return!1}DU(()=>{if(r++,t(1,o=1-n),t(1,o=Math.min(Math.max(o,.05),.95)),r%r8===0){const d=Qs+Math.random()*(Hr-Qs);t(0,i=[...i,{x:0,y:d,z:l}])}t(0,i=i.map(d=>({...d,z:d.z+o8})).filter(d=>d.z>=Mc?(a+=1,u("score",a),!1):!0)),c()&&t(0,i=[])}),wh(()=>{a=0,u("score",a)});const h=({ref:d})=>{d.lookAt(0,Qs+.5*(Hr-Qs),0)};return s.$$set=d=>{"normalizedDistance"in d&&t(2,n=d.normalizedDistance)},[i,o,n,h]}class l8 extends ao{constructor(e){super(),lo(this,e,a8,i8,oo,{normalizedDistance:2})}}var u8={};(function(){var s;function e(b){var S=0;return function(){return S<b.length?{done:!1,value:b[S++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(b,S,I){return b==Array.prototype||b==Object.prototype||(b[S]=I.value),b};function n(b){b=[typeof globalThis=="object"&&globalThis,b,typeof window=="object"&&window,typeof self=="object"&&self,typeof gr=="object"&&gr];for(var S=0;S<b.length;++S){var I=b[S];if(I&&I.Math==Math)return I}throw Error("Cannot find global object")}var i=n(this);function r(b,S){if(S)e:{var I=i;b=b.split(".");for(var N=0;N<b.length-1;N++){var F=b[N];if(!(F in I))break e;I=I[F]}b=b[b.length-1],N=I[b],S=S(N),S!=N&&S!=null&&t(I,b,{configurable:!0,writable:!0,value:S})}}r("Symbol",function(b){function S(V){if(this instanceof S)throw new TypeError("Symbol is not a constructor");return new I(N+(V||"")+"_"+F++,V)}function I(V,z){this.h=V,t(this,"description",{configurable:!0,writable:!0,value:z})}if(b)return b;I.prototype.toString=function(){return this.h};var N="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",F=0;return S}),r("Symbol.iterator",function(b){if(b)return b;b=Symbol("Symbol.iterator");for(var S="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),I=0;I<S.length;I++){var N=i[S[I]];typeof N=="function"&&typeof N.prototype[b]!="function"&&t(N.prototype,b,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return b});function o(b){return b={next:b},b[Symbol.iterator]=function(){return this},b}function a(b){var S=typeof Symbol<"u"&&Symbol.iterator&&b[Symbol.iterator];return S?S.call(b):{next:e(b)}}function l(b){if(!(b instanceof Array)){b=a(b);for(var S,I=[];!(S=b.next()).done;)I.push(S.value);b=I}return b}var u=typeof Object.assign=="function"?Object.assign:function(b,S){for(var I=1;I<arguments.length;I++){var N=arguments[I];if(N)for(var F in N)Object.prototype.hasOwnProperty.call(N,F)&&(b[F]=N[F])}return b};r("Object.assign",function(b){return b||u});var c=typeof Object.create=="function"?Object.create:function(b){function S(){}return S.prototype=b,new S},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var f={a:!0},p={};try{p.__proto__=f,d=p.a;break e}catch{}d=!1}h=d?function(b,S){if(b.__proto__=S,b.__proto__!==S)throw new TypeError(b+" is not extensible");return b}:null}var x=h;function m(b,S){if(b.prototype=c(S.prototype),b.prototype.constructor=b,x)x(b,S);else for(var I in S)if(I!="prototype")if(Object.defineProperties){var N=Object.getOwnPropertyDescriptor(S,I);N&&Object.defineProperty(b,I,N)}else b[I]=S[I];b.za=S.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(b){if(b.m)throw new TypeError("Generator is already running");b.m=!0}g.prototype.u=function(b){this.i=b};function v(b,S){b.l={ma:S,na:!0},b.h=b.s||b.v}g.prototype.return=function(b){this.l={return:b},this.h=this.v};function w(b,S,I){return b.h=I,{value:S}}function _(b){this.h=new g,this.i=b}function T(b,S){y(b.h);var I=b.h.j;return I?A(b,"return"in I?I.return:function(N){return{value:N,done:!0}},S,b.h.return):(b.h.return(S),M(b))}function A(b,S,I,N){try{var F=S.call(b.h.j,I);if(!(F instanceof Object))throw new TypeError("Iterator result "+F+" is not an object");if(!F.done)return b.h.m=!1,F;var V=F.value}catch(z){return b.h.j=null,v(b.h,z),M(b)}return b.h.j=null,N.call(b.h,V),M(b)}function M(b){for(;b.h.h;)try{var S=b.i(b.h);if(S)return b.h.m=!1,{value:S.value,done:!1}}catch(I){b.h.i=void 0,v(b.h,I)}if(b.h.m=!1,b.h.l){if(S=b.h.l,b.h.l=null,S.na)throw S.ma;return{value:S.return,done:!0}}return{value:void 0,done:!0}}function C(b){this.next=function(S){return y(b.h),b.h.j?S=A(b,b.h.j.next,S,b.h.u):(b.h.u(S),S=M(b)),S},this.throw=function(S){return y(b.h),b.h.j?S=A(b,b.h.j.throw,S,b.h.u):(v(b.h,S),S=M(b)),S},this.return=function(S){return T(b,S)},this[Symbol.iterator]=function(){return this}}function R(b){function S(N){return b.next(N)}function I(N){return b.throw(N)}return new Promise(function(N,F){function V(z){z.done?N(z.value):Promise.resolve(z.value).then(S,I).then(V,F)}V(b.next())})}function $(b){return R(new C(new _(b)))}r("Promise",function(b){function S(z){this.i=0,this.j=void 0,this.h=[],this.u=!1;var j=this.l();try{z(j.resolve,j.reject)}catch(se){j.reject(se)}}function I(){this.h=null}function N(z){return z instanceof S?z:new S(function(j){j(z)})}if(b)return b;I.prototype.i=function(z){if(this.h==null){this.h=[];var j=this;this.j(function(){j.m()})}this.h.push(z)};var F=i.setTimeout;I.prototype.j=function(z){F(z,0)},I.prototype.m=function(){for(;this.h&&this.h.length;){var z=this.h;this.h=[];for(var j=0;j<z.length;++j){var se=z[j];z[j]=null;try{se()}catch(ve){this.l(ve)}}}this.h=null},I.prototype.l=function(z){this.j(function(){throw z})},S.prototype.l=function(){function z(ve){return function(ke){se||(se=!0,ve.call(j,ke))}}var j=this,se=!1;return{resolve:z(this.I),reject:z(this.m)}},S.prototype.I=function(z){if(z===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(z instanceof S)this.L(z);else{e:switch(typeof z){case"object":var j=z!=null;break e;case"function":j=!0;break e;default:j=!1}j?this.F(z):this.s(z)}},S.prototype.F=function(z){var j=void 0;try{j=z.then}catch(se){this.m(se);return}typeof j=="function"?this.M(j,z):this.s(z)},S.prototype.m=function(z){this.v(2,z)},S.prototype.s=function(z){this.v(1,z)},S.prototype.v=function(z,j){if(this.i!=0)throw Error("Cannot settle("+z+", "+j+"): Promise already settled in state"+this.i);this.i=z,this.j=j,this.i===2&&this.K(),this.H()},S.prototype.K=function(){var z=this;F(function(){if(z.D()){var j=i.console;typeof j<"u"&&j.error(z.j)}},1)},S.prototype.D=function(){if(this.u)return!1;var z=i.CustomEvent,j=i.Event,se=i.dispatchEvent;return typeof se>"u"?!0:(typeof z=="function"?z=new z("unhandledrejection",{cancelable:!0}):typeof j=="function"?z=new j("unhandledrejection",{cancelable:!0}):(z=i.document.createEvent("CustomEvent"),z.initCustomEvent("unhandledrejection",!1,!0,z)),z.promise=this,z.reason=this.j,se(z))},S.prototype.H=function(){if(this.h!=null){for(var z=0;z<this.h.length;++z)V.i(this.h[z]);this.h=null}};var V=new I;return S.prototype.L=function(z){var j=this.l();z.T(j.resolve,j.reject)},S.prototype.M=function(z,j){var se=this.l();try{z.call(j,se.resolve,se.reject)}catch(ve){se.reject(ve)}},S.prototype.then=function(z,j){function se(it,Ve){return typeof it=="function"?function(gt){try{ve(it(gt))}catch(Ft){ke(Ft)}}:Ve}var ve,ke,mt=new S(function(it,Ve){ve=it,ke=Ve});return this.T(se(z,ve),se(j,ke)),mt},S.prototype.catch=function(z){return this.then(void 0,z)},S.prototype.T=function(z,j){function se(){switch(ve.i){case 1:z(ve.j);break;case 2:j(ve.j);break;default:throw Error("Unexpected state: "+ve.i)}}var ve=this;this.h==null?V.i(se):this.h.push(se),this.u=!0},S.resolve=N,S.reject=function(z){return new S(function(j,se){se(z)})},S.race=function(z){return new S(function(j,se){for(var ve=a(z),ke=ve.next();!ke.done;ke=ve.next())N(ke.value).T(j,se)})},S.all=function(z){var j=a(z),se=j.next();return se.done?N([]):new S(function(ve,ke){function mt(gt){return function(Ft){it[gt]=Ft,Ve--,Ve==0&&ve(it)}}var it=[],Ve=0;do it.push(void 0),Ve++,N(se.value).T(mt(it.length-1),ke),se=j.next();while(!se.done)})},S});function W(b,S){b instanceof String&&(b+="");var I=0,N=!1,F={next:function(){if(!N&&I<b.length){var V=I++;return{value:S(V,b[V]),done:!1}}return N=!0,{done:!0,value:void 0}}};return F[Symbol.iterator]=function(){return F},F}r("Array.prototype.keys",function(b){return b||function(){return W(this,function(S){return S})}}),r("Array.prototype.fill",function(b){return b||function(S,I,N){var F=this.length||0;for(0>I&&(I=Math.max(0,F+I)),(N==null||N>F)&&(N=F),N=Number(N),0>N&&(N=Math.max(0,F+N)),I=Number(I||0);I<N;I++)this[I]=S;return this}});function q(b){return b||Array.prototype.fill}r("Int8Array.prototype.fill",q),r("Uint8Array.prototype.fill",q),r("Uint8ClampedArray.prototype.fill",q),r("Int16Array.prototype.fill",q),r("Uint16Array.prototype.fill",q),r("Int32Array.prototype.fill",q),r("Uint32Array.prototype.fill",q),r("Float32Array.prototype.fill",q),r("Float64Array.prototype.fill",q),r("Object.is",function(b){return b||function(S,I){return S===I?S!==0||1/S===1/I:S!==S&&I!==I}}),r("Array.prototype.includes",function(b){return b||function(S,I){var N=this;N instanceof String&&(N=String(N));var F=N.length;for(I=I||0,0>I&&(I=Math.max(I+F,0));I<F;I++){var V=N[I];if(V===S||Object.is(V,S))return!0}return!1}}),r("String.prototype.includes",function(b){return b||function(S,I){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(S instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(S,I||0)!==-1}});var O=this||self;function H(b,S){b=b.split(".");var I=O;b[0]in I||typeof I.execScript>"u"||I.execScript("var "+b[0]);for(var N;b.length&&(N=b.shift());)b.length||S===void 0?I[N]&&I[N]!==Object.prototype[N]?I=I[N]:I=I[N]={}:I[N]=S}function Z(b){var S;e:{if((S=O.navigator)&&(S=S.userAgent))break e;S=""}return S.indexOf(b)!=-1}var ee=Array.prototype.map?function(b,S){return Array.prototype.map.call(b,S,void 0)}:function(b,S){for(var I=b.length,N=Array(I),F=typeof b=="string"?b.split(""):b,V=0;V<I;V++)V in F&&(N[V]=S.call(void 0,F[V],V,b));return N},ce={},ne=null;function fe(b){var S=b.length,I=3*S/4;I%3?I=Math.floor(I):"=.".indexOf(b[S-1])!=-1&&(I="=.".indexOf(b[S-2])!=-1?I-2:I-1);var N=new Uint8Array(I),F=0;return pe(b,function(V){N[F++]=V}),F!==I?N.subarray(0,F):N}function pe(b,S){function I(se){for(;N<b.length;){var ve=b.charAt(N++),ke=ne[ve];if(ke!=null)return ke;if(!/^[\s\xa0]*$/.test(ve))throw Error("Unknown base64 encoding at char: "+ve)}return se}Oe();for(var N=0;;){var F=I(-1),V=I(0),z=I(64),j=I(64);if(j===64&&F===-1)break;S(F<<2|V>>4),z!=64&&(S(V<<4&240|z>>2),j!=64&&S(z<<6&192|j))}}function Oe(){if(!ne){ne={};for(var b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),S=["+/=","+/","-_=","-_.","-_"],I=0;5>I;I++){var N=b.concat(S[I].split(""));ce[I]=N;for(var F=0;F<N.length;F++){var V=N[F];ne[V]===void 0&&(ne[V]=F)}}}}var le=typeof Uint8Array<"u",ge=!(Z("Trident")||Z("MSIE"))&&typeof O.btoa=="function";function Fe(b){if(!ge){var S;S===void 0&&(S=0),Oe(),S=ce[S];for(var I=Array(Math.floor(b.length/3)),N=S[64]||"",F=0,V=0;F<b.length-2;F+=3){var z=b[F],j=b[F+1],se=b[F+2],ve=S[z>>2];z=S[(z&3)<<4|j>>4],j=S[(j&15)<<2|se>>6],se=S[se&63],I[V++]=ve+z+j+se}switch(ve=0,se=N,b.length-F){case 2:ve=b[F+1],se=S[(ve&15)<<2]||N;case 1:b=b[F],I[V]=S[b>>2]+S[(b&3)<<4|ve>>4]+se+N}return I.join("")}for(S="";10240<b.length;)S+=String.fromCharCode.apply(null,b.subarray(0,10240)),b=b.subarray(10240);return S+=String.fromCharCode.apply(null,b),btoa(S)}var Qe=RegExp("[-_.]","g");function Ye(b){switch(b){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function dt(b){if(!ge)return fe(b);Qe.test(b)&&(b=b.replace(Qe,Ye)),b=atob(b);for(var S=new Uint8Array(b.length),I=0;I<b.length;I++)S[I]=b.charCodeAt(I);return S}var xt;function nt(){return xt||(xt=new Uint8Array(0))}var rt={},X=typeof Uint8Array.prototype.slice=="function",ye=0,ue=0;function Me(b){var S=0>b;b=Math.abs(b);var I=b>>>0;b=Math.floor((b-I)/4294967296),S&&(I=a(st(I,b)),S=I.next().value,b=I.next().value,I=S),ye=I>>>0,ue=b>>>0}var xe=typeof BigInt=="function";function st(b,S){return S=~S,b?b=~b+1:S+=1,[b,S]}function We(b,S){this.i=b>>>0,this.h=S>>>0}function qe(b){if(!b)return yt||(yt=new We(0,0));if(!/^-?\d+$/.test(b))return null;if(16>b.length)Me(Number(b));else if(xe)b=BigInt(b),ye=Number(b&BigInt(4294967295))>>>0,ue=Number(b>>BigInt(32)&BigInt(4294967295));else{var S=+(b[0]==="-");ue=ye=0;for(var I=b.length,N=S,F=(I-S)%6+S;F<=I;N=F,F+=6)N=Number(b.slice(N,F)),ue*=1e6,ye=1e6*ye+N,4294967296<=ye&&(ue+=ye/4294967296|0,ye%=4294967296);S&&(S=a(st(ye,ue)),b=S.next().value,S=S.next().value,ye=b,ue=S)}return new We(ye,ue)}var yt;function Ut(b,S){return Error("Invalid wire type: "+b+" (at position "+S+")")}function dn(){return Error("Failed to read varint, encoding is invalid.")}function B(b,S){return Error("Tried to read past the end of the data "+S+" > "+b)}function k(){throw Error("Invalid UTF8")}function te(b,S){return S=String.fromCharCode.apply(null,S),b==null?S:b+S}var Se=void 0,be,Ee=typeof TextDecoder<"u",tt,Ne=typeof TextEncoder<"u",ze;function ft(b){if(b!==rt)throw Error("illegal external caller")}function Bt(b,S){if(ft(S),this.V=b,b!=null&&b.length===0)throw Error("ByteString should be constructed with non-empty values")}function Ce(){return ze||(ze=new Bt(null,rt))}function Zt(b){ft(rt);var S=b.V;return S=S==null||le&&S!=null&&S instanceof Uint8Array?S:typeof S=="string"?dt(S):null,S==null?S:b.V=S}function _t(b){if(typeof b=="string")return{buffer:dt(b),C:!1};if(Array.isArray(b))return{buffer:new Uint8Array(b),C:!1};if(b.constructor===Uint8Array)return{buffer:b,C:!1};if(b.constructor===ArrayBuffer)return{buffer:new Uint8Array(b),C:!1};if(b.constructor===Bt)return{buffer:Zt(b)||nt(),C:!0};if(b instanceof Uint8Array)return{buffer:new Uint8Array(b.buffer,b.byteOffset,b.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function pt(b,S){this.i=null,this.m=!1,this.h=this.j=this.l=0,ot(this,b,S)}function ot(b,S,I){I=I===void 0?{}:I,b.S=I.S===void 0?!1:I.S,S&&(S=_t(S),b.i=S.buffer,b.m=S.C,b.l=0,b.j=b.i.length,b.h=b.l)}pt.prototype.reset=function(){this.h=this.l};function Ge(b,S){if(b.h=S,S>b.j)throw B(b.j,S)}function Et(b){var S=b.i,I=b.h,N=S[I++],F=N&127;if(N&128&&(N=S[I++],F|=(N&127)<<7,N&128&&(N=S[I++],F|=(N&127)<<14,N&128&&(N=S[I++],F|=(N&127)<<21,N&128&&(N=S[I++],F|=N<<28,N&128&&S[I++]&128&&S[I++]&128&&S[I++]&128&&S[I++]&128&&S[I++]&128)))))throw dn();return Ge(b,I),F}function Y(b,S){if(0>S)throw Error("Tried to read a negative byte length: "+S);var I=b.h,N=I+S;if(N>b.j)throw B(S,b.j-I);return b.h=N,I}var He=[];function _e(){this.h=[]}_e.prototype.length=function(){return this.h.length},_e.prototype.end=function(){var b=this.h;return this.h=[],b};function de(b,S,I){for(;0<I||127<S;)b.h.push(S&127|128),S=(S>>>7|I<<25)>>>0,I>>>=7;b.h.push(S)}function Ae(b,S){for(;127<S;)b.h.push(S&127|128),S>>>=7;b.h.push(S)}function lt(b,S){if(He.length){var I=He.pop();ot(I,b,S),b=I}else b=new pt(b,S);this.h=b,this.j=this.h.h,this.i=this.l=-1,this.setOptions(S)}lt.prototype.setOptions=function(b){b=b===void 0?{}:b,this.ca=b.ca===void 0?!1:b.ca},lt.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function zt(b){var S=b.h;if(S.h==S.j)return!1;b.j=b.h.h;var I=Et(b.h)>>>0;if(S=I>>>3,I&=7,!(0<=I&&5>=I))throw Ut(I,b.j);if(1>S)throw Error("Invalid field number: "+S+" (at position "+b.j+")");return b.l=S,b.i=I,!0}function Rn(b){switch(b.i){case 0:if(b.i!=0)Rn(b);else e:{b=b.h;for(var S=b.h,I=S+10,N=b.i;S<I;)if(!(N[S++]&128)){Ge(b,S);break e}throw dn()}break;case 1:b=b.h,Ge(b,b.h+8);break;case 2:b.i!=2?Rn(b):(S=Et(b.h)>>>0,b=b.h,Ge(b,b.h+S));break;case 5:b=b.h,Ge(b,b.h+4);break;case 3:S=b.l;do{if(!zt(b))throw Error("Unmatched start-group tag: stream EOF");if(b.i==4){if(b.l!=S)throw Error("Unmatched end-group tag");break}Rn(b)}while(!0);break;default:throw Ut(b.i,b.j)}}var Hn=[];function ln(){this.j=[],this.i=0,this.h=new _e}function Dn(b,S){S.length!==0&&(b.j.push(S),b.i+=S.length)}function Si(b,S){if(S=S.R){Dn(b,b.h.end());for(var I=0;I<S.length;I++)Dn(b,Zt(S[I])||nt())}}var _i=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Ir(b,S){return _i?b[_i]|=S:b.A!==void 0?b.A|=S:(Object.defineProperties(b,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}}),S)}function ta(b,S){_i?b[_i]&&(b[_i]&=~S):b.A!==void 0&&(b.A&=~S)}function _n(b){var S;return _i?S=b[_i]:S=b.A,S??0}function ks(b,S){_i?b[_i]=S:b.A!==void 0?b.A=S:Object.defineProperties(b,{A:{value:S,configurable:!0,writable:!0,enumerable:!1}})}function pl(b){return Ir(b,1),b}function Kh(b,S){ks(S,(b|0)&-51)}function ml(b,S){ks(S,(b|18)&-41)}var Ku={};function gl(b){return b!==null&&typeof b=="object"&&!Array.isArray(b)&&b.constructor===Object}var L,Q=[];ks(Q,23),L=Object.freeze(Q);function ie(b){if(_n(b.o)&2)throw Error("Cannot mutate an immutable Message")}function oe(b){var S=b.length;(S=S?b[S-1]:void 0)&&gl(S)?S.g=1:(S={},b.push((S.g=1,S)))}function re(b){var S=b.i+b.G;return b.B||(b.B=b.o[S]={})}function De(b,S){return S===-1?null:S>=b.i?b.B?b.B[S]:void 0:b.o[S+b.G]}function Ke(b,S,I,N){ie(b),at(b,S,I,N)}function at(b,S,I,N){b.j&&(b.j=void 0),S>=b.i||N?re(b)[S]=I:(b.o[S+b.G]=I,(b=b.B)&&S in b&&delete b[S])}function ct(b,S,I,N){var F=De(b,S);Array.isArray(F)||(F=L);var V=_n(F);if(V&1||pl(F),N)V&2||Ir(F,2),I&1||Object.freeze(F);else{N=!(I&2);var z=V&2;I&1||!z?N&&V&16&&!z&&ta(F,16):(F=pl(Array.prototype.slice.call(F)),at(b,S,F))}return F}function Tt(b,S){var I=De(b,S),N=I==null?I:typeof I=="number"||I==="NaN"||I==="Infinity"||I==="-Infinity"?Number(I):void 0;return N!=null&&N!==I&&at(b,S,N),N}function vt(b,S,I,N,F){b.h||(b.h={});var V=b.h[I],z=ct(b,I,3,F);if(!V){var j=z;V=[];var se=!!(_n(b.o)&16);z=!!(_n(j)&2);var ve=j;!F&&z&&(j=Array.prototype.slice.call(j));for(var ke=z,mt=0;mt<j.length;mt++){var it=j[mt],Ve=S,gt=!1;if(gt=gt===void 0?!1:gt,it=Array.isArray(it)?new Ve(it):gt?new Ve:void 0,it!==void 0){Ve=it.o;var Ft=gt=_n(Ve);z&&(Ft|=2),se&&(Ft|=16),Ft!=gt&&ks(Ve,Ft),Ve=Ft,ke=ke||!!(2&Ve),V.push(it)}}return b.h[I]=V,se=_n(j),S=se|33,S=ke?S&-9:S|8,se!=S&&(ke=j,Object.isFrozen(ke)&&(ke=Array.prototype.slice.call(ke)),ks(ke,S),j=ke),ve!==j&&at(b,I,j),(F||N&&z)&&Ir(V,2),N&&Object.freeze(V),V}return F||(F=Object.isFrozen(V),N&&!F?Object.freeze(V):!N&&F&&(V=Array.prototype.slice.call(V),b.h[I]=V)),V}function wt(b,S,I){var N=!!(_n(b.o)&2);if(S=vt(b,S,I,N,N),b=ct(b,I,3,N),!(N||_n(b)&8)){for(N=0;N<S.length;N++){if(I=S[N],_n(I.o)&2){var F=ar(I,!1);F.j=I}else F=I;I!==F&&(S[N]=F,b[N]=F.o)}Ir(b,8)}return S}function Kt(b,S,I){if(I!=null&&typeof I!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof I+": "+I);Ke(b,S,I)}function ys(b,S,I,N,F){ie(b);var V=vt(b,I,S,!1,!1);return I=N??new I,b=ct(b,S,2,!1),F!=null?(V.splice(F,0,I),b.splice(F,0,I.o)):(V.push(I),b.push(I.o)),I.C()&&ta(b,8),I}function Mn(b,S){return b??S}function Xn(b,S,I){return I=I===void 0?0:I,Mn(Tt(b,S),I)}var un;function kt(b){switch(typeof b){case"number":return isFinite(b)?b:String(b);case"object":if(b)if(Array.isArray(b)){if(_n(b)&128)return b=Array.prototype.slice.call(b),oe(b),b}else{if(le&&b!=null&&b instanceof Uint8Array)return Fe(b);if(b instanceof Bt){var S=b.V;return S==null?"":typeof S=="string"?S:b.V=Fe(S)}}}return b}function xl(b,S,I,N){if(b!=null){if(Array.isArray(b))b=pn(b,S,I,N!==void 0);else if(gl(b)){var F={},V;for(V in b)F[V]=xl(b[V],S,I,N);b=F}else b=S(b,N);return b}}function pn(b,S,I,N){var F=_n(b);N=N?!!(F&16):void 0,b=Array.prototype.slice.call(b);for(var V=0;V<b.length;V++)b[V]=xl(b[V],S,I,N);return I(F,b),b}function Rr(b){return b.ja===Ku?b.toJSON():kt(b)}function jh(b,S){b&128&&oe(S)}function go(b,S,I){if(I=I===void 0?ml:I,b!=null){if(le&&b instanceof Uint8Array)return b.length?new Bt(new Uint8Array(b),rt):Ce();if(Array.isArray(b)){var N=_n(b);return N&2?b:S&&!(N&32)&&(N&16||N===0)?(ks(b,N|2),b):(b=pn(b,go,N&4?ml:I,!0),S=_n(b),S&4&&S&2&&Object.freeze(b),b)}return b.ja===Ku?Zn(b):b}}function yl(b,S,I,N,F,V,z){if(b=b.h&&b.h[I]){if(N=_n(b),N&2?N=b:(V=ee(b,Zn),ml(N,V),Object.freeze(V),N=V),ie(S),z=N==null?L:pl([]),N!=null){for(V=!!N.length,b=0;b<N.length;b++){var j=N[b];V=V&&!(_n(j.o)&2),z[b]=j.o}V=(V?8:0)|1,b=_n(z),(b&V)!==V&&(Object.isFrozen(z)&&(z=Array.prototype.slice.call(z)),ks(z,b|V)),S.h||(S.h={}),S.h[I]=N}else S.h&&(S.h[I]=void 0);at(S,I,z,F)}else Ke(S,I,go(N,V,z),F)}function Zn(b){return _n(b.o)&2||(b=ar(b,!0),Ir(b.o,2)),b}function ar(b,S){var I=b.o,N=[];Ir(N,16);var F=b.constructor.h;if(F&&N.push(F),F=b.B,F){N.length=I.length,N.fill(void 0,N.length,I.length);var V={};N[N.length-1]=V}_n(I)&128&&oe(N),S=S||b.C()?ml:Kh,V=b.constructor,un=N,N=new V(N),un=void 0,b.R&&(N.R=b.R.slice()),V=!!(_n(I)&16);for(var z=F?I.length-1:I.length,j=0;j<z;j++)yl(b,N,j-b.G,I[j],!1,V,S);if(F)for(var se in F)yl(b,N,+se,F[se],!0,V,S);return N}function rs(b,S,I){b==null&&(b=un),un=void 0;var N=this.constructor.i||0,F=0<N,V=this.constructor.h,z=!1;if(b==null){b=V?[V]:[];var j=48,se=!0;F&&(N=0,j|=128),ks(b,j)}else{if(!Array.isArray(b)||V&&V!==b[0])throw Error();var ve=j=Ir(b,0);if((se=(16&ve)!==0)&&((z=(32&ve)!==0)||(ve|=32)),F){if(128&ve)N=0;else if(0<b.length){var ke=b[b.length-1];if(gl(ke)&&"g"in ke){N=0,ve|=128,delete ke.g;var mt=!0,it;for(it in ke){mt=!1;break}mt&&b.pop()}}}else if(128&ve)throw Error();j!==ve&&ks(b,ve)}this.G=(V?0:-1)-N,this.h=void 0,this.o=b;e:{if(V=this.o.length,N=V-1,V&&(V=this.o[N],gl(V))){this.B=V,this.i=N-this.G;break e}S!==void 0&&-1<S?(this.i=Math.max(S,N+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!F&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(I){S=se&&!z&&!0,F=this.i;var Ve;for(se=0;se<I.length;se++)z=I[se],z<F?(z+=this.G,(N=b[z])?$s(N,S):b[z]=L):(Ve||(Ve=re(this)),(N=Ve[z])?$s(N,S):Ve[z]=L)}}rs.prototype.toJSON=function(){return pn(this.o,Rr,jh)},rs.prototype.C=function(){return!!(_n(this.o)&2)};function $s(b,S){if(Array.isArray(b)){var I=_n(b),N=1;!S||I&2||(N|=16),(I&N)!==N&&ks(b,I|N)}}rs.prototype.ja=Ku,rs.prototype.toString=function(){return this.o.toString()};function bl(b,S,I){if(I){var N={},F;for(F in I){var V=I[F],z=V.ra;z||(N.J=V.xa||V.oa.W,V.ia?(N.aa=Ww(V.ia),z=function(j){return function(se,ve,ke){return j.J(se,ve,ke,j.aa)}}(N)):V.ka?(N.Z=Gw(V.da.P,V.ka),z=function(j){return function(se,ve,ke){return j.J(se,ve,ke,j.Z)}}(N)):z=N.J,V.ra=z),z(S,b,V.da),N={J:N.J,aa:N.aa,Z:N.Z}}}Si(S,b)}var vl=Symbol();function ju(b,S,I){return b[vl]||(b[vl]=function(N,F){return S(N,F,I)})}function Bw(b){var S=b[vl];if(!S){var I=Qp(b);S=function(N,F){return Hw(N,F,I)},b[vl]=S}return S}function jM(b){var S=b.ia;if(S)return Bw(S);if(S=b.wa)return ju(b.da.P,S,b.ka)}function YM(b){var S=jM(b),I=b.da,N=b.oa.U;return S?function(F,V){return N(F,V,I,S)}:function(F,V){return N(F,V,I)}}function zw(b,S){var I=b[S];return typeof I=="function"&&I.length===0&&(I=I(),b[S]=I),Array.isArray(I)&&(Zu in I||Yu in I||0<I.length&&typeof I[0]=="function")?I:void 0}function Vw(b,S,I,N,F,V){S.P=b[0];var z=1;if(b.length>z&&typeof b[z]!="number"){var j=b[z++];I(S,j)}for(;z<b.length;){I=b[z++];for(var se=z+1;se<b.length&&typeof b[se]!="number";)se++;switch(j=b[z++],se-=z,se){case 0:N(S,I,j);break;case 1:(se=zw(b,z))?(z++,F(S,I,j,se)):N(S,I,j,b[z++]);break;case 2:se=z++,se=zw(b,se),F(S,I,j,se,b[z++]);break;case 3:V(S,I,j,b[z++],b[z++],b[z++]);break;case 4:V(S,I,j,b[z++],b[z++],b[z++],b[z++]);break;default:throw Error("unexpected number of binary field arguments: "+se)}}return S}var Yh=Symbol();function Ww(b){var S=b[Yh];if(!S){var I=Jp(b);S=function(N,F){return Xw(N,F,I)},b[Yh]=S}return S}function Gw(b,S){var I=b[Yh];return I||(I=function(N,F){return bl(N,F,S)},b[Yh]=I),I}var Yu=Symbol();function ZM(b,S){b.push(S)}function JM(b,S,I){b.push(S,I.W)}function QM(b,S,I,N){var F=Ww(N),V=Jp(N).P,z=I.W;b.push(S,function(j,se,ve){return z(j,se,ve,V,F)})}function eN(b,S,I,N,F,V){var z=Gw(N,V),j=I.W;b.push(S,function(se,ve,ke){return j(se,ve,ke,N,z)})}function Jp(b){var S=b[Yu];return S||(S=Vw(b,b[Yu]=[],ZM,JM,QM,eN),Zu in b&&Yu in b&&(b.length=0),S)}var Zu=Symbol();function tN(b,S){b[0]=S}function nN(b,S,I,N){var F=I.U;b[S]=N?function(V,z,j){return F(V,z,j,N)}:F}function sN(b,S,I,N,F){var V=I.U,z=Bw(N),j=Qp(N).P;b[S]=function(se,ve,ke){return V(se,ve,ke,j,z,F)}}function iN(b,S,I,N,F,V,z){var j=I.U,se=ju(N,F,V);b[S]=function(ve,ke,mt){return j(ve,ke,mt,N,se,z)}}function Qp(b){var S=b[Zu];return S||(S=Vw(b,b[Zu]={},tN,nN,sN,iN),Zu in b&&Yu in b&&(b.length=0),S)}function Hw(b,S,I){for(;zt(S)&&S.i!=4;){var N=S.l,F=I[N];if(!F){var V=I[0];V&&(V=V[N])&&(F=I[N]=YM(V))}if(!F||!F(S,b,N)){F=S,N=b,V=F.j,Rn(F);var z=F;if(!z.ca){if(F=z.h.h-V,z.h.h=V,z=z.h,F==0)F=Ce();else{if(V=Y(z,F),z.S&&z.m)F=z.i.subarray(V,V+F);else{z=z.i;var j=V;F=V+F,F=j===F?nt():X?z.slice(j,F):new Uint8Array(z.subarray(j,F))}F=F.length==0?Ce():new Bt(F,rt)}(V=N.R)?V.push(F):N.R=[F]}}}return b}function Xw(b,S,I){for(var N=I.length,F=N%2==1,V=F?1:0;V<N;V+=2)(0,I[V+1])(S,b,I[V]);bl(b,S,F?I[0]:void 0)}function Ju(b,S){return{U:b,W:S}}var zi=Ju(function(b,S,I){if(b.i!==5)return!1;b=b.h;var N=b.i,F=b.h,V=N[F],z=N[F+1],j=N[F+2];return N=N[F+3],Ge(b,b.h+4),z=(V<<0|z<<8|j<<16|N<<24)>>>0,b=2*(z>>31)+1,V=z>>>23&255,z&=8388607,Ke(S,I,V==255?z?NaN:1/0*b:V==0?b*Math.pow(2,-149)*z:b*Math.pow(2,V-150)*(z+Math.pow(2,23))),!0},function(b,S,I){if(S=Tt(S,I),S!=null){Ae(b.h,8*I+5),b=b.h;var N=+S;N===0?0<1/N?ye=ue=0:(ue=0,ye=2147483648):isNaN(N)?(ue=0,ye=2147483647):(N=(I=0>N?-2147483648:0)?-N:N,34028234663852886e22<N?(ue=0,ye=(I|2139095040)>>>0):11754943508222875e-54>N?(N=Math.round(N/Math.pow(2,-149)),ue=0,ye=(I|N)>>>0):(S=Math.floor(Math.log(N)/Math.LN2),N*=Math.pow(2,-S),N=Math.round(8388608*N),16777216<=N&&++S,ue=0,ye=(I|S+127<<23|N&8388607)>>>0)),I=ye,b.h.push(I>>>0&255),b.h.push(I>>>8&255),b.h.push(I>>>16&255),b.h.push(I>>>24&255)}}),rN=Ju(function(b,S,I){if(b.i!==0)return!1;var N=b.h,F=0,V=b=0,z=N.i,j=N.h;do{var se=z[j++];F|=(se&127)<<V,V+=7}while(32>V&&se&128);for(32<V&&(b|=(se&127)>>4),V=3;32>V&&se&128;V+=7)se=z[j++],b|=(se&127)<<V;if(Ge(N,j),128>se)N=F>>>0,se=b>>>0,(b=se&2147483648)&&(N=~N+1>>>0,se=~se>>>0,N==0&&(se=se+1>>>0)),N=4294967296*se+(N>>>0);else throw dn();return Ke(S,I,b?-N:N),!0},function(b,S,I){S=De(S,I),S!=null&&(typeof S=="string"&&qe(S),S!=null&&(Ae(b.h,8*I),typeof S=="number"?(b=b.h,Me(S),de(b,ye,ue)):(I=qe(S),de(b.h,I.i,I.h))))}),oN=Ju(function(b,S,I){return b.i!==0?!1:(Ke(S,I,Et(b.h)),!0)},function(b,S,I){if(S=De(S,I),S!=null&&S!=null)if(Ae(b.h,8*I),b=b.h,I=S,0<=I)Ae(b,I);else{for(S=0;9>S;S++)b.h.push(I&127|128),I>>=7;b.h.push(1)}}),qw=Ju(function(b,S,I){if(b.i!==2)return!1;var N=Et(b.h)>>>0;b=b.h;var F=Y(b,N);if(b=b.i,Ee){var V=b,z;(z=be)||(z=be=new TextDecoder("utf-8",{fatal:!0})),b=F+N,V=F===0&&b===V.length?V:V.subarray(F,b);try{var j=z.decode(V)}catch(mt){if(Se===void 0){try{z.decode(new Uint8Array([128]))}catch{}try{z.decode(new Uint8Array([97])),Se=!0}catch{Se=!1}}throw!Se&&(be=void 0),mt}}else{j=F,N=j+N,F=[];for(var se=null,ve,ke;j<N;)ve=b[j++],128>ve?F.push(ve):224>ve?j>=N?k():(ke=b[j++],194>ve||(ke&192)!==128?(j--,k()):F.push((ve&31)<<6|ke&63)):240>ve?j>=N-1?k():(ke=b[j++],(ke&192)!==128||ve===224&&160>ke||ve===237&&160<=ke||((V=b[j++])&192)!==128?(j--,k()):F.push((ve&15)<<12|(ke&63)<<6|V&63)):244>=ve?j>=N-2?k():(ke=b[j++],(ke&192)!==128||(ve<<28)+(ke-144)>>30||((V=b[j++])&192)!==128||((z=b[j++])&192)!==128?(j--,k()):(ve=(ve&7)<<18|(ke&63)<<12|(V&63)<<6|z&63,ve-=65536,F.push((ve>>10&1023)+55296,(ve&1023)+56320))):k(),8192<=F.length&&(se=te(se,F),F.length=0);j=te(se,F)}return Ke(S,I,j),!0},function(b,S,I){if(S=De(S,I),S!=null){var N=!1;if(N=N===void 0?!1:N,Ne){if(N&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(S))throw Error("Found an unpaired surrogate");S=(tt||(tt=new TextEncoder)).encode(S)}else{for(var F=0,V=new Uint8Array(3*S.length),z=0;z<S.length;z++){var j=S.charCodeAt(z);if(128>j)V[F++]=j;else{if(2048>j)V[F++]=j>>6|192;else{if(55296<=j&&57343>=j){if(56319>=j&&z<S.length){var se=S.charCodeAt(++z);if(56320<=se&&57343>=se){j=1024*(j-55296)+se-56320+65536,V[F++]=j>>18|240,V[F++]=j>>12&63|128,V[F++]=j>>6&63|128,V[F++]=j&63|128;continue}else z--}if(N)throw Error("Found an unpaired surrogate");j=65533}V[F++]=j>>12|224,V[F++]=j>>6&63|128}V[F++]=j&63|128}}S=F===V.length?V:V.subarray(0,F)}Ae(b.h,8*I+2),Ae(b.h,S.length),Dn(b,b.h.end()),Dn(b,S)}}),Kw=Ju(function(b,S,I,N,F){if(b.i!==2)return!1;S=ys(S,I,N),I=b.h.j,N=Et(b.h)>>>0;var V=b.h.h+N,z=V-I;if(0>=z&&(b.h.j=V,F(S,b,void 0,void 0,void 0),z=V-b.h.h),z)throw Error("Message parsing ended unexpectedly. Expected to read "+(N+" bytes, instead read "+(N-z)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return b.h.h=V,b.h.j=I,!0},function(b,S,I,N,F){if(S=wt(S,N,I),S!=null)for(N=0;N<S.length;N++){var V=b;Ae(V.h,8*I+2);var z=V.h.end();Dn(V,z),z.push(V.i),V=z,F(S[N],b),z=b;var j=V.pop();for(j=z.i+z.h.length()-j;127<j;)V.push(j&127|128),j>>>=7,z.i++;V.push(j),z.i++}});function em(b){return function(S,I){e:{if(Hn.length){var N=Hn.pop();N.setOptions(I),ot(N.h,S,I),S=N}else S=new lt(S,I);try{var F=Qp(b),V=Hw(new F.P,S,F);break e}finally{F=S.h,F.i=null,F.m=!1,F.l=0,F.j=0,F.h=0,F.S=!1,S.l=-1,S.i=-1,100>Hn.length&&Hn.push(S)}V=void 0}return V}}function tm(b){return function(){var S=new ln;Xw(this,S,Jp(b)),Dn(S,S.h.end());for(var I=new Uint8Array(S.i),N=S.j,F=N.length,V=0,z=0;z<F;z++){var j=N[z];I.set(j,V),V+=j.length}return S.j=[I],I}}function wl(b){rs.call(this,b)}m(wl,rs);var jw=[wl,1,oN,2,zi,3,qw,4,qw];wl.prototype.l=tm(jw);function nm(b){rs.call(this,b,-1,aN)}m(nm,rs),nm.prototype.addClassification=function(b,S){return ys(this,1,wl,b,S),this};var aN=[1],lN=em([nm,1,Kw,jw]);function Qu(b){rs.call(this,b)}m(Qu,rs);var Yw=[Qu,1,zi,2,zi,3,zi,4,zi,5,zi];Qu.prototype.l=tm(Yw);function Zw(b){rs.call(this,b,-1,uN)}m(Zw,rs);var uN=[1],cN=em([Zw,1,Kw,Yw]);function Zh(b){rs.call(this,b)}m(Zh,rs);var Jw=[Zh,1,zi,2,zi,3,zi,4,zi,5,zi,6,rN],hN=em(Jw);Zh.prototype.l=tm(Jw);function Qw(b,S,I){if(I=b.createShader(I===0?b.VERTEX_SHADER:b.FRAGMENT_SHADER),b.shaderSource(I,S),b.compileShader(I),!b.getShaderParameter(I,b.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+b.getShaderInfoLog(I));return I}function dN(b){return wt(b,wl,1).map(function(S){var I=De(S,1);return{index:I??0,qa:Xn(S,2),label:De(S,3)!=null?Mn(De(S,3),""):void 0,displayName:De(S,4)!=null?Mn(De(S,4),""):void 0}})}function fN(b){return{x:Xn(b,1),y:Xn(b,2),z:Xn(b,3),visibility:Tt(b,4)!=null?Xn(b,4):void 0}}function sm(b){return wt(cN(b),Qu,1).map(fN)}function im(b,S){this.i=b,this.h=S,this.m=0}function e1(b,S,I){return pN(b,S),typeof b.h.canvas.transferToImageBitmap=="function"?Promise.resolve(b.h.canvas.transferToImageBitmap()):I?Promise.resolve(b.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(b.h.canvas):(b.j===void 0&&(b.j=document.createElement("canvas")),new Promise(function(N){b.j.height=b.h.canvas.height,b.j.width=b.h.canvas.width,b.j.getContext("2d",{}).drawImage(b.h.canvas,0,0,b.h.canvas.width,b.h.canvas.height),N(b.j)}))}function pN(b,S){var I=b.h;if(b.s===void 0){var N=Qw(I,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),F=Qw(I,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),V=I.createProgram();if(I.attachShader(V,N),I.attachShader(V,F),I.linkProgram(V),!I.getProgramParameter(V,I.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+I.getProgramInfoLog(V));N=b.s=V,I.useProgram(N),F=I.getUniformLocation(N,"sampler0"),b.l={O:I.getAttribLocation(N,"aVertex"),N:I.getAttribLocation(N,"aTex"),ya:F},b.v=I.createBuffer(),I.bindBuffer(I.ARRAY_BUFFER,b.v),I.enableVertexAttribArray(b.l.O),I.vertexAttribPointer(b.l.O,2,I.FLOAT,!1,0,0),I.bufferData(I.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),I.STATIC_DRAW),I.bindBuffer(I.ARRAY_BUFFER,null),b.u=I.createBuffer(),I.bindBuffer(I.ARRAY_BUFFER,b.u),I.enableVertexAttribArray(b.l.N),I.vertexAttribPointer(b.l.N,2,I.FLOAT,!1,0,0),I.bufferData(I.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),I.STATIC_DRAW),I.bindBuffer(I.ARRAY_BUFFER,null),I.uniform1i(F,0)}N=b.l,I.useProgram(b.s),I.canvas.width=S.width,I.canvas.height=S.height,I.viewport(0,0,S.width,S.height),I.activeTexture(I.TEXTURE0),b.i.bindTexture2d(S.glName),I.enableVertexAttribArray(N.O),I.bindBuffer(I.ARRAY_BUFFER,b.v),I.vertexAttribPointer(N.O,2,I.FLOAT,!1,0,0),I.enableVertexAttribArray(N.N),I.bindBuffer(I.ARRAY_BUFFER,b.u),I.vertexAttribPointer(N.N,2,I.FLOAT,!1,0,0),I.bindFramebuffer(I.DRAW_FRAMEBUFFER?I.DRAW_FRAMEBUFFER:I.FRAMEBUFFER,null),I.clearColor(0,0,0,0),I.clear(I.COLOR_BUFFER_BIT),I.colorMask(!0,!0,!0,!0),I.drawArrays(I.TRIANGLE_FAN,0,4),I.disableVertexAttribArray(N.O),I.disableVertexAttribArray(N.N),I.bindBuffer(I.ARRAY_BUFFER,null),b.i.bindTexture2d(0)}function mN(b){this.h=b}var gN=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function xN(b,S){return S+b}function t1(b,S){window[b]=S}function yN(b){var S=document.createElement("script");return S.setAttribute("src",b),S.setAttribute("crossorigin","anonymous"),new Promise(function(I){S.addEventListener("load",function(){I()},!1),S.addEventListener("error",function(){I()},!1),document.body.appendChild(S)})}function bN(){return $(function(b){switch(b.h){case 1:return b.s=2,w(b,WebAssembly.instantiate(gN),4);case 4:b.h=3,b.s=0;break;case 2:return b.s=0,b.l=null,b.return(!1);case 3:return b.return(!0)}})}function rm(b){if(this.h=b,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=b&&b.locateFile||xN,typeof window=="object")var S=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")S=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=S,b.options){S=a(Object.keys(b.options));for(var I=S.next();!I.done;I=S.next()){I=I.value;var N=b.options[I].default;N!==void 0&&(this.l[I]=typeof N=="function"?N():N)}}}s=rm.prototype,s.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function vN(b){var S,I,N,F,V,z,j,se,ve,ke,mt;return $(function(it){switch(it.h){case 1:return b.ga?(S=b.h.files===void 0?[]:typeof b.h.files=="function"?b.h.files(b.l):b.h.files,w(it,bN(),2)):it.return();case 2:if(I=it.i,typeof window=="object")return t1("createMediapipeSolutionsWasm",{locateFile:b.locateFile}),t1("createMediapipeSolutionsPackedAssets",{locateFile:b.locateFile}),z=S.filter(function(Ve){return Ve.data!==void 0}),j=S.filter(function(Ve){return Ve.data===void 0}),se=Promise.all(z.map(function(Ve){var gt=Jh(b,Ve.url);if(Ve.path!==void 0){var Ft=Ve.path;gt=gt.then(function(Sn){return b.overrideFile(Ft,Sn),Promise.resolve(Sn)})}return gt})),ve=Promise.all(j.map(function(Ve){return Ve.simd===void 0||Ve.simd&&I||!Ve.simd&&!I?yN(b.locateFile(Ve.url,b.ha)):Promise.resolve()})).then(function(){var Ve,gt,Ft;return $(function(Sn){if(Sn.h==1)return Ve=window.createMediapipeSolutionsWasm,gt=window.createMediapipeSolutionsPackedAssets,Ft=b,w(Sn,Ve(gt),2);Ft.i=Sn.i,Sn.h=0})}),ke=function(){return $(function(Ve){return b.h.graph&&b.h.graph.url?Ve=w(Ve,Jh(b,b.h.graph.url),0):(Ve.h=0,Ve=void 0),Ve})}(),w(it,Promise.all([ve,se,ke]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return N=S.filter(function(Ve){return Ve.simd===void 0||Ve.simd&&I||!Ve.simd&&!I}).map(function(Ve){return b.locateFile(Ve.url,b.ha)}),importScripts.apply(null,l(N)),F=b,w(it,createMediapipeSolutionsWasm(Module),6);case 6:F.i=it.i,b.m=new OffscreenCanvas(1,1),b.i.canvas=b.m,V=b.i.GL.createContext(b.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),b.i.GL.makeContextCurrent(V),it.h=4;break;case 7:if(b.m=document.createElement("canvas"),mt=b.m.getContext("webgl2",{}),!mt&&(mt=b.m.getContext("webgl",{}),!mt))return alert("Failed to create WebGL canvas context when passing video frame."),it.return();b.K=mt,b.i.canvas=b.m,b.i.createContext(b.m,!0,!0,{});case 4:b.j=new b.i.SolutionWasm,b.ga=!1,it.h=0}})}function wN(b){var S,I,N,F,V,z,j,se;return $(function(ve){if(ve.h==1){if(b.h.graph&&b.h.graph.url&&b.fa===b.h.graph.url)return ve.return();if(b.u=!0,!b.h.graph||!b.h.graph.url){ve.h=2;return}return b.fa=b.h.graph.url,w(ve,Jh(b,b.h.graph.url),3)}for(ve.h!=2&&(S=ve.i,b.j.loadGraph(S)),I=a(Object.keys(b.D)),N=I.next();!N.done;N=I.next())F=N.value,b.j.overrideFile(F,b.D[F]);if(b.D={},b.h.listeners)for(V=a(b.h.listeners),z=V.next();!z.done;z=V.next())j=z.value,TN(b,j);se=b.l,b.l={},b.setOptions(se),ve.h=0})}s.reset=function(){var b=this;return $(function(S){b.j&&(b.j.reset(),b.s={},b.v={}),S.h=0})},s.setOptions=function(b,S){var I=this;if(S=S||this.h.options){for(var N=[],F=[],V={},z=a(Object.keys(b)),j=z.next();!j.done;V={X:V.X,Y:V.Y},j=z.next())if(j=j.value,!(j in this.l&&this.l[j]===b[j])){this.l[j]=b[j];var se=S[j];se!==void 0&&(se.onChange&&(V.X=se.onChange,V.Y=b[j],N.push(function(ve){return function(){var ke;return $(function(mt){if(mt.h==1)return w(mt,ve.X(ve.Y),2);ke=mt.i,ke===!0&&(I.u=!0),mt.h=0})}}(V))),se.graphOptionXref&&(j=Object.assign({},{calculatorName:"",calculatorIndex:0},se.graphOptionXref,{valueNumber:se.type===1?b[j]:0,valueBoolean:se.type===0?b[j]:!1,valueString:se.type===2?b[j]:""}),F.push(j)))}(N.length!==0||F.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(F),this.F=(this.F===void 0?[]:this.F).concat(N))}};function SN(b){var S,I,N,F,V,z,j;return $(function(se){switch(se.h){case 1:if(!b.u)return se.return();if(!b.F){se.h=2;break}S=a(b.F),I=S.next();case 3:if(I.done){se.h=5;break}return N=I.value,w(se,N(),4);case 4:I=S.next(),se.h=3;break;case 5:b.F=void 0;case 2:if(b.H){for(F=new b.i.GraphOptionChangeRequestList,V=a(b.H),z=V.next();!z.done;z=V.next())j=z.value,F.push_back(j);b.j.changeOptions(F),F.delete(),b.H=void 0}b.u=!1,se.h=0}})}s.initialize=function(){var b=this;return $(function(S){return S.h==1?w(S,vN(b),2):S.h!=3?w(S,wN(b),3):w(S,SN(b),0)})};function Jh(b,S){var I,N;return $(function(F){return S in b.L?F.return(b.L[S]):(I=b.locateFile(S,""),N=fetch(I).then(function(V){return V.arrayBuffer()}),b.L[S]=N,F.return(N))})}s.overrideFile=function(b,S){this.j?this.j.overrideFile(b,S):this.D[b]=S},s.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},s.send=function(b,S){var I=this,N,F,V,z,j,se,ve,ke,mt;return $(function(it){switch(it.h){case 1:return I.h.inputs?(N=1e3*(S??performance.now()),w(it,I.I,2)):it.return();case 2:return w(it,I.initialize(),3);case 3:for(F=new I.i.PacketDataList,V=a(Object.keys(b)),z=V.next();!z.done;z=V.next())if(j=z.value,se=I.h.inputs[j]){e:{var Ve=b[j];switch(se.type){case"video":var gt=I.s[se.stream];if(gt||(gt=new im(I.i,I.K),I.s[se.stream]=gt),gt.m===0&&(gt.m=gt.i.createTexture()),typeof HTMLVideoElement<"u"&&Ve instanceof HTMLVideoElement)var Ft=Ve.videoWidth,Sn=Ve.videoHeight;else typeof HTMLImageElement<"u"&&Ve instanceof HTMLImageElement?(Ft=Ve.naturalWidth,Sn=Ve.naturalHeight):(Ft=Ve.width,Sn=Ve.height);Sn={glName:gt.m,width:Ft,height:Sn},Ft=gt.h,Ft.canvas.width=Sn.width,Ft.canvas.height=Sn.height,Ft.activeTexture(Ft.TEXTURE0),gt.i.bindTexture2d(gt.m),Ft.texImage2D(Ft.TEXTURE_2D,0,Ft.RGBA,Ft.RGBA,Ft.UNSIGNED_BYTE,Ve),gt.i.bindTexture2d(0),gt=Sn;break e;case"detections":for(gt=I.s[se.stream],gt||(gt=new mN(I.i),I.s[se.stream]=gt),gt.data||(gt.data=new gt.h.DetectionListData),gt.data.reset(Ve.length),Sn=0;Sn<Ve.length;++Sn){Ft=Ve[Sn];var mn=gt.data,ds=mn.setBoundingBox,Ci=Sn,Hs=Ft.la,jt=new Zh;if(Kt(jt,1,Hs.sa),Kt(jt,2,Hs.ta),Kt(jt,3,Hs.height),Kt(jt,4,Hs.width),Kt(jt,5,Hs.rotation),Ke(jt,6,Hs.pa),Hs=jt.l(),ds.call(mn,Ci,Hs),Ft.ea)for(mn=0;mn<Ft.ea.length;++mn){jt=Ft.ea[mn],ds=gt.data,Ci=ds.addNormalizedLandmark,Hs=Sn,jt=Object.assign({},jt,{visibility:jt.visibility?jt.visibility:0});var fs=new Qu;Kt(fs,1,jt.x),Kt(fs,2,jt.y),Kt(fs,3,jt.z),jt.visibility&&Kt(fs,4,jt.visibility),jt=fs.l(),Ci.call(ds,Hs,jt)}if(Ft.ba)for(mn=0;mn<Ft.ba.length;++mn)ds=gt.data,Ci=ds.addClassification,Hs=Sn,jt=Ft.ba[mn],fs=new wl,Kt(fs,2,jt.qa),jt.index&&Ke(fs,1,jt.index),jt.label&&Ke(fs,3,jt.label),jt.displayName&&Ke(fs,4,jt.displayName),jt=fs.l(),Ci.call(ds,Hs,jt)}gt=gt.data;break e;default:gt={}}}switch(ve=gt,ke=se.stream,se.type){case"video":F.pushTexture2d(Object.assign({},ve,{stream:ke,timestamp:N}));break;case"detections":mt=ve,mt.stream=ke,mt.timestamp=N,F.pushDetectionList(mt);break;default:throw Error("Unknown input config type: '"+se.type+"'")}}return I.j.send(F),w(it,I.I,4);case 4:F.delete(),it.h=0}})};function _N(b,S,I){var N,F,V,z,j,se,ve,ke,mt,it,Ve,gt,Ft,Sn;return $(function(mn){switch(mn.h){case 1:if(!I)return mn.return(S);for(N={},F=0,V=a(Object.keys(I)),z=V.next();!z.done;z=V.next())j=z.value,se=I[j],typeof se!="string"&&se.type==="texture"&&S[se.stream]!==void 0&&++F;1<F&&(b.M=!1),ve=a(Object.keys(I)),z=ve.next();case 2:if(z.done){mn.h=4;break}if(ke=z.value,mt=I[ke],typeof mt=="string")return Ft=N,Sn=ke,w(mn,CN(b,ke,S[mt]),14);if(it=S[mt.stream],mt.type==="detection_list"){if(it){for(var ds=it.getRectList(),Ci=it.getLandmarksList(),Hs=it.getClassificationsList(),jt=[],fs=0;fs<ds.size();++fs){var xo=hN(ds.get(fs)),EN=Xn(xo,1),AN=Xn(xo,2),IN=Xn(xo,3),RN=Xn(xo,4),MN=Xn(xo,5,0),Qh=void 0;Qh=Qh===void 0?0:Qh,xo={la:{sa:EN,ta:AN,height:IN,width:RN,rotation:MN,pa:Mn(De(xo,6),Qh)},ea:sm(Ci.get(fs)),ba:dN(lN(Hs.get(fs)))},jt.push(xo)}ds=jt}else ds=[];N[ke]=ds,mn.h=7;break}if(mt.type==="proto_list"){if(it){for(ds=Array(it.size()),Ci=0;Ci<it.size();Ci++)ds[Ci]=it.get(Ci);it.delete()}else ds=[];N[ke]=ds,mn.h=7;break}if(it===void 0){mn.h=3;break}if(mt.type==="float_list"){N[ke]=it,mn.h=7;break}if(mt.type==="proto"){N[ke]=it,mn.h=7;break}if(mt.type!=="texture")throw Error("Unknown output config type: '"+mt.type+"'");return Ve=b.v[ke],Ve||(Ve=new im(b.i,b.K),b.v[ke]=Ve),w(mn,e1(Ve,it,b.M),13);case 13:gt=mn.i,N[ke]=gt;case 7:mt.transform&&N[ke]&&(N[ke]=mt.transform(N[ke])),mn.h=3;break;case 14:Ft[Sn]=mn.i;case 3:z=ve.next(),mn.h=2;break;case 4:return mn.return(N)}})}function CN(b,S,I){var N;return $(function(F){return typeof I=="number"||I instanceof Uint8Array||I instanceof b.i.Uint8BlobList?F.return(I):I instanceof b.i.Texture2dDataOut?(N=b.v[S],N||(N=new im(b.i,b.K),b.v[S]=N),F.return(e1(N,I,b.M))):F.return(void 0)})}function TN(b,S){for(var I=S.name||"$",N=[].concat(l(S.wants)),F=new b.i.StringList,V=a(S.wants),z=V.next();!z.done;z=V.next())F.push_back(z.value);V=b.i.PacketListener.implement({onResults:function(j){for(var se={},ve=0;ve<S.wants.length;++ve)se[N[ve]]=j.get(ve);var ke=b.listeners[I];ke&&(b.I=_N(b,se,S.outs).then(function(mt){mt=ke(mt);for(var it=0;it<S.wants.length;++it){var Ve=se[N[it]];typeof Ve=="object"&&Ve.hasOwnProperty&&Ve.hasOwnProperty("delete")&&Ve.delete()}mt&&(b.I=mt)}))}}),b.j.attachMultiListener(F,V),F.delete()}s.onResults=function(b,S){this.listeners[S||"$"]=b},H("Solution",rm),H("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function n1(b){switch(b===void 0&&(b=0),b){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function s1(b){var S=this;b=b||{},this.h=new rm({locateFile:b.locateFile,files:function(I){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:n1(I.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:sm},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:sm},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(I){var N,F,V;return $(function(z){return z.h==1?(N=n1(I),F="third_party/mediapipe/modules/pose_landmark/"+N,w(z,Jh(S.h,N),2)):(V=z.i,S.h.overrideFile(F,V),z.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}s=s1.prototype,s.reset=function(){this.h.reset()},s.close=function(){return this.h.close(),Promise.resolve()},s.onResults=function(b){this.h.onResults(b)},s.initialize=function(){var b=this;return $(function(S){return w(S,b.h.initialize(),0)})},s.send=function(b,S){var I=this;return $(function(N){return w(N,I.h.send(b,S),0)})},s.setOptions=function(b){this.h.setOptions(b)},H("Pose",s1),H("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),H("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),H("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),H("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),H("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),H("VERSION","0.5.1675469404")}).call(gr);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=J();c8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ks;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ks||(Ks={}));var b_;(function(s){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(b_||(b_={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8={};function oR(s){return h8[s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E(s,e,t,n,i){const r=e.inputParams[s];if(r&&r.inputIndexStart!==void 0){const a=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?a+1:r.inputIndexEnd,u=a<0?e.inputNames.length+a:a;if(r.type==="tensor")return ls(e.inputNames[u],t,n,i);if(r.type==="tensors"){const d=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((p,x)=>{var m;return((m=d[x])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(p=>ls(p,t,n,i))}const c=ls(e.inputNames[u],t,n,i),h=c.dataSync();return r.type==="number"?h[0]:ux(c.shape,h)}const o=e.attrParams[s];return o&&o.value}function ls(s,e,t,n){const[i,r]=js(s,t);if(n!=null){const a=n.getHashTableHandleByName(i);if(a!=null)return a}const o=t.currentContextIds.find(a=>!!e[Of(i,a)]);return o!==void 0?e[Of(i,o)][r]:void 0}function v_(s,e,t){return e[Of(s,t.currentContextId)]}function Lr(s,e){const[t,n,i]=js(s,e);return[Of(t,e&&e.currentContextId),n,i]}function Of(s,e){return e?`${s}-${e}`:s}function js(s,e){if(s==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const r=e.parseNodeNameCache.get(s);if(r!=null)return r}const n=s.split(":");let i;if(n.length===1)i=[s,0,void 0];else{const r=n[0],o=n.length===3?n[1]:void 0,a=Number(n[n.length-1]);i=[r,a,o]}return t&&e.parseNodeNameCache.set(s,i),i}function ff(s,e,t){let n=E("pad",s,e,t);if(n==="explicit"){n=E("explicitPaddings",s,e,t);const i=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)i[r][0]=n[r*2],i[r][1]=n[r*2+1];return i}return n}function Or(s){return s.kept?s:Lo(s)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],f8=Object.freeze(Object.defineProperty({__proto__:null,json:d8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],m8=Object.freeze(Object.defineProperty({__proto__:null,json:p8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],x8=Object.freeze(Object.defineProperty({__proto__:null,json:g8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],b8=Object.freeze(Object.defineProperty({__proto__:null,json:y8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],w8=Object.freeze(Object.defineProperty({__proto__:null,json:v8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S8=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_8=Object.freeze(Object.defineProperty({__proto__:null,json:S8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],T8=Object.freeze(Object.defineProperty({__proto__:null,json:C8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],A8=Object.freeze(Object.defineProperty({__proto__:null,json:E8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],R8=Object.freeze(Object.defineProperty({__proto__:null,json:I8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],N8=Object.freeze(Object.defineProperty({__proto__:null,json:M8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],k8=Object.freeze(Object.defineProperty({__proto__:null,json:P8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],D8=Object.freeze(Object.defineProperty({__proto__:null,json:$8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],O8=Object.freeze(Object.defineProperty({__proto__:null,json:L8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],U8=Object.freeze(Object.defineProperty({__proto__:null,json:F8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],z8=Object.freeze(Object.defineProperty({__proto__:null,json:B8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],W8=Object.freeze(Object.defineProperty({__proto__:null,json:V8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],H8=Object.freeze(Object.defineProperty({__proto__:null,json:G8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],q8=Object.freeze(Object.defineProperty({__proto__:null,json:X8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],j8=Object.freeze(Object.defineProperty({__proto__:null,json:K8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w_{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[f8,m8,x8,b8,w8,_8,T8,A8,R8,N8,k8,D8,O8,U8,z8,W8,H8,q8,j8],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,i)=>(n[i.tfOpName]=i,n),{})}transformGraph(e,t={}){const n=e.node,i=[],r=[],o=[],a=n.reduce((x,m)=>(x[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?i.push(x[m.name]):m.op==="Const"?r.push(x[m.name]):(m.input==null||m.input.length===0)&&o.push(x[m.name]),x),{});let l=[];const u=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(x=>{const m=a[x];m.inputNames.forEach((g,y)=>{const[v,,w]=Lr(g),_=a[v];if(_.outputs!=null){const T=_.outputs.indexOf(w);if(T!==-1){const A=`${v}:${T}`;m.inputNames[y]=A}}m.inputs.push(_),_.children.push(m)})}),Object.keys(h).length===0?d.forEach(x=>{const m=a[x];m.children.length===0&&u.push(m)}):Object.keys(h).forEach(x=>{const[m]=Lr(x),g=a[m];g!=null&&(g.signatureKey=h[x],u.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(x=>{const[m]=Lr(x),g=a[m];g&&(g.signatureKey=c[x],l.push(g))}):l=i;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((x,m)=>(x[m.signature.name]=this.mapFunction(m),x),{}));const p={nodes:a,inputs:l,outputs:u,weights:r,placeholders:i,signature:t,functions:f};return o.length>0&&(p.initNodes=o),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=oR(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(i=>i.startsWith("^")?i.slice(1):i),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((i,r)=>(i[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},i),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((i,r)=>{const o=r.type;let a;switch(r.type){case"string":a=Rx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Rx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":a=Lx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Lx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":a=Nx(e.attr,r.tfName,r.defaultValue||0),a===void 0&&r.tfDeprecatedName&&(a=Nx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":a=Dx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Dx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":a=Mx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Mx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":a=Fx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Fx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":a=$x(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=$x(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":a=Ox(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Ox(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":a=Px(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=Px(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":a=kx(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=kx(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":a=S_(e.attr,r.tfName,r.defaultValue),a===void 0&&r.tfDeprecatedName&&(a=S_(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return i[r.name]={value:a,type:o},i},{})),n}mapFunction(e){const t=e.nodeDef,n=[],i=[];let r={};t!=null&&(r=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&i.push(h[d.name]),h),{}));const o=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=Lr(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Tw(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,o.push(f),r[d]=f}),Object.keys(r).forEach(h=>{const d=r[h];d.inputNames.forEach((f,p)=>{const[x,,m]=Lr(f),g=r[x];if(g.outputs!=null){const y=g.outputs.indexOf(m);if(y!==-1){const v=`${x}:${y}`;d.inputNames[p]=v}}d.inputs.push(g),g.children.push(d)})});const u=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=Lr(u[h.name]),p=r[d];p!=null&&(p.defaultOutput=f,a.push(p))});const c=this.mapArgsToSignature(e);return{nodes:r,inputs:o,outputs:a,weights:i,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}}function Y8(s){const e=J().global;if(typeof e.atob<"u")return e.atob(s);if(typeof Buffer<"u")return new Buffer(s,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function aR(s,e){const t=Array.isArray(s)?String.fromCharCode.apply(null,s):Y8(s);return e?t:t.toLowerCase()}function Rx(s,e,t,n=!1){const i=s[e];return i!=null?aR(i.s,n):t}function Mx(s,e,t){const n=s[e];return n?n.b:t}function Nx(s,e,t){const n=s[e]||{},i=n.i!=null?n.i:n.f!=null?n.f:t;return typeof i=="number"?i:parseInt(i,10)}function Tw(s){switch(typeof s=="string"&&(s=Ks[s]),s){case Ks.DT_FLOAT:case Ks.DT_HALF:return"float32";case Ks.DT_INT32:case Ks.DT_INT64:case Ks.DT_INT8:case Ks.DT_UINT8:return"int32";case Ks.DT_BOOL:return"bool";case Ks.DT_DOUBLE:return"float32";case Ks.DT_STRING:return"string";case Ks.DT_COMPLEX64:case Ks.DT_COMPLEX128:return"complex64";default:return null}}function S_(s,e,t){const n=s[e];return n&&n.func?n.func.name:t}function Px(s,e,t){const n=s[e];return n&&n.type?Tw(n.type):t}function kx(s,e,t){const n=s[e];return n&&n.list&&n.list.type?n.list.type.map(i=>Tw(i)):t}function lR(s){if(!s.unknownRank)return s.dim!=null?s.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function $x(s,e,t){const n=s[e];return n&&n.shape?lR(n.shape):t}function Dx(s,e,t){const n=s[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(i=>typeof i=="number"?i:parseInt(i,10)):t}function Lx(s,e,t,n=!1){const i=s[e];return i&&i.list&&i.list.s?i.list.s.map(r=>aR(r,n)):t}function Ox(s,e,t){const n=s[e];return n&&n.list&&n.list.shape?n.list.shape.map(i=>lR(i)):t}function Fx(s,e,t){const n=s[e];return n&&n.list&&n.list.b?n.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z8{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(i=>this.getInput(i)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((i,r)=>(i[r]=this.getAttr(r),i),{}))}getInput(e){return ls(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(n.tensor!=null)return ls(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Nx(this.node.rawAttrs,e,t);if(n.s!=null)return Rx(this.node.rawAttrs,e,t);if(n.b!=null)return Mx(this.node.rawAttrs,e,t);if(n.shape!=null)return $x(this.node.rawAttrs,e,t);if(n.type!=null)return Px(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Dx(this.node.rawAttrs,e,t);if(n.list.s!=null)return Lx(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Ox(this.node.rawAttrs,e,t);if(n.list.b!=null)return Fx(this.node.rawAttrs,e,t);if(n.list.type!=null)return kx(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:_A,abs:fi,acos:yz,acosh:vz,add:Je,addN:Sz,all:Cz,any:Ez,argMax:UA,argMin:Rz,asin:Nz,asinh:kz,atan:Dz,atan2:Oz,atanh:Uz,avgPool:BA,avgPool3d:qz,basicLSTMCell:eV,batchNorm:Pp,batchNorm2d:rV,batchNorm3d:aV,batchNorm4d:uV,batchToSpaceND:zA,bincount:VA,bitwiseAnd:dV,booleanMaskAsync:jH,broadcastArgs:pV,broadcastTo:Ic,buffer:tn,cast:hn,ceil:xV,clipByValue:WA,clone:Lo,complex:zo,concat:ts,concat1d:vV,concat2d:SV,concat3d:CV,concat4d:EV,conv1d:RV,conv2d:kp,conv2dTranspose:PV,conv3d:$V,conv3dTranspose:FV,cos:BV,cosh:VV,cosineWindow:Gv,cumprod:GV,cumsum:XV,denseBincount:KV,depthToSpace:YV,depthwiseConv2d:Iv,diag:QV,dilation2d:t4,div:Dt,divNoNan:o4,dot:l4,dropout:l5,einsum:jl,elu:qA,enclosingPowerOfTwo:_I,ensureShape:d4,equal:XA,erf:p4,euclideanNorm:_4,exp:no,expandDims:pi,expm1:A4,eye:YA,fft:zv,fill:Oh,floor:ZA,floorDiv:FA,fused:_5,gather:JA,gatherND:r5,greater:Dp,greaterEqual:QA,ifft:Lf,imag:Lp,image:La,inTopKAsync:c5,irfft:gI,isFinite:L4,isInf:F4,isNaN:B4,leakyRelu:eI,less:Cx,lessEqual:Mv,linalg:tX,linspace:G4,localResponseNormalization:X4,log:lh,log1p:tI,logSigmoid:Q4,logSoftmax:nW,logSumExp:sI,logicalAnd:$f,logicalNot:iI,logicalOr:rI,logicalXor:lW,losses:nX,lowerBound:cW,matMul:sn,max:au,maxPool:oI,maxPool3d:fW,maxPoolWithArgmax:mW,maximum:aI,mean:Df,meshgrid:yW,min:_x,minimum:uh,mirrorPad:lI,mod:SW,moments:CW,movingAverage:JH,mul:we,multiRNNCell:EW,multinomial:IW,neg:yr,norm:$p,notEqual:uI,oneHot:NW,ones:Ma,onesLike:kW,op:G,outerProduct:DW,pad:Wo,pad1d:FW,pad2d:BW,pad3d:VW,pad4d:GW,pool:jW,pow:ah,prelu:hI,print:OA,prod:JW,raggedGather:eG,raggedRange:nG,raggedTensorToTensor:iG,rand:oG,randomGamma:EG,randomNormal:fI,randomStandardNormal:RG,randomUniform:Bv,randomUniformInt:PG,range:ch,real:hh,reciprocal:DG,relu:Op,relu6:pI,reshape:he,reverse:ja,reverse1d:BG,reverse2d:VG,reverse3d:GG,reverse4d:XG,rfft:Vv,round:mI,rsqrt:jG,scalar:Pt,scatterND:e5,searchSorted:Nv,selu:ZG,separableConv2d:QG,setdiff1dAsync:tH,sigmoid:Gr,sign:sH,signal:eX,sin:rH,sinh:aH,slice:Nt,slice1d:uH,slice2d:hH,slice3d:fH,slice4d:mH,softmax:xH,softplus:nI,spaceToBatchND:cI,sparse:sX,sparseToDense:s5,spectral:Q6,split:dh,sqrt:to,square:ki,squaredDifference:xI,squeeze:nn,stack:ro,step:yI,stridedSlice:IH,string:iX,sub:St,sum:yn,tan:MH,tanh:Sx,tensor:xr,tensor1d:ps,tensor2d:$i,tensor3d:bI,tensor4d:NH,tensor5d:PH,tensor6d:kH,tensorScatterUpdate:DH,tile:Rc,topk:OH,transpose:Tx,truncatedNormal:UH,unique:zH,unsortedSegmentSum:WH,unstack:rl,upperBound:HH,variable:XH,where:Oo,whereAsync:SI,zeros:io,zerosLike:yi},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8=(s,e,t,n=cs)=>{switch(s.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(E("a",s,e,t),E("b",s,e,t))];case"AddN":return[n.addN(E("tensors",s,e,t))];case"FloorMod":case"Mod":return[n.mod(E("a",s,e,t),E("b",s,e,t))];case"Mul":return[n.mul(E("a",s,e,t),E("b",s,e,t))];case"RealDiv":case"Div":return[n.div(E("a",s,e,t),E("b",s,e,t))];case"DivNoNan":return[n.divNoNan(E("a",s,e,t),E("b",s,e,t))];case"FloorDiv":return[n.floorDiv(E("a",s,e,t),E("b",s,e,t))];case"Sub":return[n.sub(E("a",s,e,t),E("b",s,e,t))];case"Minimum":return[n.minimum(E("a",s,e,t),E("b",s,e,t))];case"Maximum":return[n.maximum(E("a",s,e,t),E("b",s,e,t))];case"Pow":return[n.pow(E("a",s,e,t),E("b",s,e,t))];case"SquaredDifference":return[n.squaredDifference(E("a",s,e,t),E("b",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=(s,e,t,n=cs)=>{switch(s.op){case"Abs":case"ComplexAbs":return[n.abs(E("x",s,e,t))];case"Acos":return[n.acos(E("x",s,e,t))];case"Acosh":return[n.acosh(E("x",s,e,t))];case"Asin":return[n.asin(E("x",s,e,t))];case"Asinh":return[n.asinh(E("x",s,e,t))];case"Atan":return[n.atan(E("x",s,e,t))];case"Atan2":return[n.atan2(E("x",s,e,t),E("y",s,e,t))];case"Atanh":return[n.atanh(E("x",s,e,t))];case"Ceil":return[n.ceil(E("x",s,e,t))];case"Complex":return[n.complex(E("real",s,e,t),E("imag",s,e,t))];case"Cos":return[n.cos(E("x",s,e,t))];case"Cosh":return[n.cosh(E("x",s,e,t))];case"Elu":return[n.elu(E("x",s,e,t))];case"Erf":return[n.erf(E("x",s,e,t))];case"Exp":return[n.exp(E("x",s,e,t))];case"Expm1":return[n.expm1(E("x",s,e,t))];case"Floor":return[n.floor(E("x",s,e,t))];case"Log":return[n.log(E("x",s,e,t))];case"Log1p":return[n.log1p(E("x",s,e,t))];case"Imag":return[n.imag(E("x",s,e,t))];case"Neg":return[n.neg(E("x",s,e,t))];case"Reciprocal":return[n.reciprocal(E("x",s,e,t))];case"Real":return[n.real(E("x",s,e,t))];case"Relu":return[n.relu(E("x",s,e,t))];case"Round":return[n.round(E("x",s,e,t))];case"Selu":return[n.selu(E("x",s,e,t))];case"Sigmoid":return[n.sigmoid(E("x",s,e,t))];case"Sin":return[n.sin(E("x",s,e,t))];case"Sign":return[n.sign(E("x",s,e,t))];case"Sinh":return[n.sinh(E("x",s,e,t))];case"Softplus":return[n.softplus(E("x",s,e,t))];case"Sqrt":return[n.sqrt(E("x",s,e,t))];case"Square":return[n.square(E("x",s,e,t))];case"Tanh":return[n.tanh(E("x",s,e,t))];case"Tan":return[n.tan(E("x",s,e,t))];case"ClipByValue":return[n.clipByValue(E("x",s,e,t),E("clipValueMin",s,e,t),E("clipValueMax",s,e,t))];case"Relu6":return[n.relu6(E("x",s,e,t))];case"Rsqrt":return[n.rsqrt(ls(s.inputNames[0],e,t))];case"LeakyRelu":return[n.leakyRelu(E("x",s,e,t),E("alpha",s,e,t))];case"Prelu":return[n.prelu(E("x",s,e,t),E("alpha",s,e,t))];case"IsNan":return[n.isNaN(ls(s.inputNames[0],e,t))];case"IsInf":return[n.isInf(ls(s.inputNames[0],e,t))];case"IsFinite":return[n.isFinite(ls(s.inputNames[0],e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ai(s,e,t=""){if(!(typeof s=="number"||typeof e=="number")){D(s.length===e.length,()=>t+` Shapes ${s} and ${e} must match`);for(let n=0;n<s.length;n++){const i=s[n],r=e[n];D(i<0||r<0||i===r,()=>t+` Shapes ${s} and ${e} must match`)}}}function __(s){return!(typeof s=="number"||s.some(e=>e<0))}function fc(s,e,t){let n=Ux(s,t);const i=!__(n);if(i&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(i&&e.forEach(r=>{n=Ux(r.shape,n)}),!__(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Ux(s,e){if(typeof s=="number")return e;if(typeof e=="number")return s;if(s.length!==e.length)throw new Error(`Incompatible ranks during merge: ${s} vs. ${e}`);const t=[];for(let n=0;n<s.length;++n){const i=s[n],r=e[n];if(i>=0&&r>=0&&i!==r)throw new Error(`Incompatible shape during merge: ${s} vs. ${e}`);t[n]=i>=0?i:r}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eq{constructor(e,t,n,i,r,o,a){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=i,this.identicalElementShapes=r,this.dynamicSize=o,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Pt(0),dr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ai(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,dr(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,i)=>this.write(n,t[i]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(e.length===0)return xr([],[0].concat(this.elementShape));const n=this.readMany(e);return Ai(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ro(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return xr([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const n=this.readMany(t);return Ai(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ts(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,rl(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const i=e.map(l=>(n+=l,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=n===0?0:t.size/n,o=[];ht(()=>{t=he(t,[1,n,r]);for(let l=0;l<e.length;++l){const c=[0,l===0?0:i[l-1],0],h=[1,e[l],r];o[l]=he(Nt(t,c,h),this.elementShape)}return o});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Za{get id(){return this.idTensor.id}constructor(e,t,n,i=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);Ai(t,r.shape,"TensorList shape mismatch: "),dr(r)}),this.idTensor=Pt(0),this.maxNumElements=i,dr(this.idTensor)}copy(){return new Za([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ai(e,this.elementShape,"TensorList shape mismatch: ");const i=fc(this.elementShape,this.tensors,e);return ht(()=>{const r=this.tensors.map(o=>he(o,i));return ro(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const n=fc(this.elementShape,this.tensors,e),i=this.tensors.pop();return i.kept=!1,Ai(i.shape,e,"TensorList shape mismatch: "),he(i,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ai(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");dr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Za([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ai(this.tensors[e].shape,t,"TensorList shape mismatch: ");const i=fc(this.elementShape,this.tensors,t);return he(this.tensors[e],i)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ai(this.elementShape,t.shape,"TensorList shape mismatch: "),dr(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ai(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const i=fc(this.elementShape,this.tensors,n);return e.length===0?xr([],[0].concat(i)):ht(()=>{const r=e.map(o=>he(this.tensors[o],i));return ro(r,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ai(this.elementShape,t,"TensorList shape mismatch: ");const n=fc(this.elementShape,this.tensors,t);return this.size()===0?xr([],[0].concat(n)):ht(()=>{const i=this.tensors.map(r=>he(r,n));return ts(i,0)})}}function tq(s,e,t){const n=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==t)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${t}`);const i=s.shape.slice(1);Ai(i,e,"TensorList shape mismatch: ");const r=rl(s);return new Za(r,e,n)}function nq(s,e,t,n){return new Za([],s,e,n)}function sq(s,e,t,n){if(e.length!==s.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${s.shape[0]}`);const i=Math.max(...e);if(n!=null&&n!==-1&&i>=n)throw new Error(`Max index must be < array size (${i}  vs. ${n})`);const r=new Za([],t,s.dtype,n),o=rl(s,0);return e.forEach((a,l)=>{r.setItem(a,o[l])}),r}function iq(s,e,t){let n=0;const i=e.map(c=>(n+=c,n));if(n!==s.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${s.shape}`);const r=s.shape.slice(1),o=Ux(r,t),a=n===0?0:s.size/n,l=ht(()=>{const c=[];s=he(s,[1,n,a]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:i[h-1],0],p=[1,e[h],a];c[h]=he(Nt(s,f,p),o)}return s.dispose(),c}),u=new Za([],t,s.dtype,e.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=async(s,e,t)=>{switch(s.op){case"If":case"StatelessIf":{const n=E("thenBranch",s,e,t),i=E("elseBranch",s,e,t),r=E("cond",s,e,t),o=E("args",s,e,t);return(await r.data())[0]?t.functionMap[n].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[i].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const n=E("body",s,e,t),i=E("cond",s,e,t),r=E("args",s,e,t),o=await t.functionMap[i].executeFunctionAsync(r,t.tensorArrayMap,t.tensorListMap),a=r.map(c=>c.id);let l=await o[0].data();o.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=r;for(;l[0];){const c=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await t.functionMap[i].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const n=E("pred",s,e,t);return[Or(n)]}case"Switch":{const n=E("pred",s,e,t);let i=E("data",s,e,t);return i.kept||(i=Or(i)),(await n.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const n=s.inputNames.find(i=>ls(i,e,t)!==void 0);if(n){const i=ls(n,e,t);return[Or(i)]}return}case"Enter":{const n=E("frameName",s,e,t),i=E("tensor",s,e,t);return t.enterFrame(n),[Or(i)]}case"Exit":{const n=E("tensor",s,e,t);return t.exitFrame(),[Or(n)]}case"NextIteration":{const n=E("tensor",s,e,t);return t.nextIteration(),[Or(n)]}case"TensorArrayV3":{const n=E("size",s,e,t),i=E("dtype",s,e,t),r=E("elementShape",s,e,t),o=E("dynamicSize",s,e,t),a=E("clearAfterRead",s,e,t),l=E("identicalElementShapes",s,e,t),u=E("name",s,e,t),c=new eq(u,i,n,r,l,o,a);return t.addTensorArray(c),[c.idTensor,Pt(1)]}case"TensorArrayWriteV3":{const n=E("tensorArrayId",s,e,t),i=E("index",s,e,t),r=E("tensor",s,e,t),o=t.getTensorArray(n.id);return o.write(i,r),[o.idTensor]}case"TensorArrayReadV3":{const n=E("tensorArrayId",s,e,t),i=E("index",s,e,t);return[t.getTensorArray(n.id).read(i)]}case"TensorArrayGatherV3":{const n=E("tensorArrayId",s,e,t),i=E("indices",s,e,t),r=E("dtype",s,e,t);return[t.getTensorArray(n.id).gather(i,r)]}case"TensorArrayScatterV3":{const n=E("tensorArrayId",s,e,t),i=E("indices",s,e,t),r=E("tensor",s,e,t),o=t.getTensorArray(n.id);return o.scatter(i,r),[o.idTensor]}case"TensorArrayConcatV3":{const n=E("tensorArrayId",s,e,t),i=t.getTensorArray(n.id),r=E("dtype",s,e,t);return[i.concat(r)]}case"TensorArraySplitV3":{const n=E("tensorArrayId",s,e,t),i=E("tensor",s,e,t),r=E("lengths",s,e,t),o=t.getTensorArray(n.id);return o.split(r,i),[o.idTensor]}case"TensorArraySizeV3":{const n=E("tensorArrayId",s,e,t),i=t.getTensorArray(n.id);return[Pt(i.size(),"int32")]}case"TensorArrayCloseV3":{const n=E("tensorArrayId",s,e,t),i=t.getTensorArray(n.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const n=E("tensorListId",s,e,t),i=E("index",s,e,t),r=E("tensor",s,e,t),o=t.getTensorList(n.id);return o.setItem(i,r),[o.idTensor]}case"TensorListGetItem":{const n=E("tensorListId",s,e,t),i=E("index",s,e,t),r=E("elementShape",s,e,t),o=E("elementDType",s,e,t);return[t.getTensorList(n.id).getItem(i,r,o)]}case"TensorListScatterV2":case"TensorListScatter":{const n=E("indices",s,e,t),i=E("tensor",s,e,t),r=E("elementShape",s,e,t),o=E("numElements",s,e,t),a=sq(i,n,r,o);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const n=E("elementShape",s,e,t),i=E("elementDType",s,e,t);let r;s.op==="TensorListReserve"?r="numElements":r="maxNumElements";const o=E(r,s,e,t),a=s.op==="TensorListReserve"?-1:o,l=nq(n,i,o,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const n=E("tensorListId",s,e,t),i=E("indices",s,e,t),r=E("elementShape",s,e,t),o=E("elementDType",s,e,t);return[t.getTensorList(n.id).gather(i,o,r)]}case"TensorListStack":{const n=E("tensorListId",s,e,t),i=E("elementShape",s,e,t),r=E("elementDType",s,e,t),o=E("numElements",s,e,t);return[t.getTensorList(n.id).stack(i,r,o)]}case"TensorListFromTensor":{const n=E("tensor",s,e,t),i=E("elementShape",s,e,t),r=E("elementDType",s,e,t),o=tq(n,i,r);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const n=E("tensorListId",s,e,t),i=t.getTensorList(n.id),r=E("dtype",s,e,t),o=E("elementShape",s,e,t);return[i.concat(r,o)]}case"TensorListPushBack":{const n=E("tensorListId",s,e,t),i=E("tensor",s,e,t),r=t.getTensorList(n.id);return r.pushBack(i),[r.idTensor]}case"TensorListPopBack":{const n=E("tensorListId",s,e,t),i=E("elementShape",s,e,t),r=E("elementDType",s,e,t);return[t.getTensorList(n.id).popBack(i,r)]}case"TensorListSplit":{const n=E("tensor",s,e,t),i=E("elementShape",s,e,t),r=E("lengths",s,e,t),o=iq(n,r,i);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const n=E("tensorListId",s,e,t),i=t.getTensorList(n.id);return[Pt(i.size(),"int32")]}case"TensorListResize":{const n=E("tensorListId",s,e,t),i=E("size",s,e,t),o=t.getTensorList(n.id).resize(i);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(s,e,t){const[n,i]=E("fusedOps",s,e,t),r=n==="biasadd",o=!r,a=i==="prelu",l=n==="fusedbatchnorm",u=E("numArgs",s,e,t);if(r){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&r&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=E("strides",s,e,t),h=ff(s,e,t),d=E("dataFormat",s,e,t).toUpperCase(),f=E("dilations",s,e,t);let[p,x]=E("args",s,e,t);o&&(x=p,p=void 0);const m=E("leakyreluAlpha",s,e,t);return{stride:c,pad:h,dataFormat:d,dilations:f,biasArg:p,preluArg:x,activationFunc:i,leakyreluAlpha:m}}const oq=(s,e,t,n=cs)=>{switch(s.op){case"Conv1D":{const i=E("stride",s,e,t),r=E("pad",s,e,t),o=E("dataFormat",s,e,t).toUpperCase(),a=E("dilation",s,e,t);return[n.conv1d(E("x",s,e,t),E("filter",s,e,t),i,r,o,a)]}case"Conv2D":{const i=E("strides",s,e,t),r=ff(s,e,t),o=E("dataFormat",s,e,t).toUpperCase(),a=E("dilations",s,e,t);return[n.conv2d(E("x",s,e,t),E("filter",s,e,t),[i[1],i[2]],r,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:i,pad:r,dataFormat:o,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=C_(s,e,t);return[n.fused.conv2d({x:E("x",s,e,t),filter:E("filter",s,e,t),strides:[i[1],i[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:i,pad:r,dataFormat:o,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=C_(s,e,t);return[n.fused.depthwiseConv2d({x:E("x",s,e,t),filter:E("filter",s,e,t),strides:[i[1],i[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const i=E("outputShape",s,e,t),r=E("strides",s,e,t),o=ff(s,e,t);return[n.conv2dTranspose(E("x",s,e,t),E("filter",s,e,t),i,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const i=E("strides",s,e,t),r=ff(s,e,t),o=E("dilations",s,e,t),a=E("dataFormat",s,e,t).toUpperCase();return[n.depthwiseConv2d(E("input",s,e,t),E("filter",s,e,t),[i[1],i[2]],r,a,[o[1],o[2]])]}case"Conv3D":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("dataFormat",s,e,t).toUpperCase(),a=E("dilations",s,e,t);return[n.conv3d(E("x",s,e,t),E("filter",s,e,t),[i[1],i[2],i[3]],r,o,[a[1],a[2],a[3]])]}case"AvgPool":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("kernelSize",s,e,t);return[n.avgPool(E("x",s,e,t),[o[1],o[2]],[i[1],i[2]],r)]}case"MaxPool":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("kernelSize",s,e,t);return[n.maxPool(E("x",s,e,t),[o[1],o[2]],[i[1],i[2]],r)]}case"MaxPoolWithArgmax":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("kernelSize",s,e,t),a=E("includeBatchInIndex",s,e,t),{result:l,indexes:u}=n.maxPoolWithArgmax(E("x",s,e,t),[o[1],o[2]],[i[1],i[2]],r,a);return[l,u]}case"AvgPool3D":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("kernelSize",s,e,t);return[n.avgPool3d(E("x",s,e,t),[o[1],o[2],o[3]],[i[1],i[2],i[3]],r)]}case"MaxPool3D":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("kernelSize",s,e,t);return[n.maxPool3d(E("x",s,e,t),[o[1],o[2],o[3]],[i[1],i[2],i[3]],r)]}case"Dilation2D":{const i=E("strides",s,e,t),r=E("pad",s,e,t),o=E("dilations",s,e,t),a=i[1],l=i[2],u=o[1],c=o[2];return[n.dilation2d(E("x",s,e,t),E("filter",s,e,t),[a,l],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq=(s,e,t,n=cs)=>{switch(s.op){case"Fill":{const i=E("shape",s,e,t),r=E("dtype",s,e,t),o=E("value",s,e,t);return[n.fill(i,o,r)]}case"LinSpace":{const i=E("start",s,e,t),r=E("stop",s,e,t),o=E("num",s,e,t);return[n.linspace(i,r,o)]}case"Multinomial":{const i=E("logits",s,e,t),r=E("numSamples",s,e,t),o=E("seed",s,e,t);return[n.multinomial(i,r,o)]}case"OneHot":{const i=E("indices",s,e,t),r=E("depth",s,e,t),o=E("onValue",s,e,t),a=E("offValue",s,e,t),l=E("dtype",s,e,t);return[n.oneHot(i,r,o,a,l)]}case"Ones":return[n.ones(E("shape",s,e,t),E("dtype",s,e,t))];case"OnesLike":return[n.onesLike(E("x",s,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(E("shape",s,e,t),E("dtype",s,e,t),E("seed",s,e,t))];case"RandomUniform":return[n.randomUniform(E("shape",s,e,t),E("minval",s,e,t),E("maxval",s,e,t),E("dtype",s,e,t))];case"RandomUniformInt":return[n.randomUniformInt(E("shape",s,e,t),E("minval",s,e,t),E("maxval",s,e,t),E("seed",s,e,t))];case"Range":{const i=E("start",s,e,t),r=E("stop",s,e,t),o=E("step",s,e,t);return[n.range(i,r,o,E("dtype",s,e,t))]}case"TruncatedNormal":{const i=E("shape",s,e,t),r=E("mean",s,e,t),o=E("stdDev",s,e,t),a=E("seed",s,e,t);return[n.truncatedNormal(i,r,o,E("dtype",s,e,t),a)]}case"Zeros":return[n.zeros(E("shape",s,e,t),E("dtype",s,e,t))];case"ZerosLike":return[n.zerosLike(E("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jm(s,e,t){const n=E("boxes",s,e,t),i=E("scores",s,e,t),r=E("maxOutputSize",s,e,t),o=E("iouThreshold",s,e,t),a=E("scoreThreshold",s,e,t),l=E("softNmsSigma",s,e,t);return{boxes:n,scores:i,maxOutputSize:r,iouThreshold:o,scoreThreshold:a,softNmsSigma:l}}const lq=async(s,e,t,n,i=cs)=>{switch(s.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Jm(s,e,t),h=await i.image.nonMaxSuppressionWithScoreAsync(r,o,a,l,u,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Jm(s,e,t),c=E("padToMaxOutputSize",s,e,t),h=await i.image.nonMaxSuppressionPaddedAsync(r,o,a,l,u,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Jm(s,e,t);return[await i.image.nonMaxSuppressionAsync(r,o,a,l,u)]}case"Where":{const r=i.cast(E("condition",s,e,t),"bool"),o=[await i.whereAsync(r)];return r.dispose(),o}case"ListDiff":return i.setdiff1dAsync(E("x",s,e,t),E("y",s,e,t));default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq=(s,e,t,n=cs)=>{switch(s.op){case"LowerBound":{const i=E("sortedSequence",s,e,t),r=E("values",s,e,t);return[n.lowerBound(i,r)]}case"TopKV2":{const i=E("x",s,e,t),r=E("k",s,e,t),o=E("sorted",s,e,t),a=n.topk(i,r,o);return[a.values,a.indices]}case"UpperBound":{const i=E("sortedSequence",s,e,t),r=E("values",s,e,t);return[n.upperBound(i,r)]}case"Unique":{const i=E("x",s,e,t),r=n.unique(i);return[r.values,r.indices]}case"UniqueV2":{const i=E("x",s,e,t),r=E("axis",s,e,t),o=n.unique(i,r);return[o.values,o.indices]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq=(s,e,t,n=cs)=>{switch(s.op){case"Const":return e[s.name];case"PlaceholderWithDefault":const i=E("default",s,e,t);return[ls(s.name,e,t)||i];case"Placeholder":return[ls(s.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=E("x",s,e,t);return[Or(c)]}case"IdentityN":return E("x",s,e,t).map(c=>Or(c));case"Snapshot":const r=E("x",s,e,t);return[Or(r)];case"Shape":return[n.tensor1d(E("x",s,e,t).shape,"int32")];case"ShapeN":return E("x",s,e,t).map(c=>n.tensor1d(c.shape));case"Size":return[n.scalar(E("x",s,e,t).size,"int32")];case"Rank":return[n.scalar(E("x",s,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":const o=E("x",s,e,t),a=E("data",s,e,t),l=E("message",s,e,t),u=E("summarize",s,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hq{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Pt(0),this.tensorMap=new Map,dr(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Pt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(i=>i.dispose()),this.tensorMap.clear(),ht(()=>{const i=rl(t),r=n.length,o=i.length;D(r===o,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${o} elements.`);for(let a=0;a<r;a++){const l=n[a],u=i[a];dr(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ht(()=>{const i=[];for(let r=0;r<n.length;r++){const o=n[r],a=this.findWithDefault(o,t);i.push(a)}return ro(i)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq=async(s,e,t,n)=>{switch(s.op){case"HashTable":case"HashTableV2":{const i=n.getHashTableHandleByName(s.name);if(i!=null)return[i];{const r=E("keyDType",s,e,t),o=E("valueDType",s,e,t),a=new hq(r,o);return n.addHashTable(s.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const i=E("tableHandle",s,e,t,n),r=E("keys",s,e,t),o=E("values",s,e,t);return[await n.getHashTableById(i.id).import(r,o)]}case"LookupTableFind":case"LookupTableFindV2":{const i=E("tableHandle",s,e,t,n),r=E("keys",s,e,t),o=E("defaultValue",s,e,t);return[await n.getHashTableById(i.id).find(r,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const i=E("tableHandle",s,e,t,n);return[n.getHashTableById(i.id).tensorSize()]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq=(s,e,t,n=cs)=>{switch(s.op){case"ResizeBilinear":{const i=E("images",s,e,t),r=E("size",s,e,t),o=E("alignCorners",s,e,t),a=E("halfPixelCenters",s,e,t);return[n.image.resizeBilinear(i,[r[0],r[1]],o,a)]}case"ResizeNearestNeighbor":{const i=E("images",s,e,t),r=E("size",s,e,t),o=E("alignCorners",s,e,t),a=E("halfPixelCenters",s,e,t);return[n.image.resizeNearestNeighbor(i,[r[0],r[1]],o,a)]}case"CropAndResize":{const i=E("image",s,e,t),r=E("boxes",s,e,t),o=E("boxInd",s,e,t),a=E("cropSize",s,e,t),l=E("method",s,e,t),u=E("extrapolationValue",s,e,t);return[n.image.cropAndResize(i,r,o,a,l,u)]}case"ImageProjectiveTransformV3":{const i=E("images",s,e,t),r=E("transforms",s,e,t),o=E("outputShape",s,e,t),a=E("fillValue",s,e,t),l=E("interpolation",s,e,t),u=E("fillMode",s,e,t);return[n.image.transform(i,r,l.toLowerCase(),u.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=(s,e,t,n=cs)=>{switch(s.op){case"Equal":return[n.equal(E("a",s,e,t),E("b",s,e,t))];case"NotEqual":return[n.notEqual(E("a",s,e,t),E("b",s,e,t))];case"Greater":return[n.greater(E("a",s,e,t),E("b",s,e,t))];case"GreaterEqual":return[n.greaterEqual(E("a",s,e,t),E("b",s,e,t))];case"Less":return[n.less(E("a",s,e,t),E("b",s,e,t))];case"LessEqual":return[n.lessEqual(E("a",s,e,t),E("b",s,e,t))];case"LogicalAnd":return[n.logicalAnd(E("a",s,e,t),E("b",s,e,t))];case"LogicalNot":return[n.logicalNot(E("a",s,e,t))];case"LogicalOr":return[n.logicalOr(E("a",s,e,t),E("b",s,e,t))];case"Select":case"SelectV2":return[n.where(E("condition",s,e,t),E("a",s,e,t),E("b",s,e,t))];case"BitwiseAnd":return[n.bitwiseAnd(E("a",s,e,t),E("b",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq=(s,e,t,n=cs)=>{switch(s.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(E("a",s,e,t),E("b",s,e,t),E("transposeA",s,e,t),E("transposeB",s,e,t))];case"Einsum":return[n.einsum(E("equation",s,e,t),...E("tensors",s,e,t))];case"Transpose":return[n.transpose(E("x",s,e,t),E("perm",s,e,t))];case"_FusedMatMul":const[i,r]=E("fusedOps",s,e,t),o=i==="biasadd",a=r==="prelu",l=E("numArgs",s,e,t),u=E("leakyreluAlpha",s,e,t);if(o){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=E("args",s,e,t);return[n.fused.matMul({a:E("a",s,e,t),b:E("b",s,e,t),transposeA:E("transposeA",s,e,t),transposeB:E("transposeB",s,e,t),bias:c,activation:r,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[n.linalg.bandPart(E("a",s,e,t),E("numLower",s,e,t),E("numUpper",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq=(s,e,t,n=cs)=>{switch(s.op){case"EuclideanNorm":return[n.euclideanNorm(E("x",s,e,t),E("axis",s,e,t),E("keepDims",s,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(E("x",s,e,t),E("mean",s,e,t),E("variance",s,e,t),E("offset",s,e,t),E("scale",s,e,t),E("epsilon",s,e,t))];case"FusedBatchNormV3":return[n.batchNorm(E("x",s,e,t),E("mean",s,e,t),E("variance",s,e,t),E("offset",s,e,t),E("scale",s,e,t),E("epsilon",s,e,t))];case"LRN":return[n.localResponseNormalization(E("x",s,e,t),E("radius",s,e,t),E("bias",s,e,t),E("alpha",s,e,t),E("beta",s,e,t))];case"Softmax":return[n.softmax(E("x",s,e,t))];case"LogSoftmax":return[n.logSoftmax(E("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xq=(s,e,t,n=cs)=>{switch(s.op){case"RaggedGather":{const{outputNestedSplits:i,outputDenseValues:r}=n.raggedGather(E("paramsNestedSplits",s,e,t),E("paramsDenseValues",s,e,t),E("indices",s,e,t),E("outputRaggedRank",s,e,t));return i.concat(r)}case"RaggedRange":{const{rtNestedSplits:i,rtDenseValues:r}=n.raggedRange(E("starts",s,e,t),E("limits",s,e,t),E("splits",s,e,t));return[i,r]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(E("shape",s,e,t),E("values",s,e,t),E("defaultValue",s,e,t),E("rowPartitionTensors",s,e,t),E("rowPartitionTypes",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq=(s,e,t,n=cs)=>{switch(s.op){case"Max":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.max(E("x",s,e,t),a,l)]}case"Mean":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.mean(E("x",s,e,t),a,l)]}case"Min":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.min(E("x",s,e,t),a,l)]}case"Sum":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.sum(E("x",s,e,t),a,l)]}case"All":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.all(E("x",s,e,t),a,l)]}case"Any":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.any(E("x",s,e,t),a,l)]}case"ArgMax":{const a=E("axis",s,e,t);return[n.argMax(E("x",s,e,t),a)]}case"ArgMin":{const a=E("axis",s,e,t);return[n.argMin(E("x",s,e,t),a)]}case"Prod":{const a=E("axis",s,e,t),l=E("keepDims",s,e,t);return[n.prod(E("x",s,e,t),a,l)]}case"Cumprod":{const a=E("axis",s,e,t),l=E("exclusive",s,e,t),u=E("reverse",s,e,t);return[n.cumprod(E("x",s,e,t),a,l,u)]}case"Cumsum":{const a=E("axis",s,e,t),l=E("exclusive",s,e,t),u=E("reverse",s,e,t);return[n.cumsum(E("x",s,e,t),a,l,u)]}case"Bincount":const i=E("x",s,e,t),r=E("weights",s,e,t),o=E("size",s,e,t);return[n.bincount(i,r,o)];case"DenseBincount":{const a=E("x",s,e,t),l=E("weights",s,e,t),u=E("size",s,e,t),c=E("binaryOutput",s,e,t);return[n.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq=(s,e,t,n=cs)=>{switch(s.op){case"ConcatV2":case"Concat":{const i=E("n",s,e,t),r=E("axis",s,e,t);let o=E("tensors",s,e,t);return o=o.slice(0,i),[n.concat(o,r)]}case"Gather":{const i=E("x",s,e,t),r=E("indices",s,e,t);return[n.gather(i,n.cast(r,"int32"),0)]}case"GatherV2":{const i=E("axis",s,e,t),r=E("batchDims",s,e,t),o=E("x",s,e,t),a=E("indices",s,e,t);return[n.gather(o,n.cast(a,"int32"),i,r)]}case"Reverse":{const i=E("dims",s,e,t),r=[];for(let a=0;a<i.length;a++)i[a]&&r.push(a);const o=E("x",s,e,t);return[n.reverse(o,r)]}case"ReverseV2":{const i=E("axis",s,e,t),r=E("x",s,e,t);return[n.reverse(r,i)]}case"Slice":{const i=E("begin",s,e,t),r=E("size",s,e,t);return[n.slice(E("x",s,e,t),i,r)]}case"StridedSlice":{const i=E("begin",s,e,t),r=E("end",s,e,t),o=E("strides",s,e,t),a=E("beginMask",s,e,t),l=E("endMask",s,e,t),u=E("ellipsisMask",s,e,t),c=E("newAxisMask",s,e,t),h=E("shrinkAxisMask",s,e,t),d=E("x",s,e,t);return[n.stridedSlice(d,i,r,o,a,l,u,c,h)]}case"Pack":return ht(()=>{const i=E("axis",s,e,t),r=E("tensors",s,e,t),o=r[0].shape,a=n.squeeze(r[0]).shape,l=r.map(u=>{const c=en(u.shape,o);if(!c&&!en(n.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:n.reshape(u,o)});return[n.stack(l,i)]});case"Unpack":{const i=E("axis",s,e,t),r=E("tensor",s,e,t);return n.unstack(r,i)}case"Tile":{const i=E("reps",s,e,t);return[n.tile(E("x",s,e,t),i)]}case"Split":case"SplitV":{const i=E("axis",s,e,t),r=E("numOrSizeSplits",s,e,t),o=E("x",s,e,t);return n.split(o,r,i)}case"ScatterNd":{const i=E("indices",s,e,t),r=E("values",s,e,t),o=E("shape",s,e,t);return[n.scatterND(i,r,o)]}case"GatherNd":{const i=E("x",s,e,t),r=E("indices",s,e,t);return[n.gatherND(i,r)]}case"SparseToDense":{const i=E("sparseIndices",s,e,t),r=E("outputShape",s,e,t),o=E("sparseValues",s,e,t),a=E("defaultValue",s,e,t);return[n.sparseToDense(i,o,r,o.dtype===a.dtype?a:n.cast(a,o.dtype))]}case"TensorScatterUpdate":{const i=E("indices",s,e,t),r=E("values",s,e,t),o=E("tensor",s,e,t);return[n.tensorScatterUpdate(o,i,r)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=(s,e,t,n=cs)=>{switch(s.op){case"SparseFillEmptyRows":{const{outputIndices:i,outputValues:r,emptyRowIndicator:o,reverseIndexMap:a}=n.sparse.sparseFillEmptyRows(E("indices",s,e,t),E("values",s,e,t),E("denseShape",s,e,t),E("defaultValue",s,e,t));return[i,r,o,a]}case"SparseReshape":{const{outputIndices:i,outputShape:r}=n.sparse.sparseReshape(E("inputIndices",s,e,t),E("inputShape",s,e,t),E("newShape",s,e,t));return[i,r]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(E("data",s,e,t),E("indices",s,e,t),E("segmentIds",s,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(E("data",s,e,t),E("indices",s,e,t),E("segmentIds",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wq=(s,e,t,n=cs)=>{switch(s.op){case"FFT":return[n.fft(E("x",s,e,t))];case"IFFT":return[n.ifft(E("x",s,e,t))];case"RFFT":return[n.rfft(E("x",s,e,t))];case"IRFFT":return[n.irfft(E("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq=(s,e,t,n=cs)=>{switch(s.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(E("input",s,e,t),E("pattern",s,e,t),E("rewrite",s,e,t),E("replaceGlobal",s,e,t))];case"StringNGrams":{const{nGrams:i,nGramsSplits:r}=n.string.stringNGrams(E("data",s,e,t),E("dataSplits",s,e,t),E("separator",s,e,t),E("nGramWidths",s,e,t),E("leftPad",s,e,t),E("rightPad",s,e,t),E("padWidth",s,e,t),E("preserveShortSequences",s,e,t));return[i,r]}case"StringSplit":{const{indices:i,values:r,shape:o}=n.string.stringSplit(E("input",s,e,t),E("delimiter",s,e,t),E("skipEmpty",s,e,t));return[i,r,o]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(E("input",s,e,t),E("numBuckets",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=(s,e,t,n=cs)=>{switch(s.op){case"Cast":return[n.cast(E("x",s,e,t),E("dtype",s,e,t))];case"ExpandDims":{const i=E("axis",s,e,t);return[n.expandDims(E("x",s,e,t),i)]}case"Squeeze":{const i=E("axis",s,e,t);return[n.squeeze(E("x",s,e,t),i)]}case"Reshape":return[n.reshape(E("x",s,e,t),E("shape",s,e,t))];case"EnsureShape":return[n.ensureShape(E("x",s,e,t),E("shape",s,e,t))];case"MirrorPad":return[n.mirrorPad(E("x",s,e,t),E("padding",s,e,t),E("mode",s,e,t))];case"PadV2":case"Pad":return[n.pad(E("x",s,e,t),E("padding",s,e,t),E("constantValue",s,e,t))];case"SpaceToBatchND":{const i=E("blockShape",s,e,t),r=E("paddings",s,e,t);return[n.spaceToBatchND(E("x",s,e,t),i,r)]}case"BatchToSpaceND":{const i=E("blockShape",s,e,t),r=E("crops",s,e,t);return[n.batchToSpaceND(E("x",s,e,t),i,r)]}case"DepthToSpace":{const i=E("blockSize",s,e,t),r=E("dataFormat",s,e,t).toUpperCase();return[n.depthToSpace(E("x",s,e,t),i,r)]}case"BroadcastTo":return[n.broadcastTo(E("x",s,e,t),E("shape",s,e,t))];case"BroadcastArgs":return[n.broadcastArgs(E("s0",s,e,t),E("s1",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(s,e,t,n,i=ht){const r=((o,a,l)=>{switch(o.category){case"arithmetic":return i(()=>J8(o,a,l));case"basic_math":return i(()=>Q8(o,a,l));case"control":return rq(o,a,l);case"convolution":return i(()=>oq(o,a,l));case"creation":return i(()=>aq(o,a,l));case"dynamic":return lq(o,a,l);case"evaluation":return i(()=>uq(o,a,l));case"image":return i(()=>fq(o,a,l));case"graph":return i(()=>cq(o,a,l));case"logical":return i(()=>pq(o,a,l));case"matrices":return i(()=>mq(o,a,l));case"normalization":return i(()=>gq(o,a,l));case"ragged":return i(()=>xq(o,a,l));case"reduction":return i(()=>yq(o,a,l));case"slice_join":return i(()=>bq(o,a,l));case"sparse":return i(()=>vq(o,a,l));case"spectral":return i(()=>wq(o,a,l));case"string":return i(()=>Sq(o,a,l));case"transformation":return i(()=>_q(o,a,l));case"hash_table":return dq(o,a,l,n);case"custom":const u=oR(o.op);if(u&&u.customExecutor)return u.customExecutor(new Z8(o,a,l));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(s,e,t);return Ga(r)?r.then(o=>[].concat(o)):[].concat(r)}class E_{constructor(e={},t={},n={},i={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=i,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(s,e,t,n){const i=new Set,r=[];let o=null,a=null;const l=new Set,u=new Set(Object.keys(s).map(d=>js(d)[0]));n=n||[];const c=new Set(n.map(d=>js(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((wa(d)||Nq(d)||Pq(d))&&o==null&&(o=d,a=o.children.map(f=>f.name).filter(f=>i.has(f))),i.add(d.name),t[d.name]==null&&!u.has(d.name)&&!c.has(d.name)){if(d.inputs.length===0){r.push(d.name);continue}d.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),h.push(f))})}}return{inputs:s,outputs:e,usedNodes:i,missingInputs:r,dynamicNode:o,syncInputs:a}}function Cq(s,e){const{usedNodes:t,inputs:n}=e,i=Object.keys(n).map(m=>js(m)[0]).map(m=>s.nodes[m]),r=s.initNodes||[],o=m=>t.has(typeof m=="string"?m:m.name);function a(m){return[...new Map(m.map(g=>[g.name,g])).values()]}const l=a([...i,...s.weights,...r]).filter(o),u=a([...l,...Object.values(s.nodes)]).filter(o),c=new Map(u.map(m=>[m.name,m])),h={};for(const m of u){h[m.name]=h[m.name]||0;for(const g of m.children)o(g)||(h[g.name]=Number.POSITIVE_INFINITY),h[g.name]=(h[g.name]||0)+1}const d=Object.entries(h).filter(([,m])=>m===0).map(([m])=>m),f=[...d];for(;d.length>0;){const m=d.pop(),g=c.get(m);for(const y of g.children.filter(o))--h[y.name]===0&&(f.push(y.name),d.push(y.name))}const p=f.map(m=>c.get(m)),x=Tq(p,l);return Eq(x,l),x}function Tq(s,e){const t=new Map(s.map(o=>[o.name,o])),n=e.map(o=>o.name),i=new Set(n);for(;n.length>0;){const o=n.pop(),a=t.get(o);for(const l of a.children)!t.has(l.name)||i.has(l.name)||(i.add(l.name),n.push(l.name))}return s.filter(o=>i.has(o.name))}class Kd extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function Eq(s,e){const t=new Map(s.map((a,l)=>[a.name,l])),n=new Set(e.map(a=>a.name)),i=a=>n.has(typeof a=="string"?a:a.name),r=new Set(s.map(a=>a.name)),o=a=>r.has(typeof a=="string"?a:a.name);for(const a of s){for(const l of a.children.filter(o)){if(!t.has(l.name))throw new Kd(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new Kd(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!i(a))for(const l of a.inputs){if(!t.has(l.name))throw new Kd(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new Kd(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function Aq(s){const e=new Map(s.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,n=s.map((a,l)=>wa(a)?t:l),i=a=>{const l=n[e.get(a.name)];return l??-1},r=s.map((a,l)=>a.children.map(i).reduce((u,c)=>Math.max(u,c),n[l])),o=new Map;for(let a=0;a<s.length;++a){const l=r[a];if(l===t)continue;const u=s[a],c=s[l];o.has(c.name)||o.set(c.name,[]),o.get(c.name).push(u)}return o}const Iq=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Rq=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Mq=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function wa(s){return Iq.has(s.op)}function Nq(s){return Rq.has(s.op)}function Pq(s){return Mq.has(s.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ff{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(n=>e[n].map(i=>i.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Ff(e.functions[n],this)})}getCompilationKey(e,t){const n=e.map(r=>r.name).sort(),i=t.map(r=>r.name).sort();return n.join(this.SEPARATOR)+"--"+i.join(this.SEPARATOR)}compile(e,t){const n=A_(e,t,this.weightMap,this._initNodes),{missingInputs:i,dynamicNode:r,syncInputs:o}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(i.length>0){const u=t.map(h=>h.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${i}]`)}const a=Cq(this.graph,n),l=Aq(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return dr(t),t}cloneTensorList(e){return e?e.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const i=n.map(d=>this.graph.nodes[js(d)[0]]),r=t.map(d=>js(d)[0]),o=new Set(r);let a=r.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(i,a);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const c={},h={};return ht(()=>{const d=new E_(this.weightMap,c,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[y,v]=js(g,d),w=[];w[v]=e[g],f[y]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(w))});const p=this.getFrozenTensorIds(f),{orderedNodes:x,nodeLiveUntilMap:m}=u;for(const g of x){if(f[g.name])continue;const y=T_(g,f,d,this._resourceManager);if(Ga(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);f[g.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,f,d,p,o,m.get(g.name))}return this.parent==null&&d.dispose(p),t.map(g=>ls(g,f,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(i=>i.id)));return new Set(t)}checkTensorForDisposal(e,t,n,i,r,o,a){if(!(wa(t)||o.has(e))){for(const l of n[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(wa(l))continue;const u=v_(l.name,n,i);if(u!=null)for(const c of u){if(!c||c.kept||r.has(c.id))continue;const h=a[c.id];h===1?(c.dispose(),delete a[c.id]):h!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,i,r,o){function a(l){return wa(l)||r.has(l.name)}if(!(wa(e)||o==null))for(const l of o){if(a(l))continue;const u=v_(l.name,t,n);for(const c of u)!c||c.kept||i.has(c.id)||c.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,i={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const o=new E_(this.weightMap,i,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,o,t,n),l=t.map(d=>ls(d,a,o)),u=l.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&o.dispose(h),l}async executeFunctionAsync(e,t,n){const i=e.reduce((r,o,a)=>(r[this.inputs[a].name]=o,r),{});return this._executeAsync(i,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,i){const r=Object.keys(e),o=r.map(w=>this.graph.nodes[js(w)[0]]),a=n.map(w=>js(w)[0]),l=new Set(a);let u=a.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);const{usedNodes:c,missingInputs:h,dynamicNode:d,syncInputs:f}=A_(e,u,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),x=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{const[_,T]=js(w),A=[];A[T]=e[w],x[_]=A});const m={},g=this.getFrozenTensorIds(x),y={};for(;p.length>0;){const w=this.processStack(o,p,t,x,y,g,l,m,c);await Promise.all(w)}d==null&&!i&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=u.filter(w=>!wa(w)&&!ls(w.name,x,t)).map(w=>w.name);if(v.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${r}]. Consider providing the following inputs: [${h}]. ${w}`)}return x}processStack(e,t,n,i,r,o,a,l,u){const c=[];for(;t.length>0;){const h=t.pop();n.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&E("isConstant",h.node,i,n)&&([d]=Lr(h.node.name,n)),i[h.node.name]==null){const f=T_(h.node,i,n,this._resourceManager);d||([d]=Lr(h.node.name,n));const p=n.currentContext;Ga(f)?c.push(f.then(x=>(i[d]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(x)),n.currentContext=p,this.checkTensorForDisposal(d,h.node,i,n,o,a,l),this.processChildNodes(h.node,t,n,i,r,u),x))):(i[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,i,n,o,a,l),this.processChildNodes(h.node,t,n,i,r,u))}else this.processChildNodes(h.node,t,n,i,r,u)}return c}processChildNodes(e,t,n,i,r,o){e.children.forEach(a=>{const[l]=Lr(a.name,n);r[l]||!o.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!ls(u,i,n))&&(r[l]=!0,t.push({contexts:n.currentContext,node:a})):a.inputNames.every(u=>!!ls(u,i,n))&&(r[l]=!0,t.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[i]=js(t),r=this.graph.nodes[i];if(r.attrParams.shape&&r.attrParams.shape.value){const o=r.attrParams.shape.value,a=o.length===n.shape.length&&n.shape.every((l,u)=>o[u]===-1||o[u]===l);D(a,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${o}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&D(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;const i={};for(const r in e){const o=(n=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||n===void 0?void 0:n[r];o!=null?i[o.name]=e[r]:i[r]=e[r]}return i}checkInputs(e){const t=Object.keys(e).filter(n=>{const[i]=js(n);return this.graph.nodes[i]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var n,i;const r=(i=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||i===void 0?void 0:i[t];return r!=null?r.name:t},{})}checkOutputs(e){e.forEach(t=>{const[n]=js(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}}class kq{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q="?tfjs-format=file",Dq="model.json";class Lq{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=kI){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new kq}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ga(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await AA(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let i=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(i=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=i,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Ff(w_.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=w_.Instance.transformGraph(e.modelInitializer);this.initializer=new Ff(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Nn?[e]:e,n={};return t.forEach((i,r)=>n[this.structuredOutputKeys[r]]=i),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Nn)&&!Array.isArray(e)){const r=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(r!=null)for(const o in r){const a=r[o];a.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let i=0;return this.inputNodes.reduce((r,o)=>{var a,l,u;const c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[o])===null||u===void 0?void 0:u.resourceId;return c!=null?r[o]=this.resourceIdToCapturedInput[c]:r[o]=e[i++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let i=0;i<n.length;i++){const r=n[i],o=t[r];this.resourceIdToCapturedInput[o.resourceId]=e[i]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Jt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function bu(s,e={},t=kI){if(s==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof s=="string"&&(s=Oq(s));const n=new Lq(s,e,t);return await n.load(),n}function Oq(s){return s.endsWith("/")||(s=s+"/"),`${s}${Dq}${$q}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wi=J();wi.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);wi.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);wi.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);wi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);wi.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);wi.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);wi.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);wi.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);wi.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);wi.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);wi.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);wi.registerFlag("WEBGPU_PRINT_SHADER",()=>"");wi.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fq{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uq{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,n=!1,i=!0){let r;const o=I_(e,t);return i?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(r=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const n=e.size,i=e.usage,r=I_(n,i),o=this.usedBuffers.get(r),a=o.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");o[a]=o[o.length-1],o.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(r).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function I_(s,e){return`${s}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bq=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,i){const r=M_(n),o=e*t*r,a=R_(e,t,n,i);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=o,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const u=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(u),u}this.numBytesAllocated+=o;const l=this.device.createTexture({size:[e,t],format:n,usage:i});return this.usedTextures.get(a).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,n=e.height,i=e.format,r=e.usage,o=R_(t,n,i,r);this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.freeTextures.get(o).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(o),l=a.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);const u=M_(i),c=t*n*u;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function R_(s,e,t,n){return`${s}_${e}_${t}_${n}`}function M_(s){if(s==="rgba8unorm")return 16;throw new Error(`${s} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(s,e){if(Math.max(...s)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=s.length,n="xyzwuv",i=s.map(o=>`${e}.${n[o]}`),r=new Array(t-1);r[t-2]=i[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${i[o+1]})`;return r}const Qo=(s,e,t)=>t==="int32"?`atomicAdd(${s}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${s}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vu;(function(s){s[s.FROM_PIXELS=0]="FROM_PIXELS",s[s.DRAW=1]="DRAW"})(vu||(vu={}));const Vq=(s,e,t,n,i)=>{const r={dtype:n.dtype,shape:n.shape},o=Gq(t,r,e),a=s.createShaderModule({code:o,label:e.constructor.name});let l=J().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const u=l.split(",");(l==="all"||u.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(o),console.groupEnd())}return i?s.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):s.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},At=(s,e="f32")=>{switch(s){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${s}-component ${e} is not supported.`)}};function Un(s){if(s<=1)return"i32";if(s===2)return"vec2<i32>";if(s===3)return"vec3<i32>";if(s===4)return"vec4<i32>";if(s===5)return"vec5";if(s===6)return"vec6";throw Error(`GPU for rank ${s} is not yet supported`)}function Xr(s){if(s===0)return"x";if(s===1)return"y";if(s===2)return"z";if(s===3)return"w";if(s===4)return"u";if(s===5)return"v";throw Error(`Index ${s} is not yet supported`)}function Ie(...s){let e;switch(s.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${s[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function N_(s,e){let t;return t=`
     ${Wq(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${s?"main(getGlobalIndex());":"main();"};
      }
    `,t}function Wq(s){return`
  @compute @workgroup_size(${s.workgroupSize[0]}, ${s.workgroupSize[1]}, ${s.workgroupSize[2]})
`}function Gq(s,e,t){const n=[],i=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,n.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${uR(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${i}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const p=t.pixelsOpType===vu.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Sa(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Sa(s[0].dtype,t.outputComponent)}>;`,x=e.shape.length===3?"vec2<i32>":"i32";n.push(`
        struct Uniform {
          outShapeStrides : ${x},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${p}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const m=k_(t);return[P_,n.join(`
`),pf(e.shape),t.getUserCode(),N_(m,t)].join(`
`)}let r,o,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((p,x)=>{const m=Un(s[x].shape.length);a+=`${p.charAt(0).toLowerCase()+p.slice(1)}Shape : ${m}, `,r=s[x].shape.length-1,o=Un(r),a+=`${p.charAt(0).toLowerCase()+p.slice(1)}ShapeStrides: ${o}, `});const l=Un(e.shape.length);a+=`outShape : ${l}, `,r=e.shape.length-1,o=Un(r),a+=`
         outShapeStrides: ${o}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=Qq(a),n.push(a),t.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Sa(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((p,x)=>{n.push(`
      @group(0) @binding(${1+x}) var<storage, read> ${p}: array<${t.variableComponents?Sa(s[x].dtype,t.variableComponents[x]):Sa(s[x].dtype,t.outputComponent)}>;
        `)}),a!==""&&n.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const u=Yq(e.shape,t.dispatchLayout),c=[P_,n.join(`
`)+Xq,pf(e.shape),u,Zq(e.shape.length)];t.atomic||c.push(Jq(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((p,x)=>{c.push(`${pf(s[x].shape,p)}`)});const h=s.map((p,x)=>jq(p,e.shape,t.variableComponents?t.variableComponents[x]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(h),c.push(t.getUserCode());const d=k_(t);return c.push(N_(d,t)),c.join(`
`)}function Hq(s,e,t){let n=s.shaderKey;if(s.pixelsOpType!=null)return n;const i=[],r=[];e.forEach(c=>{i.push(c.shape),r.push(c.dtype)}),i.push(t.shape),r.push(t.dtype);const o=e.map(c=>yu(c.shape,t.shape)),a=e.map(c=>en(c.shape,t.shape)).join("_"),l=o.map(c=>c.join("_")).join(";"),u=uR(s)?"flatDispatch":"";return n+="_"+(s.workgroupSize?s.workgroupSize.join(","):"")+i.map(c=>c.length).join(",")+r.join(",")+s.variableNames.join(",")+l+a+u,n}const P_=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Xq=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function pf(s,e=""){const t=s.length,n=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",i=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${n}(index : i32) -> i32 { return index; }`;const r=kn(s),o=Un(t),a=[];for(let u=0;u<t;u++)a.push(`d${u}`);if(r.length===1)return`    fn ${n}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${i}; let d1 = index - d0 * uniforms.${i};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+r.map((u,c)=>{const h=`let ${a[c]} = index2 / uniforms.${i}.${Xr(c)}`,d=c===r.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${i}.${Xr(c)}`:`index2 = index2 - ${a[c]} * uniforms.${i}.${Xr(c)}`;return`${h}; ${d};`}).join(""),`
    fn ${n}(index : i32) -> ${o} {
      ${l}
      return ${o}(${a.join(",")});
    }
  `}function qq(s,e){const t=s.name,n=s.shape.length,i=Un(n),r="get"+t.charAt(0).toUpperCase()+t.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,n),a=o.map(c=>`${c} : i32`).join(", ");if(n<1)return`
      fn ${r}() -> ${At(e)} {
        return ${At(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let u=`${n}D`;return n===0&&(u="1D"),`
    fn ${r}(${a}) -> ${At(e)} {
      return ${At(e)}(${t}[getIndexFromCoords${u}(${i}(${o.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function Kq(s,e,t,n){const i=s.name,r=i.charAt(0).toUpperCase()+i.slice(1),o="get"+r+"ByOutput",a=s.shape.length,l=e.length,u=Un(l);if(en(s.shape,e)&&n)return`
    fn ${o}Index(globalIndex : i32) -> ${At(t)} {
      return ${At(t)}(${i}[globalIndex]);
    }

    fn ${o}Coords(coords : ${u}) -> ${At(t)} {
      return ${At(t)}(${i}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const c=yu(s.shape,e),h=l-a;let d="";if(a===0)return`
    fn ${o}Index(globalIndex : i32) -> ${At(t)}{
      return get${r}();
    }

    fn ${o}Coords(coords : ${u}) -> ${At(t)}{
      return get${r}();
    }
  `;l<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${Xr(m+h)} = 0;`).join(`
`);let f="";if(l<2&&a>0)f="coords";else if(l>1){const m=Un(a),g=s.shape.map((y,v)=>`coords.${Xr(v+h)}`).join(", ");f=`${m}(${g})`}else f="coords";const p=`uniforms.${i.charAt(0).toLowerCase()+i.slice(1)}Shape`,x=`${a}D`;return`
  fn ${o}Index(globalIndex : i32) -> ${At(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${At(t)}(${i}[getIndexFromCoords${x}(${f}, ${p})${t===1?"":` / ${t}`}]);
  }

  fn ${o}Coords(coordsIn : ${u}) -> ${At(t)} {
    var coords = coordsIn;
    ${d}
    return ${At(t)}(${i}[getIndexFromCoords${x}(${f}, ${p})${t===1?"":` / ${t}`}]);
  }
`}function jq(s,e,t,n){let i=qq(s,t);return s.shape.length<=e.length&&(i+=Kq(s,e,t,n)),i}function Yq(s,e){const{x:t,y:n=[],z:i=[]}=e,r=s.length,o=t.length+n.length+i.length;if(o!==r)return"";if(t.length===r)return`fn getOutputCoords() -> ${Un(r)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const l=[t,n,i];for(let d=0;d<l.length;d++){const f=l[d];if(f.length!==0)if(f.length===1)a+=`let d${f[0]} = i32(globalId[${d}]);`;else{const p=zq(f,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let x=0;x<p.length;x++)a+=`let d${f[x]} = index${d} / ${p[x]};`,x===p.length-1?a+=`let d${f[x+1]} = index${d} - d${f[x]} * ${p[x]};`:a+=`index${d} = index${d} - d${f[x]} * ${p[x]};`}}const u=[];for(let d=0;d<o;d++)u.push(`d${d}`);const c=Un(o);let h=`fn getOutputCoords() -> ${c} {
  ${a}
`;return u.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${u.join(",")}); }`,h}function Zq(s){let e="";switch(s){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:D(!1,()=>`Unsupported ${s}D shape`);break}return e}function uR(s){return s.dispatch[1]===1&&s.dispatch[2]===1}function Sa(s,e=1){if(s==="float32")return At(e,"f32");if(s==="int32"||s==="bool")return At(e,"i32");throw new Error(`type ${s} is not supported.`)}function Jq(s,e,t){const n=s.length,i=Sa(e,t);let r=`fn setOutputAtIndex(flatIndex : i32, value : ${At(t)}) {
      result[flatIndex] = ${i}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${At(t,"i32")}) {
      result[flatIndex] = ${i}(value);
    }
    `;if(n>=2){const o=["d0","d1","d2","d3","d4","d5"].slice(0,n),a=Un(n);r+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : ${At(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${o.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : ${At(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return r}function Qq(s){const e=/(\w+)\s*:\s*vec(5|6)/g;s=s.replace(e,n=>"@align(16) "+n);const t=/vec(5|6)\s*,\s*(\w+)/g;return s=s.replace(t,(n,i,r)=>`vec${i}, @align(16) ${r}`),s}function k_(s){return!(s.dispatchLayout.hasOwnProperty("y")&&s.dispatchLayout.y.length!==0||s.dispatchLayout.hasOwnProperty("z")&&s.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=s=>{let e=1;for(let t=0;t<s.length;t++)e*=s[t];return e};function Re(s,e,t=[1,1,1],n=[1,1,1]){const[i,r,o]=[Math.ceil(Oa(s.x.map(a=>e[a]))/(t[0]*n[0])),s.y?Math.ceil(Oa(s.y.map(a=>e[a]))/(t[1]*n[1])):1,s.z?Math.ceil(Oa(s.z.map(a=>e[a]))/(t[2]*n[2])):1];return[i,r,o]}function eK(s,e,t,n=!1){const i=[8,8,1],r=[4,4,1];return n||(s<=8&&(r[1]=1),e<=16&&t<=16&&(i[0]=4)),{workgroupSize:i,elementsPerThread:r}}function cR(s,e,t=!1){if(t)return[8,8,1];const n=Oa(s.x.map(r=>e[r])),i=Oa(s.y.map(r=>e[r]));return n<=4?[4,16,1]:i<=4?[16,4,1]:[16,16,1]}function hR(s,e,t=!1){if(t)return[4,4,1];const n=Oa(s.x.map(r=>e[r])),i=Oa(s.y.map(r=>e[r]));return n<=4?[1,2,1]:i<=4?[2,1,1]:[2,2,1]}function Ue(s){return{x:s.map((e,t)=>t)}}function $_(s){if(s==="float32"||s==="int32"||s==="bool"||s==="string")return 4;if(s==="complex64")return 8;throw new Error(`Unknown dtype ${s}`)}function dR(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function fR(s,e){Array.isArray(s)||(s=[s]),s.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var ur;(function(s){s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax"})(ur||(ur={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK=J().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),nK=(s,e)=>{const t=s.limits.maxComputeWorkgroupsPerDimension,n=e.dispatchLayout,i=e.dispatch;if(i.every(o=>o<=t))return i;D(i[0]>t&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let r=Math.ceil(Math.sqrt(i[0]));return r>t?(r=Math.ceil(Math.cbrt(i[0])),D(r<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[r,r,r]):[r,r,1]};class Ou extends Vy{nextDataId(){return Ou.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!dR())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Fq(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Uq(this.device),this.textureManager=new Bq(this.device),this.tensorMap=new EE(this,Ys()),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.tensorMap.set(i,{dtype:n,shape:t,values:e,refCount:1}),i}move(e,t,n,i,r){if(i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:i,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,n)=>{this.pipelineCache[t]=e[n]})}async getBufferData(e){if(J().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const i=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),J().getBool("WEBGPU_USE_PROFILE_TOOL")&&(D(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),i}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n,complexTensorInfos:i}=t;if(n!=null||t.dtype==="string")return n;if(t.dtype==="complex64"){const x=this.readSync(i.real.dataId),m=this.readSync(i.imag.dataId),g=Hm(fh(x,m).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],o=t.resource,a=o.size;D(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=a/4,u=new ArrayBuffer(a),c=256,h=256,d=r.map(x=>new OffscreenCanvas(c,h)),f=new OffscreenCanvas(c,h);this.endComputePassEncoder(),d.map((x,m)=>{const g=x.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[m]}),g.getCurrentTexture()}).map((x,m)=>{const g=c*4,y=(M,C,R)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:o,bytesPerRow:g,offset:R},{texture:x},{width:M,height:C}),this.submitQueue();const $=f.getContext("2d",{willReadFrequently:!0});$.clearRect(0,0,M,C),$.drawImage(d[m],0,0);const W=$.getImageData(0,0,M,C).data,q=r[m],O=new Uint8ClampedArray(u,R,M*C*4);for(let H=0;H<O.length;H+=4)if(q==="premultiplied")O[H+3]=W[H+3];else{const Z=W[H];O[H]=W[H+2],O[H+1]=W[H+1],O[H+2]=Z}},v=Math.floor(l/(c*h));let w=c,_=h,T=0;for(let M=0;M<v;M++)y(w,_,T),T+=c*h*4;const A=l%(c*h);_=Math.floor(A/c),_>0&&(y(w,_,T),T+=_*(c*4)),w=A%c,w>0&&y(w,1,T)});const p=Hm(u,t.dtype);return this.convertAndCacheOnCPU(e,p),p}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return n;let i;if(t.dtype==="complex64"){const r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),o=r[0],a=r[1];i=fh(o,a)}else{const r=await this.getBufferData(t.resource);i=Hm(r,t.dtype)}return this.convertAndCacheOnCPU(e,i),i}copyBuffer(e){const t=e.size,n=e.usage,i=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,i,0,t),this.submitQueue(),i}createTensorFromGPUData(e,t,n){let i=e.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const o=this.tensorMap.get(r),a=$_(o.dtype)*ae(o.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(i=this.copyBuffer(i)),o.resource=i,Ys().makeTensorFromDataId(r,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:i,shape:r,resource:o}=t;if(i==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(o==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=o,l=a.size,u=a.usage,c=this.bufferManager.acquireBuffer(l,u);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,c,0,l),this.submitQueue();const h=this.makeTensorInfo(r,i),d=Ys().makeTensorFromTensorInfo(h),f=this.tensorMap.get(h.dataId);return f.resource=c,{tensorRef:d,buffer:c}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const n=t.map(i=>Qr(i));return tn(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return tn(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=eo(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=eo(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(r);return a.kernelMs=AE(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:o[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&$h(n[0])&&(n=n.map(r=>Do(r))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const n=this.tensorMap.get(e.dataId).resource;return n instanceof GPUBuffer?{buffer:n}:n instanceof GPUTexture?n.createView():n}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const n=$_(t.dtype)*ae(t.shape);let i;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(i=this.bufferManager.acquireBuffer(n,r,!0),i.mapState==="unmapped"){const o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=o.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),o.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,i,0,n),this.stagingPendingDisposal.push(o)}else{const o=i.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),i.unmap()}t.values=null}else i=this.bufferManager.acquireBuffer(n,r);t.resource=i}makeUniforms(e){let t=0,n=0;const i=[];let r=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let u;switch(l.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:D(!1,()=>`Unsupported ${l.data.length}D shape`)}(n===5||n===6)&&(u=16),u>r&&(r=u),t=Math.ceil(t/u)*u,n=l.data.length,i.push(t),t+=l.data.length*4}),t=Math.ceil(t/r)*r;const o=new ArrayBuffer(t);e.forEach((l,u)=>{const c=i[u];l.type==="int32"?new Int32Array(o,c,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(o,c,l.data.length).set(l.data):new Float32Array(o,c,l.data.length).set(l.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,o,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,i,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),ae(r.shape)===0)return this.tensorMap.get(r.dataId).values=Cr(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=nK(this.device,e);const o=t.map((l,u)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[u]}});e.shaderKey=Hq(e,o,r);const a=J().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=Vq(this.device,e,o,r,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,r,t,i),r}recordAndSubmit(e,t,n,i){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],o=[];const a="int32";if(e.pixelsOpType==null){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=n.concat(t).map(f=>f.shape);const d="int32";o.map(f=>{r.push({type:d,data:f});const p=kn(f);r.push({type:d,data:p})})}else{const d=kn(t.shape);r.push({type:a,data:d})}if(e.size){const d=ae(e.outputShape);r.push({type:a,data:[e.outputComponent?d/e.outputComponent:d]})}i&&(r=[...r,...i]);const l=[this.tensorToBinding(t),...n.map(d=>this.tensorToBinding(d)),this.makeUniforms(r)];n.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,f)=>({binding:f,resource:d}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||J().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===vu.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e,t=tK){return J().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resource==null&&ae(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Ou.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dR()&&CA("webgpu",async()=>{const s={powerPreference:J().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(s),t={},n=[];e.features.has("timestamp-query")&&n.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&n.push(["bgra8unorm-storage"]),t.requiredFeatures=n;const i=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:i.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:i.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:i.maxStorageBufferBindingSize,maxBufferSize:i.maxBufferSize,maxComputeWorkgroupSizeX:i.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:i.maxComputeInvocationsPerWorkgroup};const r=await e.requestDevice(t),o="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Ou(r,o)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ut;(function(s){s[s.ADD=0]="ADD",s[s.ATAN2=1]="ATAN2",s[s.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",s[s.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",s[s.DIV=4]="DIV",s[s.ELU_DER=5]="ELU_DER",s[s.EQUAL=6]="EQUAL",s[s.FLOOR_DIV=7]="FLOOR_DIV",s[s.GREATER=8]="GREATER",s[s.GREATER_EQUAL=9]="GREATER_EQUAL",s[s.LESS=10]="LESS",s[s.LESS_EQUAL=11]="LESS_EQUAL",s[s.LOGICAL_AND=12]="LOGICAL_AND",s[s.LOGICAL_OR=13]="LOGICAL_OR",s[s.MAX=14]="MAX",s[s.MIN=15]="MIN",s[s.MOD=16]="MOD",s[s.MUL=17]="MUL",s[s.NOT_EQUAL=18]="NOT_EQUAL",s[s.POW=19]="POW",s[s.PRELU=20]="PRELU",s[s.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",s[s.SUB=22]="SUB"})(ut||(ut={}));const sK="let resultTemp = a + b;",iK="let resultTemp = atan2(a, b);",rK="let resultTemp = areal * breal - aimag * bimag;",oK="let resultTemp = areal * bimag + aimag * breal;",aK="let resultTemp = a / b;",lK="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",uK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,cK=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,hK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,dK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,fK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,pK=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,mK="return f32(a >= 1.0 && b >= 1.0);",gK=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,xK="return f32(a >= 1.0 || b >= 1.0);",yK=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,bK="let resultTemp = max(a, b);",vK="let resultTemp = min(a, b);",wK=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,SK=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,_K="let resultTemp = a * b;",CK=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,TK=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,EK=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,AK=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,IK="if (a < 0.0) { return b * a; }  return a;",RK=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,MK="let resultTemp = (a - b) * (a - b);",NK="let resultTemp = a - b;";function Ew(s,e){let t;do{switch(s){case ut.ATAN2:t=iK;break;case ut.MAX:t=bK;break;case ut.MIN:t=vK;break;case ut.MOD:t=e?SK:wK;break;case ut.NOT_EQUAL:t=e?TK:CK;break;case ut.POW:t=e?AK:EK;break;default:continue}let n,i,r;return e?(n="isnanVec4",i="vec4<f32>",r="vec4<bool>"):(n="isnan",i="f32",r="bool"),`
      let aIsNaN = ${n}(a);
      let aPostLegalization = select(a, ${i}(42), aIsNaN);
      let bIsNaN = ${n}(b);
      let bPostLegalization = select(b, ${i}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${i}(valueForNaN),
            ${r}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(s){case ut.ADD:t=sK;break;case ut.COMPLEX_MULTIPLY_IMAG:t=oK;break;case ut.COMPLEX_MULTIPLY_REAL:t=rK;break;case ut.DIV:t=aK;break;case ut.ELU_DER:t=lK;break;case ut.EQUAL:t=uK;break;case ut.FLOOR_DIV:t=cK;break;case ut.GREATER:t=hK;break;case ut.GREATER_EQUAL:t=dK;break;case ut.LESS:t=fK;break;case ut.LESS_EQUAL:t=pK;break;case ut.LOGICAL_AND:return e?gK:mK;case ut.LOGICAL_OR:return e?yK:xK;case ut.MUL:t=_K;break;case ut.PRELU:return e?RK:IK;case ut.SQUARED_DIFFERENCE:t=MK;break;case ut.SUB:t=NK;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Te;(function(s){s[s.ABS=0]="ABS",s[s.ACOS=1]="ACOS",s[s.ACOSH=2]="ACOSH",s[s.ASIN=3]="ASIN",s[s.ASINH=4]="ASINH",s[s.ATAN=5]="ATAN",s[s.ATANH=6]="ATANH",s[s.CEIL=7]="CEIL",s[s.COS=8]="COS",s[s.COSH=9]="COSH",s[s.ELU=10]="ELU",s[s.ERF=11]="ERF",s[s.EXP=12]="EXP",s[s.EXPM1=13]="EXPM1",s[s.FLOOR=14]="FLOOR",s[s.IS_FINITE=15]="IS_FINITE",s[s.IS_INF=16]="IS_INF",s[s.IS_NAN=17]="IS_NAN",s[s.LINEAR=18]="LINEAR",s[s.LOG=19]="LOG",s[s.LOG1P=20]="LOG1P",s[s.LOGICAL_NOT=21]="LOGICAL_NOT",s[s.NEG=22]="NEG",s[s.RELU=23]="RELU",s[s.RELU6=24]="RELU6",s[s.LEAKYRELU=25]="LEAKYRELU",s[s.RECIPROCAL=26]="RECIPROCAL",s[s.ROUND=27]="ROUND",s[s.RSQRT=28]="RSQRT",s[s.SELU=29]="SELU",s[s.SIGMOID=30]="SIGMOID",s[s.SIGN=31]="SIGN",s[s.SIN=32]="SIN",s[s.SINH=33]="SINH",s[s.SOFTPLUS=34]="SOFTPLUS",s[s.SQRT=35]="SQRT",s[s.SQUARE=36]="SQUARE",s[s.STEP=37]="STEP",s[s.TAN=38]="TAN",s[s.TANH=39]="TANH",s[s.TO_INT=40]="TO_INT"})(Te||(Te={}));const PK="return abs(a);",kK=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,$K=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,DK=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,LK="return asinh(a);",OK=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,FK=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,UK="return ceil(a);",BK="return cos(a);",zK=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,VK="return exp(a) - 1.0;",WK="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",GK=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,HK=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${hw};
  let a1 = ${dw};
  let a2 = ${fw};
  let a3 = ${pw};
  let a4 = ${mw};
  let a5 = ${gw};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,XK="return exp(a);",qK="return floor(a);",KK="return f32(!isnan(a) && !isinf(a));",jK="return f32(isinf(a));",YK="return f32(isnan(a));",ZK="return a;",JK=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,QK=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,ej="return f32(!(a >= 1.0));",tj="return -a;",nj="if (a < 0.0) { return uniforms.alpha * a; } return a;",sj=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,ij="return 1.0 / a;",rj="return select(a, 0.0, a < 0.0);",oj="return clamp(a, 0.0, 6.0);",aj="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",lj=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,uj="return round(a);",cj="return inverseSqrt(a);",hj=`
  if (a >= 0.0) {
    return ${cw} * a;
  } else {
    return ${uw} * (exp(a) - 1.0);
  }
`,dj="return 1.0 / (1.0 + exp(-1.0 * a));",fj="return sign(a);",pj="return sin(a);",mj=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,gj=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,xj="return sqrt(a);",yj="return a * a;",bj=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,vj="return tan(a);",wj=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Sj="return f32(i32((a)));";function xa(s,e){switch(s){case Te.ABS:return PK;case Te.ACOS:return kK;case Te.ACOSH:return $K;case Te.ASIN:return DK;case Te.ASINH:return LK;case Te.ATAN:return OK;case Te.ATANH:return FK;case Te.COS:return BK;case Te.COSH:return zK;case Te.CEIL:return UK;case Te.ELU:return e?GK:WK;case Te.ERF:return HK;case Te.EXP:return XK;case Te.EXPM1:return VK;case Te.FLOOR:return qK;case Te.IS_FINITE:return KK;case Te.IS_INF:return jK;case Te.IS_NAN:return YK;case Te.LINEAR:return ZK;case Te.LOG:return JK;case Te.LOG1P:return QK;case Te.LOGICAL_NOT:return ej;case Te.NEG:return tj;case Te.LEAKYRELU:return e?sj:nj;case Te.RECIPROCAL:return ij;case Te.RELU:return e?lj:rj;case Te.RELU6:return e?aj:oj;case Te.ROUND:return uj;case Te.RSQRT:return cj;case Te.SELU:return hj;case Te.SIGMOID:return dj;case Te.SIGN:return fj;case Te.SIN:return pj;case Te.SINH:return mj;case Te.SOFTPLUS:return gj;case Te.SQRT:return xj;case Te.SQUARE:return yj;case Te.STEP:return bj;case Te.TAN:return vj;case Te.TANH:return wj;case Te.TO_INT:return Sj;default:throw new Error(`BinaryType ${s} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(s,e=!1,t=!1,n=3){if(s===null)return"";let i="";if(s==="linear")i=xa(Te.LINEAR);else if(s==="relu")i=xa(Te.RELU,t);else if(s==="elu")i=xa(Te.ELU,t);else if(s==="relu6")i=xa(Te.RELU6,t);else if(s==="prelu")i=Ew(ut.PRELU,t);else if(s==="sigmoid")i=xa(Te.SIGMOID,t);else if(s==="leakyrelu")i=xa(Te.LEAKYRELU,t);else throw new Error(`Activation ${s} has not been implemented for the WebGPU backend.`);const o=At(t?4:1);let a="";return e?a=`
      fn activation(a : ${o}, coords : vec${n}<i32>) -> ${o} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${i}
      }`:a=`
      fn activation(a : ${o}, coords : vec${n}<i32>) -> ${o} {
        ${i}
      }`,a}function al(s,e){return`
      ${s?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(s,e,t=!1,n=!1,i=!1,r=1){D(s&&r===1||!s,()=>`transposeA ${s} is not compatible with component size ${r}`);const o=`
      ${s?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${At(r)} {
    var value = ${At(r)}(0.0);
    ${t&&i?o:`
    ${s?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${o}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${At(r)} {
    var value = ${At(r)}(0.0);
    ${a}
    return value;
  }
  `}function Aw(s,e,t,n,i=!1,r=!1,o=!1,a=1){return`
  ${pR(t,n,i,r,o,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${At(a)}) {
    ${i&&r?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${al(s,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const _j=(s,e)=>s?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,Cj=(s,e,t,n)=>{if(s)return`
      for (var k = 0; k < ${n}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let i="",r="";for(let o=0;o<e;o++)i+=`let BCached${o} = mm_Bsub[k * ${e} + ${o}][tileCol];`,r+=`acc[i] = fma(BCached${o}, vec4<f32>(ACached[${o}]), acc[i]);`;return`
      for (var k = 0; k < ${n/e}; k++) {
        ${i}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${r}
        }
      }`}};function Wp(s,e,t=!1,n=32,i=!1,r=32,o=!1){const a=e[1]*s[1],l=e[0]*s[0],u=t?a:n,c=t?n:a,h=u/e[0],d=n/e[1],f=s[1],p=s[0];return D((t&&h===4&&s[1]===4||!t&&(h===3||h===4))&&u%e[0]===0&&n%e[1]===0&&s[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${s[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${s[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${u/h}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/s[0]}>, ${n}>;

  ${Ie()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${f};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${f};
    let globalCol = i32(globalId.x) * ${p};
    let batch = ${i?"0":"i32(globalId.z)"};
    let batchA = ${i||!o?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${i||!o?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${i?`${Math.ceil(r/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
    var kStart = ${i?`i32(globalId.z) * ${r}`:"0"};

    var acc: array<vec4<f32>, ${f}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${f}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${_j(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Cj(t,h,f,n)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const D_=s=>s?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Tj=s=>s?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Gp(s,e,t=!1,n=32,i=!1,r=32,o=!1,a=!1){const l=s[1]*e[1],u=s[0]*e[0],c=t?l:n,h=t?n:l;D(h%e[1]===0&&c%e[0]===0&&n%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${n} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],f=c/e[0],p=n/e[1],x=s[1],m=s[0],g=o?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${D_(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${m}>;
        for (var k = 0; k < ${n}; k++) {
          for (var inner = 0; inner < ${m}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${x}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${m}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${x}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${x};
  let tileCol = i32(localId.x) * ${m};

  let globalRow = i32(globalId.y) * ${x};
  let globalCol = i32(globalId.x) * ${m};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${f};
  let tileRowB = i32(localId.y) * ${p};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${f}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${D_(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${n};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${m}>;
    for (var k = 0; k < ${n}; k++) {
      for (var inner = 0; inner < ${m}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${x}; innerRow++) {
        ${Tj(t)}
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${x}; innerRow++) {
    for (var innerCol = 0; innerCol < ${m}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${n}>;

    ${Ie()} {
      let batch = ${i?"0":"i32(globalId.z)"};
      let batchA = ${i||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${i||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${i?`${Math.ceil(r/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
      var kStart = ${i?`i32(globalId.z) * ${r}`:"0"};

      var acc : array<array<f32, ${m}>, ${x}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${x}; innerRow++) {
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const Ej=s=>s?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Aj(s,e=!1){D(s[1]===1&&s[2]===1,()=>`A linear work group size is required. But got ${s}.`);const t=s[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${s[0]}>;

    ${Ie()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Ej(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}let Ij=class{constructor(e,t,n=!1,i=!1,r=null,o=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const u=n?e[1]:e[2];if(this.isVec4=(u%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!i,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=eK(t[1],u,t[2],n);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=r!=null,h=a!=null;c&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=n,this.transposeB=i,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){const i=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=r;const o=e%i===0,a=t%r===0,l=n%this.tileInner===0;return[o,a,l]}getUserCode(){return`
      ${fo(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Aw(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Wp(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Aj(this.workgroupSize,this.transposeA):Gp(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(s){return`
    var<workgroup> sumValues : array<f32, ${s}>;
    ${Ie()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${s}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${s/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class Mj{constructor(e,t=!1,n=!1,i=null,r=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=i!=null,l=o!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=a,this.activation=r,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){return`
      ${fo(this.activation,this.hasPreluActivationWeights)}
      ${Aw(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Rj(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(s){const e=s[1],t=s[0],n=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Ie()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class Pj{constructor(e,t,n,i=!1,r=!1,o=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const u=o!=null;u&&this.variableNames.push("bias");const c=l!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=i,this.transposeB=r,this.addBias=u,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${i}_${r}`}getUserCode(){return`
      ${fo(this.activation,this.hasPreluActivationWeights)}
      ${Aw(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Nj(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kj{constructor(e,t,n=!1,i=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,D(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Re(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=i,this.shaderKey=`matMulSplitK_${n}_${i}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${pR(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${At(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Qo("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Wp(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Gp(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class $j{constructor(e,t=null,n=null,i=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=i!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${fo(this.activation,this.hasPreluActivationWeights)}
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${al(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dj=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bs(s){const{backend:e,attrs:t}=s,{shape:n,value:i}=t;let{dtype:r}=t;if(r=r||$u(i),r==="string"){const o=Yn(r,ae(n));return o.fill(i),e.makeTensorInfo(n,r,o)}else{const o=new Dj(n),a=[{type:"float32",data:[i]}];return e.runWebGPUProgram(o,[],r,a)}}const Lj={kernelName:V0,backendName:"webgpu",kernelFunc:Bs};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function je(s){const{inputs:e,attrs:t}=s,{x:n}=e,{shape:i}=t,r=ae(n.shape),o=IE(i,r),a=ae(o);return D(r===a,()=>`The new shape (${o}) has ${a} elements and the old shape (${n.shape}) has ${r} elements. The new shape and old shape must have the same number of elements.`),s.backend.incRef(n.dataId),{dataId:n.dataId,shape:o,dtype:n.dtype}}const Oj={kernelName:Ub,backendName:"webgpu",kernelFunc:je};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hp({a:s,b:e,transposeA:t,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const u=s.shape.length,c=e.shape.length,h=t?s.shape[u-2]:s.shape[u-1],d=n?e.shape[c-1]:e.shape[c-2],f=t?s.shape[u-1]:s.shape[u-2],p=n?e.shape[c-2]:e.shape[c-1],x=s.shape.slice(0,-2),m=e.shape.slice(0,-2),g=ae(x),y=ae(m),w=It(s.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);D(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);const _=t?[g,h,f]:[g,f,h],T=n?[y,p,d]:[y,d,p],A=je({inputs:{x:s},backend:i,attrs:{shape:_}}),M=je({inputs:{x:e},backend:i,attrs:{shape:T}}),C=[A,M],R=Math.max(g,y),$=[A,M],W=[{type:"int32",data:[f]},{type:"int32",data:[p]},{type:"int32",data:[h]}];let q,O;const H=[R,f,p];let Z=J().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(Z<0){const ce=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),ne=ce>0?ce:i.thresholdToIncreaseWorkgroups,fe=R*Math.ceil(f/32)*Math.ceil(p/32);fe<=ne||f<=8&&fe<=ne*2?R*f*p<=128?Z=ur.MatMulReduceProgram:R===1&&d>=2e3?Z=ur.MatMulSplitKProgram:Z=ur.MatMulSmallOutputSizeProgram:Z=ur.MatMulPackedProgram}switch(Z){case ur.MatMulReduceProgram:q=new Mj(H,t,n,r,l,o);break;case ur.MatMulSplitKProgram:{if(O=Bs({backend:i,attrs:{shape:H,value:0,dtype:s.dtype}}),q=new kj(H,d,t,n),r||l){O=i.runWebGPUProgram(q,$,s.dtype,W,O);const ne=new $j(O.shape,r,l,o);let fe=null;const pe=[O];r&&pe.push(r),o&&pe.push(o),l==="leakyrelu"&&(fe=[{type:"float32",data:[a]}],ne.uniforms+=" alpha : f32,");const Oe=i.runWebGPUProgram(ne,pe,O.dtype,fe);C.push(O);const le=je({inputs:{x:Oe},backend:i,attrs:{shape:w}});C.push(Oe);for(const ge of C)i.disposeData(ge.dataId);return le}break}case ur.MatMulSmallOutputSizeProgram:q=new Pj(_,T,H,t,n,r,l,o);break;case ur.MatMulPackedProgram:const ce=i.adapterInfo.isIntel();q=new Ij(_,H,t,n,r,l,o,ce);break;default:throw new Error(`Unsupported MatMulProgramType ${Z}.`)}r&&$.push(r),o&&$.push(o),l==="leakyrelu"&&(W.push({type:"float32",data:[a]}),q.uniforms+=" alpha : f32,"),O=i.runWebGPUProgram(q,$,s.dtype,W,O);const ee=je({inputs:{x:O},backend:i,attrs:{shape:w}});C.push(O);for(const ce of C)i.disposeData(ce.dataId);return ee}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(s){const{inputs:e,backend:t,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=n;return Hp({a:i,b:r,transposeA:l,transposeB:u,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const Uj={kernelName:Ef,backendName:"webgpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let L_=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=It(t,n),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Ew(this.op,!1)}
      }

      ${Ie("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uf=class{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=It(t,n),this.dispatchLayout=Ue(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const i=t.length>0&&t[t.length-1]%4===0,r=n.length>0&&n[n.length-1]%4===0;i&&r?(this.outputComponent=4,this.variableComponents=[4,4]):i&&(XS(n)||n[n.length-1]===1)||r&&(XS(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=i?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${Ew(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const i=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${i}];`:`let a = sharedBuf[${i}];
          let b = getBByOutputIndex(index);`;e=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ie("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${r}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${n}
       ${Ie("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(s){const{inputs:e}=s,{x:t}=e;return s.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const Bj={kernelName:Ap,backendName:"webgpu",kernelFunc:ii};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ll(s){const{inputs:e,backend:t}=s,{real:n,imag:i}=e,r=t.makeTensorInfo(n.shape,"complex64"),o=t.tensorMap.get(r.dataId),a=ii({inputs:{x:n},backend:t}),l=ii({inputs:{x:i},backend:t});return o.complexTensorInfos={real:a,imag:l},r}const zj={kernelName:f0,backendName:"webgpu",kernelFunc:ll};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fu=class{constructor(e,t,n=""){this.variableNames=["A"],this.size=!0;const i=128;this.workgroupSize=[i,1,1],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,n!==""&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${xa(this.op,!1)}
      }
      ${Ie("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt({opType:s,cpuKernelImpl:e,dtype:t}){return({inputs:n,backend:i})=>{const{x:r}=n,o=i,a=t||r.dtype;if(o.shouldExecuteOnCPU([r])&&e!=null){const u=o.tensorMap.get(r.dataId),c=e(u.values,a);return o.makeTensorInfo(r.shape,a,c)}const l=new Fu(r.shape,s);return o.runWebGPUProgram(l,[r],a)}}function is({opType:s,cpuKernelImpl:e,supportsComplex:t=!1,dtype:n}){return({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(t&&o.dtype==="complex64"){const h=l.tensorMap.get(o.dataId),d=l.tensorMap.get(a.dataId);let f,p;if(s!==ut.MUL)[f,p]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(m=>{const[g,y]=m,v={dataId:g.dataId,dtype:g.dtype,shape:o.shape},w={dataId:y.dataId,dtype:y.dtype,shape:a.shape},_=new Uf(s,o.shape,a.shape);return l.runWebGPUProgram(_,[v,w],zs(g.dtype,y.dtype))});else{const m=new L_(ut.COMPLEX_MULTIPLY_REAL,o.shape,a.shape),g=new L_(ut.COMPLEX_MULTIPLY_IMAG,o.shape,a.shape),y=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:o.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];f=l.runWebGPUProgram(m,y,"float32"),p=l.runWebGPUProgram(g,y,"float32")}const x=ll({inputs:{real:f,imag:p},backend:l});return l.disposeData(f.dataId),l.disposeData(p.dataId),x}const u=n||zs(o.dtype,a.dtype);if((o.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([o,a]))&&e!=null){const h=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(a.dataId).values,f=o.dtype==="string"?Go(h):h,p=o.dtype==="string"?Go(d):d,[x,m]=e(o.shape,a.shape,f,p,u);return l.makeTensorInfo(m,u,x)}const c=new Uf(s,o.shape,a.shape);return l.runWebGPUProgram(c,[o,a],u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(s){const e=new Float32Array(s.length);for(let t=0;t<s.length;++t)e[t]=Math.abs(s[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(s){return(e,t,n,i,r)=>{const o=It(e,t),a=o.length,l=kn(o),u=ae(o),c=Cr(r,u),h=e.length,d=t.length,f=kn(e),p=kn(t),x=yu(e,o),m=yu(t,o);if(x.length+m.length===0)for(let g=0;g<c.length;++g)c[g]=s(n[g%n.length],i[g%i.length]);else for(let g=0;g<c.length;++g){const y=Gy(g,a,l),v=y.slice(-h);x.forEach(A=>v[A]=0);const w=cx(v,h,f),_=y.slice(-d);m.forEach(A=>_[A]=0);const T=cx(_,d,p);c[g]=s(n[w],i[T])}return[c,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(s,e,t,n){if(n==="int32"){const i=Int32Array.from(s);return[e,"int32",i]}if(n==="bool"){const i=Mp([0],t),[r,o]=Gs((a,l)=>a!==l?1:0)(e,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${n}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gj=Gs((s,e)=>s+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(s,e,t,n,i){const r=ae(n),o=Jr(i,t);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=e[a]:o[l]+=1)}return o}function Xj(s,e,t,n=!1){const i=s.shape[0],r=s.shape[1],o=tn([i,t],e.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const u=s.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?o.set(1,a,u):e.size>0?o.set(o.get(a,u)+e.get(a,l),a,u):o.set(o.get(a,u)+1,a,u))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj=Gs((s,e)=>s&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function po(s){return(e,t,n)=>{const i=Yn(t,e.length);for(let r=0;r<e.length;++r)i[r]=s(e[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj=po(s=>Math.ceil(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(s,e,t,n){const i=Yn(t,ae(e));if(n&&t!=="string"){let r=0;s.forEach(o=>{const a=ae(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=t==="string"?Go(o.vals):o.vals;let l=0;for(let u=0;u<o.shape[0];++u){const c=u*e[1]+r;for(let h=0;h<o.shape[1];++h)i[c+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj=Gs((s,e)=>s===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zj=po(s=>Math.exp(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj=po(s=>Math.expm1(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj=po(s=>Math.floor(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=Gs((s,e)=>Math.floor(s/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(s,e,t,n,i,r,o,a,l){const u=tn([n,r],t);for(let c=0;c<n;c++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[c*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)u.values[c*r+f]=e.get(...e.indexToLoc(d*r+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(s,e,t){const n=tn(t,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],u=e.locToIndex([a,l]);o[2]=e.values[u];const c=s.locToIndex(o);0<=c&&c<s.values.length&&(n.values[i]=s.values[c])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=Gs((s,e)=>s>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7=Gs((s,e)=>s>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7=Gs((s,e)=>s<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=Gs((s,e)=>s<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a7(s,e,t){const n=(e-s)/(t-1),i=Jr(t,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=po(s=>Math.log(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(s,e,t,n){const i=Cr(n,ae(t));for(let r=0;r<i.length;++r){const o=r*e;let a=s[o];for(let l=0;l<e;++l){const u=s[o+l];(Number.isNaN(u)||u>a)&&(a=u)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=Gs((s,e)=>Math.max(s,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=Gs((s,e)=>Math.min(s,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR=Gs((s,e)=>s*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(s,e,t){const n=Du(-1,t);return mR([],e,n,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=Gs((s,e)=>s!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(s,e,t,n,i){const r=e.length,o=ae(e),a=kn(e),l=kn(i),u=Cr(t,ae(i));for(let c=0;c<o;++c){const h=Gy(c,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=cx(d,r,l);u[f]=s[c]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(s,e,t,n){const[i,r]=vi(s,n),o=zs(e,"int32"),a=Jr(ae(i),o),l=ae(r);for(let u=0;u<a.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=t[c+d];a[u]=h}return{outVals:a,outShape:i,outDtype:o}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(s,e,t){s.forEach((n,i)=>{if(n<0||n>=t){const r=Gy(i,e.length,kn(e)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${t})`)}})}function x7(s,e){for(let t=0;t<s.length;++t){const n=s[t],i=t===s.length-1?e:s[t+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function y7(s,e,t,n){const i=[];let r=0;const o=e.length-1+t.length,a=new Array(o).fill(null).map(()=>[0]);x7(t,n);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const c=e[u+1];for(let h=1;h<l+1;++h)a[u].push(h*c)}for(let u=0;u<s.length;++u){let c=s[u],h=s[u]+1;for(let d=0;d<t.length;++d){const f=t[d],p=d+e.length-1;if(p>=0){const x=a[p],m=x[x.length-1]-f[c];for(let g=c;g<h;++g)a[p].push(f[g+1]+m)}c=f[c],h=f[h]}h!==c&&(i.push([c,h]),r+=h-c)}return{outSplits:a,valueSlices:i,numValues:r}}function b7(s){const e=[];for(let t=0;t<s.length;++t){const n=s[t].length,i=Yn("int32",n);e.push(i),s[t].forEach((r,o)=>i[o]=r)}return e}function O_(s,e){const t=s.slice(0,e);for(;t.length<e;)t.push(1);for(let n=e;n<s.length;n++)t[e-1]*=s[n];return t}function v7(s,e,t,n,i,r){const o=O_(e,2)[1],a=O_(r,2)[1];let l=0;for(const u of t)for(let c=u[0];c<u[1];++c){for(let h=0;h<n;++h)i[l*a+h]=s[c*o+h];++l}}function w7(s,e,t,n,i){const r=e.slice();r[0]=i;const o=Yn(t,ae(r)),a=s.length,l=a===0?0:a/e[0];return v7(s,e,n,l,o,r),[o,r]}function S7(s,e,t,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(g7(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const u=n[0],{outSplits:c,valueSlices:h,numValues:d}=y7(r,o,s,u),f=b7(c),p=w7(t,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_=2147483647;function _7(s,e,t,n,i,r,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=i.length===0,u=o.length===0,c=[];a||c.push(e[0]),l||c.push(i[0]),u||c.push(o[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=Yn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const g=a?s[0]:s[m],y=l?n[0]:n[m],v=u?r[0]:r[m];if(v===0)throw new Error("Requires delta != 0");let w;if(v>0&&y<g||v<0&&y>g)w=0;else if(w=Math.ceil(Math.abs((y-g)/v)),w>F_)throw new Error(`Requires ((limit - start) / delta) <= ${F_}`);d[m+1]=d[m]+w}const f=d[h],p=Yn(t,f);let x=0;for(let m=0;m<h;++m){const g=d[m+1]-d[m];let y=a?s[0]:s[m];const v=u?r[0]:r[m];for(let w=0;w<g;++w)p[x++]=y,y+=v}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ei=ji;class Bf{constructor(e,t,n,i,r,o,a,l,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=GI(c),this.raggedRank=HI(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ei.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ei.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ei.VALUE_ROWIDS:return Bf.getMaxWidthValueRowID(t);case Ei.ROW_SPLITS:return Bf.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ei[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let n=0;for(let i=0;i<t-1;++i){const r=e[i+1]-e[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let n=0,i=e[0],r=0;for(let o=1;o<t;++o){const a=e[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return B_(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;XI(n,t);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=WI(this.raggedRank,i,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,n){const i=Math.min(e,n),r=[];let o=0;for(let a=0;a<i;++a,o+=t)r.push(o);for(let a=i;a<e;++a)r.push(-1);return D(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,n,i){const r=e.length,o=[];for(let a=0;a<r-1;++a){const l=e[a+1]-e[a];let u=Math.min(i,l),c=t[a];c===-1&&(u=0);for(let h=0;h<u;++h)o.push(c),c+=n;for(let h=0;h<l-u;++h)o.push(-1)}if(r>0&&o.length!==e[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,i){const r=e.length,o=[];if(r===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];o.push(u);for(let c=1;c<r;++c){const h=e[c];if(h===l)u>=0&&(++a,a<i?u+=n:u=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}o.push(u)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,i){const r=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case Ei.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,i);case Ei.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,i);default:throw new Error(`Unsupported partition type: ${Ei[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Ei.FIRST_DIM_SIZE:return e[0];case Ei.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ei.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ei[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=B_(n,!1),o=Yn(this.valuesDType,ae(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(t,i[0],n[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,i[u],n[u]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(e,t,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(e+1);const l=ae(a),u=t.length;let c=this.defaultValue;if(c.length!==l&&c.length!==1){const p=this.defaultValueShape;ht(()=>{const x=he(c,p);c=Ic(x,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=u;++p){let x=p<u?t[p]:-1;if(x===f){++f;continue}if(d<f){const m=r.subarray(h*l),g=o.subarray(d*l),y=(f-d)*l;U_(g,m,y)}if(p>=u){const m=n.length;x=Math.floor(m/l)}if(x>f)if(this.defaultValue.length===1)o.subarray(f*l,x*l).fill(this.defaultValue[0]),f=x;else for(;x>f;){const m=o.slice(f*l);U_(m,c,l),++f}x<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function U_(s,e,t){for(let n=0;n<t;n++)s[n]=e[n]}function B_(s,e){const t=[];for(let n of s){if(n<0){if(!e)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}t.push(n)}return t}function C7(s,e,t,n,i,r,o,a,l,u){return new Bf(s,e,t,n,i,r,o,a,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(s,e,t,n){const i=s===e,r=s<e&&t<0,o=e<s&&t>1;if(i||r||o)return Jr(0,n);const a=Math.abs(Math.ceil((e-s)/t)),l=Jr(a,n);e<s&&t===1&&(t=-1),l[0]=s;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=po(s=>1/Math.sqrt(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(s,e,t,n,i,r,o,a,l,u){const c=[n/i,i],h=s.values,d=e.values;if(n===0)return tn(t,e.dtype);const f=l instanceof mu?l:tn(c,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const x=[];let m=0;for(let g=0;g<o;g++){const y=h[p*o+g];x.push(y),m+=y*a[g]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${x} does not index into ${t}`);for(let g=0;g<i;g++)u?f.values[m*i+g]+=d[p*i+g]:f.values[m*i+g]=e.rank===0?d[0]:d[p*i+g]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=po(s=>1/(1+Math.exp(-s)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(s,e,t,n,i){const r=ew(n,e,t),o=ae(t),a=kn(n);if(r){const h=tw(e,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?Go(s):s,u=tn(n,i,l),c=tn(t,i);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),f=d.map((p,x)=>p+e[x]);c.set(u.get(...f),...d)}return i==="string"?rR(c.values):c.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(s,e,t,n,i,r,o){const a=e[0],l=r[0],u=new Array(l),c=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(qI(a));const m=Yn(t,0),g=Yn(i,0);return[m,[0,h],g,u,c]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const g=s[m*h];if(g<0)throw new Error(KI(m,g));if(g>=l)throw new Error(jI(m,g,l));++p[g],d=d&&g>=f,f=g}let x=!0;for(let m=0;m<l;++m){const g=p[m]===0;u[m]=g,x=x&&!g,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(x&&d){const m=s,g=n;for(let y=0;y<a;++y)c[y]=y;return[m,[a,h],g,u,c]}else{const m=p[l-1],g=Yn(t,m*h),y=Yn(i,m),v=new Array(l).fill(0);for(let w=0;w<a;++w){const _=s[w*h],T=v[_],A=(_===0?0:p[_-1])+T;v[_]++;for(let M=0;M<h;++M)g[A*h+M]=s[w*h+M];y[A]=n[w],c[w]=A}for(let w=0;w<l;++w)if(v[w]===0){const T=w===0?0:p[w-1];g[T*h+0]=w;for(let A=1;A<h;++A)g[T*h+A]=0;y[T]=o}return[g,[m,h],y,u,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(s,e,t,n,i){const r=ae(n),o=e[0],a=i.length,l=[];let u=1,c=-1;for(let m=0;m<a;++m){const g=i[m];if(g===-1){if(c!==-1)throw new Error(YI(c,m));c=m,l.push(1)}else{if(g<0)throw new Error(ZI(m,g));u*=g,l.push(g)}}if(c!==-1){if(u<=0)throw new Error(JI());const m=Math.trunc(r/u);if(u*m!==r)throw new Error(QI(n,l));l[c]=m}if(ae(l)!==r)throw new Error(eR(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const x=Yn(t,o*a);for(let m=0;m<o;++m){let g=0;for(let y=0;y<d;++y)g+=s[m*d+y]*f[y];for(let y=0;y<a;++y)x[m*a+y]=Math.trunc(g/p[y]),g%=p[y]}return[x,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(s,e,t,n,i,r=!1,o=0){const a=n.length,l=[e[0],s.length/e[0]],u=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(Ix());const d=e.slice();d[0]=h;const f=d.reduce((v,w)=>v*w,1),p=Yn(t,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(Ix());let x=0,m=1,g=0,y=i[x];for(;;){let v=0;if(m<a){if(v=i[m],y===v){++m;continue}if(y>=v)throw new Error(tR())}if(y<0||y>=h)throw new Error(nR(y,h));y>g&&p.fill(o,g*u,y*u);for(let w=x;w<m;++w){const _=n[w];if(_<0||_>=l[0])throw new Error(sR(w,n[w],l[0]));for(let T=0;T<u;T++)p[y*u+T]+=s[_*u+T]}if(r)for(let w=0;w<u;w++)p[y*u+w]/=m-x;if(x=m,++m,g=y+1,y=v,m>a)break}return g<h&&p.fill(o,g*u,h*u),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=po(s=>Math.sqrt(s));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=Gs((s,e)=>{const t=s-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7=po((s,e)=>{const{pattern:t,replaceGlobal:n,rewrite:i}=e;return s.replace(new RegExp(t,n?"g":""),i)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(s,e,t,n){const i=tn(s,e.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*t[l]+n[l];i.set(e.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O7{constructor(e,t,n,i,r,o){this.separator=Do(e),this.nGramWidths=t,this.leftPad=Do(n),this.rightPad=Do(i),this.padWidth=r,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),u=Math.max(0,l-a),c=Math.max(0,l-(r-(a+1))),h=o-(u+c),d=t+(u>0?0:a-l);let f=0;f+=u*this.leftPad.length;for(let y=0;y<h;++y)f+=e[d+y].length;f+=c*this.rightPad.length;const p=u+c+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const x=n[i+a];let m=0;const g=y=>y.forEach(v=>x[m++]=v);for(let y=0;y<u;++y)g(this.leftPad),g(this.separator);for(let y=0;y<h-1;++y)g(e[d+y]),g(this.separator);if(h>0){g(e[d+h-1]);for(let y=0;y<c;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<c-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,i=t.length;if(i>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<i;++u){let c=t[u]>=l;if(c=c&&t[u]<=n,!c)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${n}]`);l=t[u]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=Yn("int32",i);if(n===0||i===0){const l=new Array(n);for(let u=0;u<=r;++u)o[u]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const u=t[l]-t[l-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&c===0&&(c=1),o[l]=o[l-1]+c}const a=new Array(o[r]);for(let l=0;l<r;++l){const u=t[l];let c=o[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],f=this.getNumNGrams(d,h);this.createNGrams(e,u,a,c,f,h),c+=f}),this.preserveShort&&c===o[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,u,a,c,1,d)}}return[a,o]}}function F7(s,e,t,n,i,r,o,a){return new O7(t,n,i,r,o,a).compute(s,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(s,e,t,n){if(!s.length)return;if(e.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(e.length===1){const r=e[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!t||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!t||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||e.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!t||o.length!==0)&&n.push(o),i=r+1}}function B7(s,e,t){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;U7(s[d],e,t,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=Yn("int32",r*2),u=new Array(r),c=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,u[h]=i[h],++h;return[l,u,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(s,e){const t=Yn("int32",s.length);for(let n=0;n<s.length;++n)t[n]=uB(s[n]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=Gs((s,e)=>s-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(s,e){const t=new Array(s.rank);for(let i=0;i<t.length;i++)t[i]=s.shape[i]*e[i];const n=tn(t,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bc=(s,e)=>{const t=e.value-s.value;return t===0?s.index-e.index:t};function gR(s,e,t=0,n=s.length-1){for(;n>t;){if(n-t>600){const a=n-t+1,l=e-t+1,u=Math.log(a),c=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*c/a+h)),f=Math.min(n,Math.floor(e+(a-l)*c/a+h));gR(s,e,d,f)}const i=s[e];let r=t,o=n;for(hc(s,t,e),bc(s[n],i)>0&&hc(s,t,n);r<o;){for(hc(s,r,o),r++,o--;bc(s[r],i)<0;)r=r+1;for(;bc(s[o],i)>0;)o=o-1}bc(s[t],i)===0?hc(s,t,o):(o=o+1,hc(s,o,n)),o<=e&&(t=o+1),e<=o&&(n=o-1)}}function G7(s,e,t,n,i){const r=e[e.length-1],[o,a]=[s.length/r,r],l=Cr(t,o*n),u=Cr("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((y,v)=>p[v]={value:y,index:v}),n<p.length&&(gR(p,n),p=p.slice(0,n)),i&&p.sort(bc);const x=h*n,m=l.subarray(x,x+n),g=u.subarray(x,x+n);for(let y=0;y<n;y++)m[y]=p[y].value,g[y]=p[y].index}const c=e.slice();return c[c.length-1]=n,[tn(c,t,l),tn(c,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(s,e,t,n){const i=wn(e,t)[0],r=[1,t[0],1];for(let p=0;p<i;p++)r[0]*=t[p];r[1]=t[i];for(let p=i+1;p<t.length;p++)r[2]*=t[p];const o=new Map,a=new Int32Array(t[i]),l=new mu(r,n,s),u=[],c=r[0]===1&&r[2]===1;for(let p=0;p<t[i];p++){let x;if(c)x=s[p].toString();else{const g=[];for(let y=0;y<r[0];y++)for(let v=0;v<r[2];v++)g.push(l.get(y,p,v));x=g.join(",")}const m=o.get(x);if(m!=null)a[p]=m;else{const g=o.size;o.set(x,g),a[p]=g,u.push(p)}}const h=r.slice();h[1]=o.size;const d=new mu(h,n);u.forEach((p,x)=>{for(let m=0;m<r[0];m++)for(let g=0;g<r[2];g++)d.set(l.get(m,p,g),m,x,g)});const f=t.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR=Object.freeze(Object.defineProperty({__proto__:null,addImpl:Gj,bincountImpl:Hj,bincountReduceImpl:Xj,bitwiseAndImpl:qj,castImpl:Wj,ceilImpl:Kj,concatImpl:jj,equalImpl:Yj,expImpl:Zj,expm1Impl:Jj,floorDivImpl:e7,floorImpl:Qj,gatherNdImpl:t7,gatherV2Impl:n7,greaterEqualImpl:i7,greaterImpl:s7,lessEqualImpl:o7,lessImpl:r7,linSpaceImpl:a7,logImpl:l7,maxImpl:u7,maximumImpl:c7,minimumImpl:h7,multiplyImpl:mR,negImpl:d7,notEqualImpl:f7,prodImpl:m7,raggedGatherImpl:S7,raggedRangeImpl:_7,raggedTensorToTensorImpl:C7,rangeImpl:T7,rsqrtImpl:E7,scatterImpl:A7,sigmoidImpl:I7,simpleAbsImpl:Vj,sliceImpl:R7,sparseFillEmptyRowsImpl:M7,sparseReshapeImpl:N7,sparseSegmentReductionImpl:P7,sqrtImpl:k7,squaredDifferenceImpl:$7,staticRegexReplaceImpl:D7,stridedSliceImpl:L7,stringNGramsImpl:F7,stringSplitImpl:B7,stringToHashBucketFastImpl:z7,subImpl:V7,tileImpl:W7,topKImpl:G7,transposeImpl:p7,uniqueImpl:H7},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:X7,castImpl:q7,ceilImpl:K7,concatImpl:j7,equalImpl:Y7,expImpl:Z7,expm1Impl:J7,floorImpl:Q7,floorDivImpl:eY,gatherNdImpl:tY,gatherV2Impl:nY,greaterEqualImpl:sY,greaterImpl:iY,lessEqualImpl:rY,lessImpl:oY,logImpl:aY,maxImpl:lY,maximumImpl:uY,minimumImpl:cY,multiplyImpl:hY,negImpl:dY,notEqualImpl:fY,prodImpl:pY,rangeImpl:mY,rsqrtImpl:gY,scatterImpl:xY,simpleAbsImpl:yY,sliceImpl:bY,stridedSliceImpl:vY,stringNGramsImpl:wY,subImpl:SY,tileImpl:_Y,topKImpl:CY,transposeImpl:TY,uniqueImpl:Dme}=xR;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY=Gt({opType:Te.ABS,cpuKernelImpl:yY}),AY={kernelName:Xy,backendName:"webgpu",kernelFunc:EY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=Gt({opType:Te.ACOS}),RY={kernelName:qy,backendName:"webgpu",kernelFunc:IY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY=Gt({opType:Te.ACOSH}),NY={kernelName:Ky,backendName:"webgpu",kernelFunc:MY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=is({opType:ut.ADD,cpuKernelImpl:X7,supportsComplex:!0}),kY={kernelName:Tp,backendName:"webgpu",kernelFunc:PY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $Y=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(i=>{e.push(`let v${i} = get${i}ByOutputCoords(coords);`)});const t=this.variableNames.map(i=>`v${i}`).join(" + ");return`
      ${Ie("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(s){const{inputs:e,backend:t}=s,n=e;if(n.length===1)return ii({inputs:{x:n[0]},backend:t});const i=n.map(a=>a.dtype).reduce((a,l)=>zs(a,l)),r=n.map(a=>a.shape),o=new $Y(r);return t.runWebGPUProgram(o,n,i)}const LY={kernelName:jy,backendName:"webgpu",kernelFunc:DY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OY{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){D(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${Ie()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let FY=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=Un(this.outputShape.length),t=yR(this.newDim);return`
      ${Ie("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function yR(s){const e=s.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let n=0;n<s.length;n++)t[s[n]]=`coords.${Xr(n)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{perm:r}=n,o=t,a=i.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=i.shape[r[c]];if(t.shouldExecuteOnCPU([i])){const h=o.tensorMap.get(i.dataId).values,d=TY(h,i.shape,i.dtype,r,l);return t.makeTensorInfo(l,i.dtype,d)}if(i.shape.length===2&&en(r,[1,0])){const c=new OY(i.shape,r);return o.runWebGPUProgram(c,[i],i.dtype)}const u=new FY(i.shape,r);return o.runWebGPUProgram(u,[i],i.dtype)}const UY={kernelName:Ac,backendName:"webgpu",kernelFunc:Tr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BY=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[i]=vi(this.inputShape,[1]);this.outputShape=i.length===0?[1]:i,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const i=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${n}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ie("index")} {
         let outputIndex = index / ${n};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${n}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${n}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${i}
        }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY={mean:"float32",all:"bool",any:"bool"};function ul(s,e,t,n,i){const r=s.shape.length,o=[],a=wn(e,s.shape);let l=a;const u=ms(l,r);let c=s;u!=null&&(c=Tr({inputs:{x:s},attrs:{perm:u},backend:i}),l=gs(l.length,r),o.push(c)),ci(n,l,r);const[h,d]=vi(c.shape,l);let f=h;t&&(f=ui(h,a));let p;if((n==="max"||n==="prod")&&i.shouldExecuteOnCPU([c])){const x=i.tensorMap.get(c.dataId).values;switch(n){case"max":const m=lY(x,ae(d),f,s.dtype);p=i.makeTensorInfo(f,s.dtype,m);break;case"prod":const{outVals:g,outShape:y,outDtype:v}=pY(c.shape,c.dtype,x,l);p=i.makeTensorInfo(y,v,g);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{const x=ae(d),g=ae(c.shape)/x,y={windowSize:x,inSize:x,batchSize:g,outSize:1},v=zY[n]||Np(s.dtype),w=[{type:"int32",data:[x]}],_=new BY(y,n,i.device.limits.maxComputeWorkgroupSizeX),T=i.runWebGPUProgram(_,[c],v,w);o.push(T),p=je({inputs:{x:T},attrs:{shape:f},backend:i})}return o.forEach(x=>i.disposeData(x.dataId)),p}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VY(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{keepDims:r,axis:o}=n;return ul(i,o,r,"all",t)}const WY={kernelName:Yy,backendName:"webgpu",kernelFunc:VY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{keepDims:r,axis:o}=n;return ul(i,o,r,"any",t)}const HY={kernelName:Zy,backendName:"webgpu",kernelFunc:GY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bR=class{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const i=[t];this.op=n==="min"?"<":">";const[r,o]=vi(e,i);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=Ue(this.outputShape),ae(o)<32?(this.type="plain",this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Re(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Xr(this.inputShape.length-1)}`,n=()=>{let i="";if(this.outputShape.length===1)this.inputShape.length!==1&&(i+="outputCoords,");else for(let r=0;r<this.outputShape.length;r++)i+=`outputCoords.${Xr(r)},`;return i};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${Ie("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${n()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${n()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r}=n;let o=wn(r,i.shape);const a=ms(o,i.shape.length);let l=i;const u=[];a!=null&&(l=Tr({inputs:{x:i},backend:t,attrs:{perm:a}}),u.push(l),o=gs(o.length,l.shape.length)),ci("argMax",[o[0]],l.shape.length);const c=new bR(l.shape,o[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>t.disposeData(f.dataId)),d}const qY={kernelName:Jy,backendName:"webgpu",kernelFunc:XY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r}=n;let o=wn(r,i.shape);const a=ms(o,i.shape.length);let l=i;const u=[];a!=null&&(l=Tr({inputs:{x:i},backend:t,attrs:{perm:a}}),u.push(l),o=gs(o.length,l.shape.length)),ci("argMin",[o[0]],l.shape.length);const c=new bR(l.shape,o[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=t.runWebGPUProgram(c,[l],"int32",h);return u.forEach(f=>t.disposeData(f.dataId)),d}const jY={kernelName:Qy,backendName:"webgpu",kernelFunc:KY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=Gt({opType:Te.ASIN}),ZY={kernelName:e0,backendName:"webgpu",kernelFunc:YY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=Gt({opType:Te.ASINH}),QY={kernelName:t0,backendName:"webgpu",kernelFunc:JY};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=Gt({opType:Te.ATAN}),t9={kernelName:n0,backendName:"webgpu",kernelFunc:e9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=is({opType:ut.ATAN2}),s9={kernelName:i0,backendName:"webgpu",kernelFunc:n9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i9=Gt({opType:Te.ATANH}),r9={kernelName:s0,backendName:"webgpu",kernelFunc:i9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o9{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ph=class{constructor(e,t,n=!1,i=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=i,this.includeBatchIndex=r,this.shaderKey=`pool2D_${t}_${n}_${i}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},Iw=class{constructor(e,t,n=!1,i=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=i,this.includeBatchIndex=r,this.shaderKey=`pool3D_${t}_${n}_${i}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{reductionIndices:r,keepDims:o}=n;return ul(i,r,o,"max",t)}const a9={kernelName:db,backendName:"webgpu",kernelFunc:vR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{keepDims:r,axis:o}=n;return ul(i,o,r,"mean",t)}const l9={kernelName:xb,backendName:"webgpu",kernelFunc:wR};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(s,e,t,n){if(e.filterWidth===1&&e.filterHeight===1&&en(e.inShape,e.outShape))return ii({inputs:{x:s},backend:n});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const o=s.shape.length,a=je({inputs:{x:s},backend:n,attrs:{shape:[s.shape[o-3]*s.shape[o-2],s.shape[o-1]]}});let l;t==="avg"?l=wR({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}}):(D(t==="max",()=>`Invalid pool type ${t}`),l=vR({inputs:{x:a},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));const u=je({inputs:{x:l},backend:n,attrs:{shape:e.outShape}});return n.disposeData(a.dataId),n.disposeData(l.dataId),u}let i;const r=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?i=new o9(e):(t==="avg"?i=new ph(e,"avg"):(D(t==="max",()=>`Invalid pool type ${t}`),i=new ph(e,"max")),r.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),n.runWebGPUProgram(i,[s],s.dtype,r)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=Fi(i.shape,r,o,1,a,l);return SR(i,c,"avg",t)}const c9={kernelName:r0,backendName:"webgpu",kernelFunc:u9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],h=co(i.shape,r,o,c,a,u,l),d=new Iw(h,"avg"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[i],i.dtype,f)}const d9={kernelName:o0,backendName:"webgpu",kernelFunc:h9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let f9=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},p9=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,h=co(o.shape,a,l,1,u,c),d=new p9(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return t.runWebGPUProgram(d,[i],o.dtype,p)}const g9={kernelName:DE,backendName:"webgpu",kernelFunc:m9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r;fR([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=n,c=Fi(o.shape,a,l,1,u),h=new f9(c),d=1/(c.filterHeight*c.filterWidth),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[i],o.dtype,f)}const y9={kernelName:$E,backendName:"webgpu",kernelFunc:x9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(s){const{inputs:e,backend:t,attrs:n}=s,{a:i,b:r}=e,{transposeA:o,transposeB:a}=n;return Hp({a:i,b:r,transposeA:o,transposeB:a,backend:t})}const v9={kernelName:a0,backendName:"webgpu",kernelFunc:b9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w9=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Un(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Un(this.rank),t=S9(this.rank);let n;return this.start.length===1?n=this.outputShape.map((r,o)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,o)=>`sourceLoc.${Bx[o]} = uniforms.start.${Xr(o)} + coords.${Bx[o]};`),`
      ${Ie("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}};const Bx=["x","y","z","w","u","v"];function S9(s){if(s===1)return"sourceLoc";if(s<=6)return Bx.slice(0,s).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uu(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{begin:r,size:o}=n,[a,l]=nw(i,r,o);if(Jv(i,a,l),t.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=t.tensorMap.get(i.dataId),d=bY(h.values,a,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,d)}if(ae(l)===0)return t.makeTensorInfo(l,i.dtype,[]);const u=new w9(a,l),c=[{type:"int32",data:a}];return t.runWebGPUProgram(u,[i],i.dtype,c)}const _9={kernelName:Zb,backendName:"webgpu",kernelFunc:Uu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockShape:r,crops:o}=n;D(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=r.reduce((y,v)=>y*v),l=Uh(i.shape,r,a),u=Bh(l.length,r.length),c=zh(i.shape,r,a),h=aw(o,r.length),d=lw(c,o,r.length),f=[],p=je({inputs:{x:i},backend:t,attrs:{shape:l}}),x=Tr({inputs:{x:p},backend:t,attrs:{perm:u}}),m=je({inputs:{x},backend:t,attrs:{shape:c}}),g=Uu({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return f.push(p),f.push(x),f.push(m),f.forEach(y=>t.disposeData(y.dataId)),g},T9={kernelName:l0,backendName:"webgpu",kernelFunc:C9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9=`
  fn bincount_write(index: i32, value: f32) {
    ${Qo("&result[index]","value","float32")}
  }
`,A9=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class _R{constructor(e,t,n=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?A9:E9}
  ${Ie("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,weights:r}=e,{size:o}=n,a=ae(i.shape),u=ae(r.shape)>0,c=[o],h=r.dtype,d=Bs({backend:t,attrs:{shape:c,value:0,dtype:h}}),f=new _R([a],u),p=[{type:"int32",data:[o]}],x=u?[i,r]:[i];return t.runWebGPUProgram(f,x,h,p,d)}const R9={kernelName:u0,backendName:"webgpu",kernelFunc:I9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M9{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${Ie("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(s){const{inputs:e,backend:t}=s,{s0:n,s1:i}=e;if(t.shouldExecuteOnCPU([n,i])){const c=t.tensorMap.get(n.dataId),h=t.tensorMap.get(i.dataId),d=c.values,f=h.values,p=It(Array.from(d),Array.from(f));return t.makeTensorInfo([p.length],"int32",Int32Array.from(p))}const r=ae(n.shape),o=ae(i.shape),a=Math.max(r,o),l=new M9(a),u=[{type:"int32",data:[r]},{type:"int32",data:[o]}];return t.runWebGPUProgram(l,[n,i],"int32",u)}const P9={kernelName:c0,backendName:"webgpu",kernelFunc:N9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=is({opType:ut.NOT_EQUAL,dtype:"bool",cpuKernelImpl:fY}),k9={kernelName:Tb,backendName:"webgpu",kernelFunc:CR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vh(s){const{inputs:e,backend:t}=s,{input:n}=e,i=t.tensorMap.get(n.dataId);return ii({inputs:{x:i.complexTensorInfos.real},backend:t})}const $9={kernelName:Lb,backendName:"webgpu",kernelFunc:Vh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(s,e){const t=new Fu(s.shape,Te.TO_INT),n=e.runWebGPUProgram(t,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zx(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return ii({inputs:{x:i},backend:t});const o=io(i.shape),a=zx({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),l=ll({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeData(a.dataId),l}if(i.dtype==="complex64"){const o=Vh({inputs:{input:i},backend:t}),a=zx({inputs:{x:o},backend:t,attrs:{dtype:r}});return t.disposeData(o.dataId),a}if(!RE(i.dtype,r)){const o=ii({inputs:{x:i},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(t.shouldExecuteOnCPU([i])){const o=t.tensorMap.get(i.dataId).values,[a,l,u]=q7(o,i.shape,i.dtype,r);return t.makeTensorInfo(a,l,u)}if(r==="int32")return D9(i,t);if(r==="bool"){const o=t.makeTensorInfo([],"bool",Cr("bool",1)),l=CR({inputs:{a:i,b:o},backend:t});return t.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const L9={kernelName:Ep,backendName:"webgpu",kernelFunc:zx};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9=Gt({opType:Te.CEIL,cpuKernelImpl:K7}),F9={kernelName:h0,backendName:"webgpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U9{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ie("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let B9=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ie("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{clipValueMin:r,clipValueMax:o}=n;let a;const l=[{type:"float32",data:[r]},{type:"float32",data:[o]}];return ae(i.shape)%4===0?a=new U9(i.shape):a=new B9(i.shape),t.runWebGPUProgram(a,[i],i.dtype,l)}const V9={kernelName:d0,backendName:"webgpu",kernelFunc:z9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let W9=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(s,e){return{dataId:e.dataId,dtype:e.dtype,shape:s.shape}}function G9(s){const{inputs:e,backend:t}=s,{x:n}=e,i=t.tensorMap.get(n.dataId),r=new W9(n.shape),o=[z_(n,i.complexTensorInfos.real),z_(n,i.complexTensorInfos.imag)];return t.runWebGPUProgram(r,o,o[0].dtype)}const H9={kernelName:p0,backendName:"webgpu",kernelFunc:G9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let X9=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Li(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);const n=this.offsetLength,i=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${i})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ie("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xp(s){const{inputs:e,backend:t}=s,{input:n}=e,i=t.tensorMap.get(n.dataId);return ii({inputs:{x:i.complexTensorInfos.imag},backend:t})}const q9={kernelName:J0,backendName:"webgpu",kernelFunc:Xp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(s,e,t){const n=s[0].dtype;if(n==="complex64"){const p=s.map(v=>Vh({inputs:{input:v},backend:t})),x=s.map(v=>Xp({inputs:{input:v},backend:t})),m=vc(p,e,t),g=vc(x,e,t),y=ll({inputs:{real:m,imag:g},backend:t});return p.forEach(v=>t.disposeData(v.dataId)),x.forEach(v=>t.disposeData(v.dataId)),t.disposeData(m.dataId),t.disposeData(g.dataId),y}let i=t.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const p=s.map(_=>{const A=[-1,ae(_.shape.slice(e))];return je({inputs:{x:_},backend:t,attrs:{shape:A}})}),x=p.map(_=>({vals:t.readSync(_.dataId),shape:_.shape})),m=Li(p.map(_=>_.shape),1),g=p[0].shape[0]===1,y=j7(x,m,n,g),v=Li(s.map(_=>_.shape),e),w=t.makeTensorInfo(v,n,y);return p.forEach(_=>t.disposeData(_.dataId)),w}const r=t.device.limits.maxStorageBuffersPerShaderStage-1;if(s.length>r){const p=[];for(let m=0;m<s.length;m+=r){const g=s.slice(m,m+r);p.push(vc(g,e,t))}const x=vc(p,e,t);for(const m of p)t.disposeData(m.dataId);return x}const{tensors2D:o,outShape:a}=K9(s,e,t),l=o.map(p=>p.shape),u=new X9(l),c=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],c.push({type:"int32",data:[h[0]]});for(let p=1;p<h.length;p++)h[p]=h[p-1]+l[p][1],c.push({type:"int32",data:[h[p]]})}const d=t.runWebGPUProgram(u,o,o[0].dtype,c);o.forEach(p=>t.disposeData(p.dataId));const f=je({inputs:{x:d},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),f}function K9(s,e,t){const n=Li(s.map(r=>r.shape),e);return{tensors2D:s.map(r=>je({inputs:{x:r},backend:t,attrs:{shape:[ae(r.shape.slice(0,e)),ae(r.shape.slice(e))]}})),outShape:n}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(s){const{inputs:e,backend:t,attrs:n}=s,{axis:i}=n,r=wn(i,e[0].shape)[0],o=e.map(u=>u.shape);iw(o,r);const a=Li(e.map(u=>u.shape),r);if(ae(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>ae(u.shape)>0);return l.length===1?ii({inputs:{x:l[0]},backend:t}):vc(l,r,t)}const j9={kernelName:m0,backendName:"webgpu",kernelFunc:TR};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(s,e,t,n,i=!1,r=null,o=!1,a=4,l=4,u=4){const c=C=>{switch(C){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${C} is not supported.`)}},h=C=>{switch(C){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${C} is not supported.`)}},d=s?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,f=s?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,p=s?"uniforms.xShape[1]":"uniforms.xShape[2]",x=s?"uniforms.xShape[2]":"uniforms.xShape[3]",m=s?"row":"col",g=s?"col":"row",y=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${s?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${m} / outWidth;
      let outCol = ${m} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${At(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${x}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,v=s?e&&n?`
      ${y}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${y}
      }
      return ${At(a)}(0.0);`:n&&t?`
      ${y}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${y}
      }
      return ${At(a)}(0.0);`,w=`${h(l)}`,_=At(u),T=At(s?a:l),A=At(s?l:a);return`
      ${fo(r,o,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${T} {
        ${s?v:w}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${A} {
        ${s?w:v}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${_}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${s?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${f}
        ${al(i,r)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class Z9{constructor(e,t,n,i,r=!1,o=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=cR(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hR(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=r,this.activation=o,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=i%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Wp(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Gp(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Y9(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J9{constructor(e,t=!1,n=null,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=i,t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${fo(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${al(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${Ie("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q9{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",i=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${Ie("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${n};
        let col = ${i};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${r};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(s,e){const t=s.length;return t>=3?e?[...s.slice(0,-3),s[t-3]*s[t-2],s[t-1]]:[...s.slice(0,-3),s[t-3],s[t-2]*s[t-1]]:!e&&t===1&&s[0]>1?[s[0],1]:null}function eZ({x:s,filter:e,convInfo:t,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=t.dataFormat==="channelsLast",u=!l,c=!1,h=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=[];let f,p;if(h){const g=t.inHeight*t.inWidth*t.inChannels;f=je({inputs:{x:s},backend:n,attrs:{shape:[1,t.batchSize,g]}}),p=je({inputs:{x:e},backend:n,attrs:{shape:[1,g,t.outChannels]}})}else f=je({inputs:{x:s},backend:n,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),p=je({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(d.push(f),d.push(p),r!=null){const g=zf(r.shape,l);g!=null&&(r=je({inputs:{x:r},backend:n,attrs:{shape:g}}),d.push(r))}if(i!=null){const g=zf(i.shape,l);g!=null&&(i=je({inputs:{x:i},backend:n,attrs:{shape:g}}),d.push(i))}const x=Hp({a:l?f:p,b:l?p:f,transposeA:u,transposeB:c,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),m=je({inputs:{x},backend:n,attrs:{shape:t.outShape}});d.push(x);for(const g of d)n.disposeData(g.dataId);return m}function tZ({x:s,filter:e,convInfo:t,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:h,strideHeight:d,padInfo:f,outWidth:p,outHeight:x,dilationWidth:m,dilationHeight:g,dataFormat:y}=t,v=y==="channelsLast",w=l*u*c,_=x*p,T=v?[t.batchSize,_,w]:[t.batchSize,w,_],A=new Q9(T,v),M=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[d,h]},{type:"int32",data:[g,m]},{type:"int32",data:[p]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],C=n.runWebGPUProgram(A,[s],s.dtype,M),R=[];R.push(C);const $=je({inputs:{x:e},backend:n,attrs:{shape:[1,w,-1]}});if(R.push($),r!=null){const Z=zf(r.shape,v);Z!=null&&(r=je({inputs:{x:r},backend:n,attrs:{shape:Z}}),R.push(r))}if(i!=null){const Z=zf(i.shape,v);Z!=null&&(i=je({inputs:{x:i},backend:n,attrs:{shape:Z}}),R.push(i))}const O=Hp({a:v?C:$,b:v?$:C,transposeA:!v,transposeB:!1,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),H=je({inputs:{x:O},backend:n,attrs:{shape:t.outShape}});R.push(O);for(const Z of R)n.disposeData(Z.dataId);return H}function ER({x:s,filter:e,convInfo:t,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=i!=null,u=r!=null,c=t.dataFormat==="channelsLast",h=c&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=J().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return eZ({x:s,filter:e,convInfo:t,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});const f=J().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),p=f>-1?f:n.thresholdToIncreaseWorkgroups,x=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(J().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||x<=p)return tZ({x:s,filter:e,convInfo:t,backend:n,bias:i,preluActivationWeights:r,leakyreluAlpha:o,activation:a});let m;const g=[t.padInfo.top,t.padInfo.left],y=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)m=new J9(t,l,a,u);else{const T=c?t.outHeight*t.outWidth:t.outChannels,A=c?t.outChannels:t.outHeight*t.outWidth,M=t.filterHeight*t.filterWidth*t.inChannels;y.push({type:"int32",data:[T]},{type:"int32",data:[A]},{type:"int32",data:[M]});const C=n.adapterInfo.isIntel();m=new Z9(t,T,A,M,l,a,u,C)}const v=[],w=[s,e];l&&(!c&&i.shape.length===1&&(i=je({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}}),v.push(i)),w.push(i)),u&&(!c&&r.shape.length===1&&(r=je({inputs:{x:r},backend:n,attrs:{shape:[r.shape[0],1,1]}}),v.push(r)),w.push(r)),a==="leakyrelu"&&(y.push({type:"float32",data:[o]}),m.uniforms+=" alpha : f32,");const _=n.runWebGPUProgram(m,w,s.dtype,y);for(const T of v)n.disposeData(T.dataId);return _}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(s){const{inputs:e,attrs:t,backend:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=t,h=or(l),d=Gn(i.shape,r.shape,o,u,a,c,!1,h);return ER({x:i,filter:r,convInfo:d,backend:n})}const sZ={kernelName:g0,backendName:"webgpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iZ=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,i=`
    ${Ie()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${i}
    `:`
    ${Ie("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},rZ=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${Ie("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},oZ=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${Ie("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},aZ=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${Ie("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,h=or(l),d=Gn(i.shape,c,o,1,a,u,!1,h),f=new rZ(d),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(f,[i,r],i.dtype,p)}const uZ={kernelName:x0,backendName:"webgpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cZ(s=4){const e=r=>{switch(r){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${r} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${At(s)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${At(s)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${s}];`}
      }
      return ${At(s)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${At(s)} {
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${At(s)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(s)}
    }
    return ${At(s)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${At(s)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${s}] = value;
    }
  }`}class hZ{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,D(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=cR(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hR(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Wp(this.elementsPerThread,this.workgroupSize):Gp(this.elementsPerThread,this.workgroupSize);return`
    ${cZ(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{inputShape:o,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=n,h=or(u),d=Gn(o,r.shape,a,1,l,c,!1,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let p;if(J().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")p=new iZ(d);else{p=new hZ(d);const x=d.inHeight*d.inWidth,m=d.inChannels,g=d.filterHeight*d.filterWidth*d.outChannels;f.push({type:"uint32",data:[x]},{type:"uint32",data:[m]},{type:"uint32",data:[g]})}return t.runWebGPUProgram(p,[i,r],"float32",f)}const fZ={kernelName:y0,backendName:"webgpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pZ{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=n,u=Jo(i.shape,r.shape,o,l,a),c=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],d=new pZ(u),f=zs(i.dtype,r.dtype);return t.runWebGPUProgram(d,[i,r],f,h)}const gZ={kernelName:b0,backendName:"webgpu",kernelFunc:mZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,pad:a,filterShape:l}=n,u=Jo(i.shape,l,o,1,a),c=new oZ(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return t.runWebGPUProgram(c,[i,r],r.dtype,h)}const yZ={kernelName:OE,backendName:"webgpu",kernelFunc:xZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{strides:o,pad:a,inputShape:l}=n,u=Jo(l,r.shape,o,1,a),c=new aZ(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return t.runWebGPUProgram(c,[i,r],i.dtype,h)}const vZ={kernelName:v0,backendName:"webgpu",kernelFunc:bZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wZ=Gt({opType:Te.COS}),SZ={kernelName:w0,backendName:"webgpu",kernelFunc:wZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=Gt({opType:Te.COSH}),CZ={kernelName:S0,backendName:"webgpu",kernelFunc:_Z};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TZ=class{constructor(e,t,n,i){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=i==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,i,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[o,a,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${o});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${i};
        let width_scale = ${a};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ=s=>{const{inputs:e,backend:t,attrs:n}=s,{image:i,boxes:r,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:u}=n,c=new TZ(i.shape[3],r.shape,a,l),h=[{type:"float32",data:[u]}];return t.runWebGPUProgram(c,[i,r,o],"float32",h)},AZ={kernelName:T0,backendName:"webgpu",kernelFunc:EZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mh;(function(s){s.Prod="*",s.Sum="+"})(mh||(mh={}));let V_=class{constructor(e,t,n,i){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=i,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===mh.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${W_(e,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let r="",o="";return this.exclusive?(r=this.reverse?`end != ${i-1}`:"end != 0",o=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${i}`:"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),`
      ${Ie("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${G_(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${o};
           ${G_(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${W_(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function W_(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.x, ${e}.y`;if(s===3)return`${e}.x, ${e}.y, ${e}.z`;if(s===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${s} is not yet supported`)}function G_(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.y`;if(s===3)return`${e}.z`;if(s===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(s,e,t,n,i,r){const o=e.shape.length,a=ms([n],o);let l=e;a!=null&&(l=Tr({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=gs(1,o)[0];if(u!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);const c=l.shape[u];let h=ii({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const f=new V_(s,l.shape,!1,r),p=h,x=[{type:"float32",data:[d]}];h=t.runWebGPUProgram(f,[h],h.dtype,x),t.disposeData(p.dataId)}if(i){const d=new V_(s,l.shape,i,r),f=h,p=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(d,[h],h.dtype,p),t.disposeData(f.dataId)}if(a!=null){const d=Fh(a),f=Tr({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeData(h.dataId),t.disposeData(l.dataId),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,exclusive:o,reverse:a}=n;return AR(mh.Prod,i,t,r,o,a)}const RZ={kernelName:_0,backendName:"webgpu",kernelFunc:IZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,exclusive:o,reverse:a}=n;return AR(mh.Sum,i,t,r,o,a)}const NZ={kernelName:C0,backendName:"webgpu",kernelFunc:MZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,weights:r}=e,{size:o,binaryOutput:a}=n,l=i.shape.length===1,c=ae(r.shape)>0,h=r.dtype,d=l?[i.shape[0]]:[i.shape[0],i.shape[1]],f=l?[o]:[i.shape[0],o],p=Bs({backend:t,attrs:{shape:f,value:0,dtype:h}}),x=new _R(d,c,a),m=[{type:"int32",data:[o]}],g=c?[i,r]:[i];return t.runWebGPUProgram(x,g,h,m,p)}const kZ={kernelName:E0,backendName:"webgpu",kernelFunc:PZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $Z=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],u=o==="NHWC"?i.shape[2]:i.shape[3],c=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=u*r,f=c/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],x=[{type:"int32",data:[r]}],m=new $Z(p,o);return t.runWebGPUProgram(m,[i],i.dtype,x)}const LZ={kernelName:A0,backendName:"webgpu",kernelFunc:DZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OZ{constructor(e,t,n,i=!1,r=null,o=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=r,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,i=this.workgroupSize[0]+this.filterWidth-1;return`
      ${fo(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${i}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ie()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${i}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${al(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IR{constructor(e,t=!1,n=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Ue(r),this.dispatch=Re(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),D(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=i,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`
      ${fo(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${Ie("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${al(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RR=class{constructor(e,t=!1,n=null,i=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=i,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${fo(this.activation,this.hasPreluActivation,!1,4)}

      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${al(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=or(l);let d=u;d==null&&(d=[1,1]);const f=Gn(i.shape,r.shape,o,d,a,c,!0,h),p=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],x=f.dataFormat==="channelsLast";let m;return!x&&f.inHeight>16&&f.inWidth>16&&f.strideHeight===1&&f.strideWidth===1&&f.dilationWidth===1&&f.dilationHeight===1&&f.inChannels===f.outChannels?m=new OZ(f.outShape,f.filterHeight,f.filterWidth):x&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&f.dilationHeight===1&&f.dilationWidth===1&&f.inChannels%4===0?(m=new IR(f),p.push({type:"int32",data:[m.virtualWidth]})):(m=new RR(f),p.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),t.runWebGPUProgram(m,[i,r],i.dtype,p)}const UZ={kernelName:I0,backendName:"webgpu",kernelFunc:FZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BZ=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},zZ=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=n,h=Gn(i.shape,c,o,a,l,u,!0),d=new BZ(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[i,r],"float32",f)}const WZ={kernelName:R0,backendName:"webgpu",kernelFunc:VZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=n,h=Gn(c,r.shape,o,a,l,u,!0),d=new zZ(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[i,r],i.dtype,f)}const HZ={kernelName:M0,backendName:"webgpu",kernelFunc:GZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XZ=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(s){const{inputs:e,backend:t}=s,{x:n}=e,i=[...n.shape,...n.shape],r=ae(n.shape),o=je({inputs:{x:n},backend:t,attrs:{shape:[r]}}),a=new XZ(r),l=t.runWebGPUProgram(a,[o],o.dtype),u=je({inputs:{x:l},backend:t,attrs:{shape:i}});return t.disposeData(o.dataId),t.disposeData(l.dataId),u}const KZ={kernelName:N0,backendName:"webgpu",kernelFunc:qZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jZ=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${Ie("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YZ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=n,u=Lh(i.shape,r.shape,o,a,"NHWC",l),c=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],d=new jZ(u);return t.runWebGPUProgram(d,[i,r],i.dtype,h)}const ZZ={kernelName:P0,backendName:"webgpu",kernelFunc:YZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JZ{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(e.outShape),this.dispatch=Re(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${Ie("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Qo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class QZ{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ue(e.outShape),this.dispatch=Re(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${Ie("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Qo("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,dy:o}=e,{strides:a,pad:l,dilations:u}=n,c=Lh(i.shape,r.shape,a,l,"NHWC",u),h=r.dtype,d=new QZ(c,r.shape,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[ae(c.outShape)]}],p=Bs({backend:t,attrs:{shape:r.shape,value:0,dtype:h}});return t.runWebGPUProgram(d,[i,r,o],h,f,p)}const tJ={kernelName:ZU,backendName:"webgpu",kernelFunc:eJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,dy:o}=e,{strides:a,pad:l,dilations:u}=n,c=Lh(i.shape,r.shape,a,l,"NHWC",u),h=i.dtype,d=new JZ(c,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[ae(c.outShape)]}],p=Bs({backend:t,attrs:{shape:c.inShape,value:0,dtype:h}});return t.runWebGPUProgram(d,[i,r,o],h,f,p)}const sJ={kernelName:YU,backendName:"webgpu",kernelFunc:nJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iJ{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=vu.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey=`draw_${t}_${n}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${Ie("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rJ(s){const{inputs:e,backend:t,attrs:n}=s,{image:i}=e,{canvas:r,options:o}=n,[a,l]=i.shape.slice(0,2),{imageOptions:u}=o||{},c=(u==null?void 0:u.alpha)||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],f=new iJ(d,i.dtype,h);r.width=l,r.height=a;const p="webgpu";let x=r.getContext(p),m;x||(m=new OffscreenCanvas(l,a),x=m.getContext(p));const g=i.shape.length===3?i.shape[2]:1;x.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const y="int32",v=t.makeTensorInfo(d,y),w=t.tensorMap.get(v.dataId);w.resource=x.getCurrentTexture(),w.external=!0;const _=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(t.runWebGPUProgram(f,[i],y,_,v),m){const T=r.getContext("2d");if(!T)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");T.drawImage(m,0,0)}return t.disposeData(v.dataId),i}const oJ={kernelName:FE,backendName:"webgpu",kernelFunc:rJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR=is({opType:ut.MUL,cpuKernelImpl:hY,supportsComplex:!0}),aJ={kernelName:_b,backendName:"webgpu",kernelFunc:MR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n;return ul(i,r,o,"sum",t)}const lJ={kernelName:iv,backendName:"webgpu",kernelFunc:NR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(s){const{inputs:e,backend:t,attrs:n}=s,{equation:i}=n,r=e,{allDims:o,summedDims:a,idDims:l}=xw(i,r.length);bw(o.length,l,r);const{path:u,steps:c}=vw(a,l),h=c.length;let d=null,f=o.length;const p=[];for(let x=0;x<h;++x){for(const m of c[x]){const{permutationIndices:g,expandDims:y}=yw(f,l[m]);let v;ww(g)?v=r[m]:(v=Tr({inputs:{x:r[m]},backend:t,attrs:{perm:g}}),p.push(v));const w=v.shape.slice();for(let _=0;_<y.length;++_)w.splice(y[_],0,1);en(v.shape,w)||(v=je({inputs:{x:v},backend:t,attrs:{shape:w}}),p.push(v)),d===null?d=v:(d=MR({inputs:{a:v,b:d},backend:t}),p.push(d))}x<h-1&&(u[x]>=0&&(d=NR({inputs:{x:d},backend:t,attrs:{axis:u[x]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const x of p)x!==d&&t.disposeData(x.dataId);return d}const cJ={kernelName:$0,backendName:"webgpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hJ=Gt({opType:Te.ELU}),dJ={kernelName:D0,backendName:"webgpu",kernelFunc:hJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fJ=s=>{const{inputs:e,backend:t}=s,{dy:n,y:i}=e,r=new Uf(ut.ELU_DER,n.shape,i.shape);return t.runWebGPUProgram(r,[n,i],n.dtype)},pJ={kernelName:UE,backendName:"webgpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mJ=is({opType:ut.EQUAL,dtype:"bool",cpuKernelImpl:Y7}),gJ={kernelName:O0,backendName:"webgpu",kernelFunc:mJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ=Gt({opType:Te.ERF}),yJ={kernelName:L0,backendName:"webgpu",kernelFunc:xJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ=Gt({opType:Te.EXP,cpuKernelImpl:Z7,dtype:"float32"}),vJ={kernelName:F0,backendName:"webgpu",kernelFunc:bJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vx(s){const{inputs:e,attrs:t,backend:n}=s,{dim:i}=t,{input:r}=e,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(D(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),je({inputs:{x:r},backend:n,attrs:{shape:a}})}const wJ={kernelName:U0,backendName:"webgpu",kernelFunc:Vx};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ=Gt({opType:Te.EXPM1,cpuKernelImpl:J7}),_J={kernelName:B0,backendName:"webgpu",kernelFunc:SJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let H_=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(s,e,t){const n=t.tensorMap.get(s.dataId),i=ae(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=[],l=je({inputs:{x:s},backend:t,attrs:{shape:[o,r]}});a.push(l);const u=l.shape,c=new H_("real",u),h=new H_("imag",u),d=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],f=e?2*Math.PI:-2*Math.PI,p=e?u[1]:1,x=[{type:"float32",data:[f]},{type:"float32",data:[p]}],m=t.runWebGPUProgram(c,d,"float32",x);a.push(m);const g=t.runWebGPUProgram(h,d,"float32",x);a.push(g);const y=ll({inputs:{real:m,imag:g},backend:t});a.push(y);const v=je({inputs:{x:y},backend:t,attrs:{shape:s.shape}});return a.forEach(w=>t.disposeData(w.dataId)),v}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CJ(s){const{inputs:e,backend:t}=s,{input:n}=e;return PR(n,!1,t)}const TJ={kernelName:z0,backendName:"webgpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EJ=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ={kernelName:W0,backendName:"webgpu",kernelFunc:({inputs:s,backend:e})=>{const{image:t}=s,n=e,i=new EJ(t.shape);return n.runWebGPUProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ=Gt({opType:Te.FLOOR,cpuKernelImpl:Q7}),RJ={kernelName:G0,backendName:"webgpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MJ=is({opType:ut.FLOOR_DIV,cpuKernelImpl:eY,dtype:"int32"}),NJ={kernelName:H0,backendName:"webgpu",kernelFunc:MJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PJ=class{constructor(e,t,n=!1){this.pixelsOpType=vu.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ie("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ={kernelName:Tf,backendName:"webgpu",kernelFunc:$J};let Wl,Qm=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function $J(s){const{inputs:e,backend:t,attrs:n}=s;let{pixels:i}=e;const{numChannels:r}=n;if(i==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&i instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&i instanceof ImageBitmap,[c,h]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],d=[h,c,r],f=J().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,p=o||a;if(u||l||p){let y;if(f)y=t.device.importExternalTexture({source:i});else{if(p){const q=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Wl==null||q!==Qm)&&(Qm=q,Wl=document.createElement("canvas").getContext("2d",{willReadFrequently:Qm})),Wl.canvas.width=c,Wl.canvas.height=h,Wl.drawImage(i,0,0,c,h),i=Wl.canvas}const R=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,W=t.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",R);t.queue.copyExternalImageToTexture({source:i},{texture:W},[d[1],d[0]]),y=W}const v=ae(d),w=kn(d),_=new PJ(d,r,f),T=[{type:"uint32",data:[v]},{type:"uint32",data:[r]},{type:"uint32",data:[...w]}],A=t.makeTensorInfo([h,c],"int32"),M=t.tensorMap.get(A.dataId);M.resource=y;const C=t.runWebGPUProgram(_,[A],"int32",T);return t.disposeData(A.dataId),C}const x=i.data;let m=x;if(r!=null&&r!==4){m=new Uint8Array(i.width*i.height*r);const y=x.length;let v=0;for(let w=0;w<y;w++)w%4<r&&(m[v++]=x[w])}const g=t.makeTensorInfo(d,"int32",new Int32Array(m));return t.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DJ=class{constructor(e,t,n,i,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],It(e,t),It(e,n),this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),i!=null&&(It(e,i),this.variableNames.push("offset")),r!=null&&(It(e,r),this.variableNames.push("scale")),this.offsetShape=i,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ie("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ={kernelName:X0,backendName:"webgpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n,scale:i,offset:r,mean:o,variance:a}=s,{varianceEpsilon:l}=e,u=t,c=[n,o,a];let h=null;r!=null&&(h=r.shape,c.push(r));let d=null;i!=null&&(d=i.shape,c.push(i));const f=new DJ(n.shape,o.shape,a.shape,h,d),p=[{type:"float32",data:[l]}];return u.runWebGPUProgram(f,c,n.dtype,p)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,x=or(c),m=Gn(i.shape,r.shape,l,h,u,d,!1,x);return ER({x:i,filter:r,convInfo:m,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:p,activation:f})}const FJ={kernelName:Af,backendName:"webgpu",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n;let p=c;p==null&&(p=[1,1]),D(Ns(l,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${p}'`);const x=Gn(i.shape,r.shape,l,p,u,h,!0),m=[i,r],g=o!=null,y=a!=null;g&&m.push(o),y&&m.push(a);const v=[{type:"int32",data:[x.padInfo.top,x.padInfo.left]},{type:"int32",data:[x.inHeight,x.inWidth]}];let w;return x.outHeight>4&&x.outWidth>4&&x.strideWidth<=2&&x.inChannels===x.outChannels&&x.dilationHeight===1&&x.dilationWidth===1&&x.inChannels%4===0?(w=new IR(x,g,d,y),v.push({type:"int32",data:[w.virtualWidth]})):(w=new RR(x,g,d,y),v.push({type:"int32",data:[x.filterHeight]},{type:"int32",data:[x.filterWidth]},{type:"int32",data:[x.strideHeight,x.strideWidth]},{type:"int32",data:[x.dilationHeight,x.dilationWidth]})),d==="leakyrelu"&&(v.push({type:"float32",data:[f]}),w.uniforms+=" alpha : f32,"),t.runWebGPUProgram(w,m,"float32",v)}const BJ={kernelName:If,backendName:"webgpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zJ=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Un(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(s){const{inputs:e,backend:t}=s,{params:n,indices:i}=e,r=i.shape,o=r[r.length-1],a=ae(n.shape),[l,u,c,h]=Zv(n,i),d=je({inputs:{x:i},backend:t,attrs:{shape:[u,o]}}),f=je({inputs:{x:n},backend:t,attrs:{shape:[ae(n.shape)/c,c]}});if(t.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const y=t.readSync(i.dataId),v=t.bufferSync(n),w=tY(y,v,n.dtype,u,o,c,h,n.shape,a);return t.makeTensorInfo(l,n.dtype,w.values)}const p=new zJ(o,[u,c]),x=[{type:"int32",data:[o]},{type:"int32",data:h}],m=t.runWebGPUProgram(p,[f,d],f.dtype,x),g=je({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(m.dataId),g}const WJ={kernelName:K0,backendName:"webgpu",kernelFunc:VJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let GJ=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=HJ(this.aShape);return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function HJ(s){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let n=0;n<s.length;n++)n===2?t.push("indexZ"):t.push(`${e[n]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,indices:r}=e,{axis:o,batchDims:a}=n,l=wn(o,i.shape)[0],u=Cw(i,r,l,a),c=ae(r.shape),h=[],d=je({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=je({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const p=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([i,r])){const v=t.tensorMap.get(f.dataId).values,w=tn(f.shape,f.dtype,v),T=t.tensorMap.get(d.dataId).values,A=tn(d.shape,d.dtype,T),M=nY(A,w,p);return h.forEach(C=>t.disposeData(C.dataId)),t.makeTensorInfo(u.outputShape,M.dtype,M.values)}const x=new GJ(d.shape,p),m=t.runWebGPUProgram(x,[d,f],d.dtype);h.push(m);const g=je({inputs:{x:m},backend:t,attrs:{shape:u.outputShape}});return h.forEach(y=>t.disposeData(y.dataId)),g}const XJ={kernelName:q0,backendName:"webgpu",kernelFunc:kR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=is({opType:ut.GREATER,cpuKernelImpl:iY,dtype:"bool"}),KJ={kernelName:j0,backendName:"webgpu",kernelFunc:qJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jJ=is({opType:ut.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:sY}),YJ={kernelName:Y0,backendName:"webgpu",kernelFunc:jJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZJ(s){const{inputs:e,backend:t}=s,{input:n}=e;return PR(n,!0,t)}const JJ={kernelName:Z0,backendName:"webgpu",kernelFunc:ZJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ=Gt({opType:Te.IS_FINITE,dtype:"bool"}),eQ={kernelName:Q0,backendName:"webgpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tQ=Gt({opType:Te.IS_INF,dtype:"bool"}),nQ={kernelName:eb,backendName:"webgpu",kernelFunc:tQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sQ=Gt({opType:Te.IS_NAN,dtype:"bool"}),iQ={kernelName:tb,backendName:"webgpu",kernelFunc:sQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{alpha:r}=n,o=[{type:"float32",data:[r]}],a=new Fu(i.shape,Te.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[i],"float32",o)}const oQ={kernelName:nb,backendName:"webgpu",kernelFunc:rQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aQ=is({opType:ut.LESS,dtype:"bool",cpuKernelImpl:oY}),lQ={kernelName:sb,backendName:"webgpu",kernelFunc:aQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ=is({opType:ut.LESS_EQUAL,dtype:"bool",cpuKernelImpl:rY}),cQ={kernelName:ib,backendName:"webgpu",kernelFunc:uQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hQ{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dQ(s){const{backend:e,attrs:t}=s,{start:n,stop:i,num:r}=t,o=(i-n)/(r-1),a=new hQ(r),l=[{type:"float32",data:[n]},{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],"float32",l)}const fQ={kernelName:rb,backendName:"webgpu",kernelFunc:dQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pQ=Gt({opType:Te.LOG,cpuKernelImpl:aY}),mQ={kernelName:ob,backendName:"webgpu",kernelFunc:pQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gQ=Gt({opType:Te.LOG1P}),xQ={kernelName:ab,backendName:"webgpu",kernelFunc:gQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yQ=is({opType:ut.LOGICAL_AND,dtype:"bool"}),bQ={kernelName:lb,backendName:"webgpu",kernelFunc:yQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ=Gt({opType:Te.LOGICAL_NOT}),wQ={kernelName:ub,backendName:"webgpu",kernelFunc:vQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQ=is({opType:ut.LOGICAL_OR}),_Q={kernelName:cb,backendName:"webgpu",kernelFunc:SQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;let CQ=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${$R}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}};class TQ{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,D(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Re(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${Ie()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${$R}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{depthRadius:r,bias:o,alpha:a,beta:l}=n;let u;r>16?u=new CQ(i.shape):u=new TQ(i.shape,r);const c=[{type:"int32",data:[r]},{type:"float32",data:[o]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return t.runWebGPUProgram(u,[i],i.dtype,c)}const AQ={kernelName:hb,backendName:"webgpu",kernelFunc:EQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let IQ=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,y:r,dy:o}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=n,h=new IQ(i.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[c]}];return t.runWebGPUProgram(h,[i,r,o],i.dtype,d)}const MQ={kernelName:BE,backendName:"webgpu",kernelFunc:RQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NQ=is({opType:ut.MAX,cpuKernelImpl:uY}),PQ={kernelName:fb,backendName:"webgpu",kernelFunc:NQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=Fi(i.shape,r,o,1,a,l);return SR(i,c,"max",t)}const $Q={kernelName:pb,backendName:"webgpu",kernelFunc:kQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],h=co(i.shape,r,o,c,a,u,l),d=new Iw(h,"max"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[i],i.dtype,f)}const LQ={kernelName:mb,backendName:"webgpu",kernelFunc:DQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let OQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},FQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,h=[1,1,1],d=co(o.shape,a,l,h,u,c),f=new Iw(d,"max",!0);let p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const x=t.runWebGPUProgram(f,[o],"int32",p),m=new FQ(d);p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(m,[i,x],o.dtype,p);return t.disposeData(x.dataId),g}const BQ={kernelName:VE,backendName:"webgpu",kernelFunc:UQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r,output:o}=e,a=r;fR([r,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=n,d=Fi(a.shape,l,u,1,c,h),f=new ph(d,"max",!0);let p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const x=t.runWebGPUProgram(f,[a],"int32",p),m=new OQ(d);p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(m,[i,x],a.dtype,p);return t.disposeData(x.dataId),g}const VQ={kernelName:zE,backendName:"webgpu",kernelFunc:zQ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(s){const{inputs:e,backend:t,attrs:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=n,{x:l}=e;D(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const u=[1,1];D(Ns(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Fi(l.shape,i,r,u,o),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let d=new ph(c,"max",!1);const f=t.runWebGPUProgram(d,[l],l.dtype,h);d=new ph(c,"max",!0,!0,a);const p=t.runWebGPUProgram(d,[l],"int32",h);return[f,p]}const GQ={kernelName:gb,backendName:"webgpu",kernelFunc:WQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HQ(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n;return ul(i,r,o,"min",t)}const XQ={kernelName:yb,backendName:"webgpu",kernelFunc:HQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ=is({opType:ut.MIN,cpuKernelImpl:cY}),KQ={kernelName:bb,backendName:"webgpu",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jQ=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((i,r)=>i[0]+e[r]+i[1]),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((i,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((u,c)=>`uniforms.pad${c}[0]`).join(","),n=this.xShape.map((u,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),i=e===1?"start":"start[i]",r=e===1?"end":"end[i]",o=e===1?"outC":"outC[i]",a=Un(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${o} < ${i}) {
              ${o} = ${i} * 2 - ${o} - ${this.offset};
            } else if(${o} >= ${r}) {
              ${o} = (${r} - 1) * 2 - ${o} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YQ={kernelName:vb,backendName:"webgpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=t,a=i.map(c=>({type:"int32",data:[c[0],c[1]]})),l=new jQ(n.shape,i,r);return o.runWebGPUProgram(l,[n],n.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZQ=is({opType:ut.MOD}),JQ={kernelName:wb,backendName:"webgpu",kernelFunc:ZQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QQ=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ie("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eee{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${Ie("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(s){const{inputs:e,backend:t,attrs:n}=s,{logits:i}=e,{dim:r}=n,o=je({inputs:{x:i},backend:t,attrs:{shape:[ae(i.shape)/i.shape[r],i.shape[r]]}}),a=new eee(o.shape),l=t.runWebGPUProgram(a,[o],i.dtype),u=je({inputs:{x:l},backend:t,attrs:{shape:i.shape}});return t.disposeData(o.dataId),t.disposeData(l.dataId),u}const tee={kernelName:av,backendName:"webgpu",kernelFunc:DR};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nee(s){const{inputs:e,backend:t,attrs:n}=s,{logits:i}=e,{numSamples:r,seed:o,normalized:a}=n,l=a?i:DR({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new QQ(u,r),d=[{type:"float32",data:[o]},{type:"int32",data:[c]}],f=t.runWebGPUProgram(h,[l],"int32",d);return a||t.disposeData(l.dataId),f}const see={kernelName:Sb,backendName:"webgpu",kernelFunc:nee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(s){const{inputs:e,backend:t}=s,{x:n}=e;if(t.shouldExecuteOnCPU([n])){const r=t.tensorMap.get(n.dataId),[o,a]=dY(r.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,o)}const i=new Fu(n.shape,Te.NEG);return t.runWebGPUProgram(i,[n],n.dtype)}const ree={kernelName:Cb,backendName:"webgpu",kernelFunc:iee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oee(s){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,u=t.readSync(i.dataId),c=t.readSync(r.dataId),{selectedIndices:h}=Hv(u,c,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const aee={kernelName:Eb,backendName:"webgpu",kernelFunc:oee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lee(s){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=n,c=t.readSync(i.dataId),h=t.readSync(r.dataId),d=o,f=a,p=l,x=u,{selectedIndices:m,selectedScores:g}=Xv(c,h,d,f,p,x);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const uee={kernelName:Ab,backendName:"webgpu",kernelFunc:lee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cee=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${Ie("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hee(s){const{inputs:e,backend:t,attrs:n}=s,{indices:i}=e,{dtype:r,depth:o,onValue:a,offValue:l}=n,u=ae(i.shape),c=new cee(u,o),h=je({inputs:{x:i},backend:t,attrs:{shape:[u]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],f=t.runWebGPUProgram(c,[h],r,d);t.disposeData(h.dataId);const p=[...i.shape,o],x=je({inputs:{x:f},backend:t,attrs:{shape:p}});return t.disposeData(f.dataId),x}const dee={kernelName:Rb,backendName:"webgpu",kernelFunc:hee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="complex64"){const i=Vh({inputs:{input:n},backend:t}),r=Vf({inputs:{x:i},backend:t}),o=Xp({inputs:{input:n},backend:t}),a=Vf({inputs:{x:o},backend:t}),l=ll({inputs:{real:r,imag:a},backend:t});return t.disposeData(i.dataId),t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(a.dataId),l}else return Bs({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}const fee={kernelName:wv,backendName:"webgpu",kernelFunc:Vf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=Vh({inputs:{input:n},backend:t}),r=LR({inputs:{x:i},backend:t}),o=Xp({inputs:{input:n},backend:t}),a=Vf({inputs:{x:o},backend:t}),l=ll({inputs:{real:r,imag:a},backend:t});return t.disposeData(i.dataId),t.disposeData(r.dataId),t.disposeData(o.dataId),t.disposeData(a.dataId),l}else return Bs({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}const pee={kernelName:Ib,backendName:"webgpu",kernelFunc:LR};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mee(s){const{inputs:e,backend:t,attrs:n}=s,{axis:i}=n;if(e.length===1)return Vx({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,o=e[0].dtype;e.forEach(c=>{ai(r,c.shape,"All tensors passed to stack must have matching shapes"),D(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Vx({inputs:{input:c},backend:t,attrs:{dim:i}});return a.push(h),h}),u=TR({inputs:l,backend:t,attrs:{axis:i}});return a.forEach(c=>t.disposeData(c.dataId)),u}const gee={kernelName:Mb,backendName:"webgpu",kernelFunc:mee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(s,e=!1){const t=s.length,n=Un(t),i=s.map((h,d)=>`uniforms.pad${d}[0]`).join(","),r=s.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${t>1?`[${d}]`:""}`).join(","),o=t>1?`${n}(${i})`:`${i}`,a=t>1?`${n}(${r})`:`${r}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",u=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${o};
        let end = ${a};
        if (${l} || ${u}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}let xee=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,i)=>n[0]+e[i]+n[1]),this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((n,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${OR(this.xShape)}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yee=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{paddings:r,constantValue:o}=n;if(r.every(u=>en(u,[0,0])))return ii({inputs:{x:i},backend:t});if(ae(i.shape)===0){const u=r.map((c,h)=>c[0]+i.shape[h]+c[1]);return Bs({backend:t,attrs:{shape:u,value:o,dtype:i.dtype}})}const a=[{type:"float32",data:[o]}];r.map(u=>a.push({type:"int32",data:[u[0],u[1]]}));const l=new xee(i.shape,r);return t.runWebGPUProgram(l,[i],i.dtype,a)},bee={kernelName:Nb,backendName:"webgpu",kernelFunc:yee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vee=is({opType:ut.POW}),wee={kernelName:Pb,backendName:"webgpu",kernelFunc:vee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function See(s){const{inputs:e,backend:t}=s,{x:n,alpha:i}=e,r=new Uf(ut.PRELU,n.shape,i.shape);return t.runWebGPUProgram(r,[n,i],"float32")}const _ee={kernelName:kb,backendName:"webgpu",kernelFunc:See};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cee(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n;return ul(i,r,o,"prod",t)}const Tee={kernelName:$b,backendName:"webgpu",kernelFunc:Cee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eee=s=>{const{backend:e,attrs:t}=s,{start:n,stop:i,step:r,dtype:o}=t,a=mY(n,i,r,o);return e.makeTensorInfo([a.length],o,a)},Aee={kernelName:Db,backendName:"webgpu",kernelFunc:Eee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iee=is({opType:ut.DIV}),Ree={kernelName:k0,backendName:"webgpu",kernelFunc:Iee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee=Gt({opType:Te.RECIPROCAL}),Nee={kernelName:Ob,backendName:"webgpu",kernelFunc:Mee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pee=Gt({opType:Te.RELU}),kee={kernelName:Fb,backendName:"webgpu",kernelFunc:Pee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ee=Gt({opType:Te.RELU6}),Dee={kernelName:Vb,backendName:"webgpu",kernelFunc:$ee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lee=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oee(s){const{inputs:e,backend:t,attrs:n}=s,{images:i}=e,{alignCorners:r,size:o,halfPixelCenters:a}=n,[l,u]=o,c=r&&l>1?1:0,h=r&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[a?.5:0]}],p=new Lee(i.shape,l,u);return t.runWebGPUProgram(p,[i],"float32",f)}const Fee={kernelName:zb,backendName:"webgpu",kernelFunc:Oee};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uee=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bee(s){const{inputs:e,backend:t,attrs:n}=s,{images:i,dy:r}=e,{alignCorners:o}=n,[,a,l]=i.shape,[,u,c]=r.shape,h=[o&&u>1?a-1:a,o&&c>1?l-1:l],d=[o&&u>1?u-1:u,o&&c>1?c-1:c],f=h[0]/d[0],p=h[1]/d[1],x=1/f,m=1/p,g=Math.ceil(x)*2+2,y=Math.ceil(m)*2+2,v=new Uee(i.shape,o),w=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[f]},{type:"float32",data:[p]},{type:"float32",data:[x]},{type:"float32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[y]}];return t.runWebGPUProgram(v,[r],r.dtype,w)}const zee={kernelName:KE,backendName:"webgpu",kernelFunc:Bee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vee=class{constructor(e,t,n,i){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=i,this.shaderKey=`resizeNearest_${i}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wee(s){const{inputs:e,backend:t,attrs:n}=s,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,u]=a,c=r&&l>1?1:0,h=r&&u>1?1:0,f=[{type:"float32",data:[c,h]},{type:"float32",data:[r?.5:0]}],p=new Vee(i.shape,l,u,o);return t.runWebGPUProgram(p,[i],i.dtype,f)}const Gee={kernelName:Bb,backendName:"webgpu",kernelFunc:Wee};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hee=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xee(s){const{inputs:e,backend:t,attrs:n}=s,{images:i,dy:r}=e,{alignCorners:o}=n,[,a,l]=i.shape,[,u,c]=r.shape,h=[o&&u>1?a-1:a,o&&c>1?l-1:l],d=[o&&u>1?u-1:u,o&&c>1?c-1:c],f=h[0]/d[0],p=h[1]/d[1],x=1/f,m=1/p,g=Math.ceil(x)*2+2,y=Math.ceil(m)*2+2,v=new Hee(i.shape,o),w=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[x]},{type:"float32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[y]}];return t.runWebGPUProgram(v,[r],r.dtype,w)}const qee={kernelName:qE,backendName:"webgpu",kernelFunc:Xee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kee=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jee(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{dims:r}=n,o=i.shape.length;if(o===0)return ii({inputs:{x:i},backend:t});const a=i.shape,l=[1,1,1,1];a.forEach((m,g)=>{const y=g+4-o;l[y]=m});const u=wn(r,i.shape),c=[0,0,0,0];u.forEach(m=>{const g=m+4-o;c[g]=1});const h=[{type:"int32",data:c}],d=je({inputs:{x:i},backend:t,attrs:{shape:l}}),f=new Kee(l),p=t.runWebGPUProgram(f,[d],d.dtype,h);t.disposeData(d.dataId);const x=je({inputs:{x:p},backend:t,attrs:{shape:a}});return t.disposeData(p.dataId),x}const Yee={kernelName:Wb,backendName:"webgpu",kernelFunc:jee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zee=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jee={kernelName:_v,backendName:"webgpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=e,a=t,l=new Zee(n.shape,r),[u,c]=ow(o,n.shape[1],n.shape[2]),h=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(i)]},{type:"float32",data:[Math.cos(i)]}];return typeof r=="number"?h.push({type:"float32",data:[Number.parseFloat(r.toFixed(2))]}):h.push({type:"float32",data:r}),a.runWebGPUProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qee=Gt({opType:Te.ROUND}),ete={kernelName:Gb,backendName:"webgpu",kernelFunc:Qee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tte=Gt({opType:Te.RSQRT,cpuKernelImpl:gY}),nte={kernelName:Hb,backendName:"webgpu",kernelFunc:tte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nc=class{constructor(e,t,n,i,r,o,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=Ue(e),this.dispatch=Re(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${i}_${this.sliceDimGreaterThanOne}_${a}_${l}_${r.length}`;const u=Un(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=i,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let i="",r="";this.dispatchLayout.x.length===1?(i="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(i="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(u,c)=>`coords[${c}]`).join(", ")})`;return`
    ${r}
      ${Ie("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${Sa(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${i});

          ${this.sumDupeIndices?Qo("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ste(s){const{inputs:e,backend:t,attrs:n}=s,{indices:i,updates:r}=e,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=il(r,i,o),d=[h/u,u];if(h===0)return t.makeTensorInfo(o,i.dtype);const f=je({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),p=je({inputs:{x:r},backend:t,attrs:{shape:[l,u]}}),x=p.dtype,m=Bs({backend:t,attrs:{shape:d,value:0,dtype:x}}),g=ae(p.shape),y=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[g]}],v=new Nc(p.shape,a,f.shape.length,p.shape.length,c,d,x),w=t.runWebGPUProgram(v,[p,f],x,y,m),_=je({inputs:{x:w},backend:t,attrs:{shape:o}});return t.disposeData(f.dataId),t.disposeData(p.dataId),t.disposeData(w.dataId),_}const ite={kernelName:Xb,backendName:"webgpu",kernelFunc:ste};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rte=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${Ie("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ote(s){const{inputs:e,backend:t,attrs:n}=s,{sortedSequence:i,values:r}=e,{side:o}=n,a=new rte([r.shape[0],r.shape[1]],o),l=[{type:"int32",data:[i.shape[1]]}];return t.runWebGPUProgram(a,[i,r],"int32",l)}const ate={kernelName:Kb,backendName:"webgpu",kernelFunc:ote};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lte=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],o=[];for(let a=0;a<this.outputShape.length;a++)o.push(`${i[a]}`),a<this.cRank&&r.push(`${i[a]}`);e=r.join(),t=o.join()}return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ute(s){const{inputs:e,backend:t}=s,{condition:n,t:i,e:r}=e,o=new lte(n.shape.length,i.shape,i.shape.length);return t.runWebGPUProgram(o,[n,i,r],zs(i.dtype,r.dtype))}const cte={kernelName:jb,backendName:"webgpu",kernelFunc:ute};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte=Gt({opType:Te.SELU}),dte={kernelName:Yb,backendName:"webgpu",kernelFunc:hte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fte=Gt({opType:Te.SIGMOID}),pte={kernelName:tv,backendName:"webgpu",kernelFunc:fte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mte=Gt({opType:Te.SIGN}),gte={kernelName:ev,backendName:"webgpu",kernelFunc:mte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xte=Gt({opType:Te.SIN}),yte={kernelName:Jb,backendName:"webgpu",kernelFunc:xte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bte=Gt({opType:Te.SINH}),vte={kernelName:Qb,backendName:"webgpu",kernelFunc:bte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wte=Gt({opType:Te.SOFTPLUS}),Ste={kernelName:nv,backendName:"webgpu",kernelFunc:wte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _te{constructor(e,t,n,i,r,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[r[l]];this.outputShape=a,this.newDim=r,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Un(i.length)}, paddedXShapeStrides : ${Un(o)}, `,n.map((l,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){const e=Un(this.outputShape.length),t=yR(this.newDim);return`
      ${pf(this.paddedXShape,"PaddedX")}
      ${Ie("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${OR(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cte=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockShape:r,paddings:o}=n;D(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=r.reduce((y,v)=>y*v),l=[[0,0]];l.push(...o);for(let y=1+r.length;y<i.shape.length;++y)l.push([0,0]);const u=l.map((y,v)=>y[0]+i.shape[v]+y[1]),c=Uh(u,r,a,!1),h=Bh(c.length,r.length,!1),d=zh(u,r,a,!1),f=kn(u),p=new _te(i.shape,u,l,c,h,f.length),x=[{type:"int32",data:c},{type:"int32",data:f}];l.map(y=>x.push({type:"int32",data:[y[0],y[1]]}));const m=t.runWebGPUProgram(p,[i],i.dtype,x),g=je({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeData(m.dataId),g},Tte={kernelName:rv,backendName:"webgpu",kernelFunc:Cte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ete{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=Ue([t]),this.dispatch=Re(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Qo("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Ate{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Ue(t),this.dispatch=Re(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Qo("&result[segmentId]","1","int32")}
      }
    }
  `}}class Ite{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Ue(e),this.dispatch=Re(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(s,e,t,n=!1,i){const o=ae(s.shape)/s.shape[0],a=s.dtype,l=ae(e.shape),u=i.readSync(t.dataId),h=l>0?u[l-1]+1:0;let d;const f=s.shape.slice();f[0]=h;const p=l*o,x=Bs({backend:i,attrs:{shape:f,value:0,dtype:a}});d=new Ete(f,p,a);let m=[{type:"int32",data:[o]},{type:"int32",data:[p]}];const g=i.runWebGPUProgram(d,[s,e,t],a,m,x);if(n)return g;const y=Bs({backend:i,attrs:{shape:[h],value:0,dtype:"int32"}});d=new Ate(h,t.shape);const v=i.runWebGPUProgram(d,[t],"int32",null,y),w=Bs({backend:i,attrs:{shape:f,value:0,dtype:a}});d=new Ite(f,a),m=[{type:"int32",data:[o]}];const _=i.runWebGPUProgram(d,[g,v],a,m,w);return i.disposeData(g.dataId),i.disposeData(v.dataId),_}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rte(s){const{inputs:e,backend:t}=s,{data:n,indices:i,segmentIds:r}=e;return FR(n,i,r,!1,t)}const Mte={kernelName:lv,backendName:"webgpu",kernelFunc:Rte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nte(s){const{inputs:e,backend:t}=s,{data:n,indices:i,segmentIds:r}=e;return FR(n,i,r,!0,t)}const Pte={kernelName:uv,backendName:"webgpu",kernelFunc:Nte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kte=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=$te(this.rank,"uniforms.");return`
      ${Ie("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function $te(s,e=""){if(s>=5)throw Error(`Tile for rank ${s} is not yet supported`);if(s===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s;i++)n.push(`(${t[i]} % ${e}aShape[${i}])`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{reps:r}=n;if(t.shouldExecuteOnCPU([i])||i.dtype==="string"||i.shape.length>=5){const l=t.readSync(i.dataId),u=i.dtype==="string"?l.map(d=>Qr(d)):l,c=tn(i.shape,i.dtype,u),h=_Y(c,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new kte(i.shape,r);return t.runWebGPUProgram(o,[i],i.dtype)}const Dte={kernelName:Ip,backendName:"webgpu",kernelFunc:Rw};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lte(s){const{inputs:e,backend:t,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=e,{outputShape:a}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=il(r,i,a),f=!1;if(r.dtype==="string"){const M=t.bufferSync(i),C=t.bufferSync(r),R=Qr(t.readSync(o.dataId)[0]),$=xY(M,C,a,d,c,u,l,h,R,f);return t.makeTensorInfo(a,$.dtype,$.values)}const p=[d/c,c],x=je({inputs:{x:i},backend:t,attrs:{shape:[u,l]}}),m=r.shape.length?je({inputs:{x:r},backend:t,attrs:{shape:[u,c]}}):ii({inputs:{x:r},backend:t}),g=m.dtype,y=t.makeTensorInfo([],g,Jr(1,g)),v=je({inputs:{x:o},backend:t,attrs:{shape:Array(p.length).fill(1)}}),w=Rw({inputs:{x:v},backend:t,attrs:{reps:p}}),_=ae([u,c]),T=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[_]}];switch(u){case 0:break;case 1:{const M=new Nc([u,c],l,x.shape.length,m.shape.length,h,p,g,f);t.runWebGPUProgram(M,[m,x],g,T,w)}break;default:{const M=new Nc([u,c],l,x.shape.length,y.shape.length,h,p,g,f);t.runWebGPUProgram(M,[y,x],g,T,w)}{const M=new Nc([u,c],l,x.shape.length,m.shape.length,h,p,g);t.runWebGPUProgram(M,[m,x],g,T,w)}}const A=je({inputs:{x:w},backend:t,attrs:{shape:a}});return t.disposeData(x.dataId),t.disposeData(m.dataId),t.disposeData(v.dataId),t.disposeData(y.dataId),t.disposeData(w.dataId),A}const Ote={kernelName:cv,backendName:"webgpu",kernelFunc:Lte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fte(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{numOrSizeSplits:r,axis:o}=n,a=wn(o,i.shape)[0],l=Sw(i,r,a),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Uu({inputs:{x:i},backend:t,attrs:{begin:c,size:f}});return c[a]+=d,p})}const Ute={kernelName:ov,backendName:"webgpu",kernelFunc:Fte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bte=Gt({opType:Te.SQRT}),zte={kernelName:sv,backendName:"webgpu",kernelFunc:Bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte={kernelName:ZE,backendName:"webgpu",kernelFunc:({inputs:s,backend:e})=>{const{x:t}=s,n=e,i=new Fu(t.shape,Te.SQUARE);return n.runWebGPUProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wte=is({opType:ut.SQUARED_DIFFERENCE}),Gte={kernelName:hv,backendName:"webgpu",kernelFunc:Wte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hte({inputs:s,attrs:e,backend:t}){const{x:n}=s,i=new Fu(n.shape,Te.STEP,"stepAlpha : f32,"),r=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(i,[n],n.dtype,r)}const Xte={kernelName:Sv,backendName:"webgpu",kernelFunc:Hte};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qte=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Un(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let i=0;t=this.outputShape.map((r,o)=>(i++,this.outputShape.length===1?`coords * uniforms.strides[${o}] + uniforms.begin[${o}]`:`coords[${i-1}] * uniforms.strides[${o}] + uniforms.begin[${o}]`)).join(",")}return`
       ${Ie("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kte(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{begin:r,end:o,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:x,sliceDim0:m,isSimpleSlice:g,begin:y,end:v,strides:w}=sw(i.shape,r,o,a,l,u,c,h,d);let _;if(x)_=je({inputs:{x:i},backend:t,attrs:{shape:p}});else if(m||g){D(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const T=Qv(y,v,w),A=Uu({inputs:{x:i},backend:t,attrs:{begin:y,size:T}});_=je({inputs:{x:A},backend:t,attrs:{shape:p}}),t.disposeData(A.dataId)}else if(t.shouldExecuteOnCPU([i])){const A=t.readSync(i.dataId),M=tn(i.shape,i.dtype,A),C=vY(f,M,w,y);_=t.makeTensorInfo(p,i.dtype,C.values)}else{const A=new qte(f),M=[{type:"int32",data:y},{type:"int32",data:w}],C=t.runWebGPUProgram(A,[i],i.dtype,M);_=je({inputs:{x:C},backend:t,attrs:{shape:p}}),t.disposeData(C.dataId)}return _}const jte={kernelName:dv,backendName:"webgpu",kernelFunc:Kte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yte(s){const{inputs:e,backend:t,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),f=t.readSync(h.dataId),[p,x]=wY(d,f,i,r,o,a,l,u);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",x)]}const Zte={kernelName:fv,backendName:"webgpu",kernelFunc:Yte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jte=is({opType:ut.SUB,cpuKernelImpl:SY,supportsComplex:!0}),Qte={kernelName:pv,backendName:"webgpu",kernelFunc:Jte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ene=Gt({opType:Te.TAN}),tne={kernelName:mv,backendName:"webgpu",kernelFunc:ene};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nne=Gt({opType:Te.TANH}),sne={kernelName:gv,backendName:"webgpu",kernelFunc:nne};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ine(s){const{inputs:e,backend:t,attrs:n}=s,{tensor:i,indices:r,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=il(o,r,i.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(i.shape,r.dtype);const f=[],p=je({inputs:{x:r},backend:t,attrs:{shape:[l,a]}});f.push(p);const x=je({inputs:{x:o},backend:t,attrs:{shape:[l,u]}});f.push(x);const m=je({inputs:{x:i},backend:t,attrs:{shape:d}});f.push(m);const g=Rw({inputs:{x:m},backend:t,attrs:{reps:Array(d.length).fill(1)}}),y=new Nc([l,u],a,p.shape.length,x.shape.length,c,d,i.dtype,!1),v=ae([l,u]),w=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[v]}],_=t.runWebGPUProgram(y,[x,p],m.dtype,w,g);f.push(_);const T=je({inputs:{x:_},backend:t,attrs:{shape:i.shape}});return f.forEach(A=>t.disposeData(A.dataId)),T}const rne={kernelName:qb,backendName:"webgpu",kernelFunc:ine};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let one=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},ane=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ie("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(s,e){e!==null&&s.disposeData(e.dataId)}function X_(s){let e=1;for(;e<s;)e*=2;return e}function lne(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{k:r,sorted:o}=n,a=i.shape,l=a[a.length-1];if(t.shouldExecuteOnCPU([i])){const _=t.readSync(i.dataId),[T,A]=CY(_,a,i.dtype,r,o);return[t.makeTensorInfo(T.shape,T.dtype,T.values),t.makeTensorInfo(A.shape,A.dtype,A.values)]}if(r===0)return a[a.length-1]=0,[t.makeTensorInfo(a,i.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(l===1)return[i,Bs({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const c=ae(a)/l,h=je({inputs:{x:i},attrs:{shape:[c,l]},backend:t}),d=X_(r),f=X_(l);let p=null;const x=()=>p===null?[h,h]:[h,p],m=(_,T,A)=>{const M=x(),C=new one(A),$=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[_]},{type:"int32",data:[T]}],W=p;p=t.runWebGPUProgram(C,M,"int32",$),Gl(t,W)};for(let _=1;_<d;_*=2){const T=_*2;for(let A=_;A>=1;A/=2)m(T,A,[c,f])}for(let _=f;_>d;_/=2){const T=x(),A=new ane([c,_/2]),C=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"int32",data:[d]}],R=p;p=t.runWebGPUProgram(A,T,"int32",C),Gl(t,R);const $=d/2,W=$*2;for(let q=$;q>=1;q/=2)m(W,q,p.shape)}let g=p;p=Uu({inputs:{x:p},backend:t,attrs:{begin:0,size:[c,r]}}),Gl(t,g);let y=kR({inputs:{x:h,indices:p},backend:t,attrs:{axis:1,batchDims:1}});Gl(t,h);const v=a.slice(0,-1);v.push(r),g=p,p=je({inputs:{x:p},attrs:{shape:v},backend:t}),Gl(t,g);const w=y;return y=je({inputs:{x:y},attrs:{shape:v},backend:t}),Gl(t,w),[y,p]}const une={kernelName:xv,backendName:"webgpu",kernelFunc:lne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cne=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ie("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hne(s){const{inputs:e,backend:t,attrs:n}=s,{image:i,transforms:r}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:u}=n,[c,h,d,f]=i.shape,[p,x]=u??[h,d],m=[c,p,x,f],g=new cne(m),y=o==="nearest"?1:2;let v;switch(a){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}const w=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[l]}];return t.runWebGPUProgram(g,[i,r],"float32",w)}const dne={kernelName:yv,backendName:"webgpu",kernelFunc:hne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fne(s){const{inputs:e,backend:t,attrs:n}=s,{value:i}=e;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],u=new Array(a-1);let c=0;for(let x=0;x<a;x++)x!==r&&(u[c++]=o.shape[x]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let x=0;x<p.length;x++){d[r]=x;const m=Uu({inputs:{x:o},backend:t,attrs:{begin:d,size:f}}),g=je({inputs:{x:m},backend:t,attrs:{shape:u}});p[x]=g,h.push(m)}return h.forEach(x=>t.disposeData(x.dataId)),p}const pne={kernelName:bv,backendName:"webgpu",kernelFunc:fne};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mne{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Ue(e),this.dispatch=Re(this.dispatchLayout,e,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${Ie("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Qo("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gne(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,segmentIds:r}=e,{numSegments:o}=n,a=i.shape.length,l=[];let u=0;const c=ms([u],a);let h=i;c!=null&&(h=Tr({inputs:{x:i},backend:t,attrs:{perm:c}}),l.push(h),u=gs(1,a)[0]);const d=_w(h.shape,u,o),f=ae([h.shape[u]]),p=je({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});l.push(p);const x=i.dtype,m=[p.shape[0],o],g=Bs({backend:t,attrs:{shape:m,value:0,dtype:x}}),y=new mne(p.shape,m,x),v=[{type:"int32",data:[o]},{type:"int32",data:[ae(p.shape)]}],w=t.runWebGPUProgram(y,[p,r],x,v,g),_=je({inputs:{x:w},backend:t,attrs:{shape:d}});l.push(w);let T=_;if(c!=null){l.push(_);const A=Fh(c);T=Tr({inputs:{x:T},backend:t,attrs:{perm:A}})}return l.forEach(A=>t.disposeData(A.dataId)),T}const xne={kernelName:vv,backendName:"webgpu",kernelFunc:gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yne=[Uj,AY,RY,NY,kY,LY,WY,HY,qY,jY,ZY,QY,t9,s9,r9,c9,d9,g9,y9,v9,T9,R9,P9,L9,F9,V9,zj,H9,j9,sZ,uZ,fZ,gZ,yZ,vZ,SZ,CZ,AZ,RZ,NZ,kZ,LZ,WZ,HZ,UZ,KZ,ZZ,tJ,sJ,oJ,cJ,dJ,pJ,gJ,yJ,vJ,wJ,_J,TJ,Lj,AJ,kJ,RJ,NJ,LJ,FJ,BJ,WJ,XJ,KJ,YJ,Bj,JJ,q9,eQ,nQ,iQ,oQ,lQ,cQ,fQ,xQ,mQ,bQ,wQ,_Q,AQ,MQ,a9,PQ,$Q,VQ,LQ,BQ,GQ,l9,XQ,KQ,YQ,JQ,see,aJ,ree,aee,uee,k9,dee,pee,gee,bee,wee,_ee,Tee,Aee,$9,Ree,Nee,kee,Dee,Oj,Fee,zee,Gee,qee,Yee,Jee,ete,nte,ite,ate,cte,dte,pte,gte,yte,vte,_9,Xte,jte,Zte,tee,Ste,Tte,Mte,Pte,Ote,Ute,zte,Vte,Gte,Qte,lJ,tne,sne,rne,Dte,une,dne,UY,pne,xne,fee];for(const s of yne)nA(s);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var UR=function(s,e){return(UR=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])})(s,e)};function BR(s,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=s}UR(s,e),s.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var cn=function(){return(cn=Object.assign||function(s){for(var e,t=1,n=arguments.length;t<n;t++)for(var i in e=arguments[t])Object.prototype.hasOwnProperty.call(e,i)&&(s[i]=e[i]);return s}).apply(this,arguments)};function Vt(s,e,t,n){return new(t||(t=Promise))(function(i,r){function o(u){try{l(n.next(u))}catch(c){r(c)}}function a(u){try{l(n.throw(u))}catch(c){r(c)}}function l(u){var c;u.done?i(u.value):(c=u.value,c instanceof t?c:new t(function(h){h(c)})).then(o,a)}l((n=n.apply(s,[])).next())})}function Wt(s,e){var t,n,i,r,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(r[Symbol.iterator]=function(){return this}),r;function a(l){return function(u){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,n&&(i=2&c[0]?n.return:c[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,c[1])).done)return i;switch(n=0,i&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,n=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(i=o.trys,!((i=i.length>0&&i[i.length-1])||c[0]!==6&&c[0]!==2)){o=0;continue}if(c[0]===3&&(!i||c[1]>i[0]&&c[1]<i[3])){o.label=c[1];break}if(c[0]===6&&o.label<i[1]){o.label=i[1],i=c;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(c);break}i[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(s,o)}catch(h){c=[6,h],n=0}finally{t=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([l,u])}}}function Na(s,e,t){if(t||arguments.length===2)for(var n,i=0,r=e.length;i<r;i++)!n&&i in e||(n||(n=Array.prototype.slice.call(e,0,i)),n[i]=e[i]);return s.concat(n||Array.prototype.slice.call(e))}var Er=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],gh=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function Wf(s){return s instanceof SVGAnimatedLength?s.baseVal.value:s}function zR(s){return Vt(this,void 0,void 0,function(){var e,t;return Wt(this,function(n){switch(n.label){case 0:return e=document.createElement("canvas"),s instanceof Nn?[4,Yv(s,e)]:[3,2];case 1:return n.sent(),[3,3];case 2:e.width=Wf(s.width),e.height=Wf(s.height),t=e.getContext("2d"),s instanceof ImageData?t.putImageData(s,0,0):t.drawImage(s,0,0),n.label=3;case 3:return[2,e]}})})}function VR(s){return Vt(this,void 0,void 0,function(){var e,t,n,i,r,o;return Wt(this,function(a){switch(a.label){case 0:return s instanceof Nn?(e=s.shape.slice(0,2),t=e[0],n=e[1],i=ImageData.bind,[4,Yv(s)]):[3,2];case 1:return[2,new(i.apply(ImageData,[void 0,a.sent(),n,t]))];case 2:return r=document.createElement("canvas"),o=r.getContext("2d"),r.width=Wf(s.width),r.height=Wf(s.height),o.drawImage(s,0,0),[2,o.getImageData(0,0,r.width,r.height)]}})})}function bne(s){return Vt(this,void 0,void 0,function(){var e,t;return Wt(this,function(n){switch(n.label){case 0:return s instanceof SVGImageElement||s instanceof OffscreenCanvas?[4,zR(s)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=s,n.label=3;case 3:return e=t,[2,$I(e,4)]}})})}function WR(s){if(s<0||s>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(s));if(!Number.isInteger(s))throw new Error("Mask value must be an integer but got ".concat(s))}var pc={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},vne=function(){function s(e){this.mask=e}return s.prototype.toCanvasImageSource=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,this.mask]})})},s.prototype.toImageData=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,VR(this.mask)]})})},s.prototype.toTensor=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,bne(this.mask)]})})},s.prototype.getUnderlyingType=function(){return"canvasimagesource"},s}();function wne(s){return WR(s),"person"}var Sne=function(){function s(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new u8.Pose({locateFile:function(i,r){if(e.solutionPath){var o=e.solutionPath.replace(/\/+$/,"");return"".concat(o,"/").concat(i)}return"".concat(r,"/").concat(i)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(i){if(n.height=i.image.height,n.width=i.image.width,i.poseLandmarks==null)n.poses=[];else{var r=n.translateOutput(i.poseLandmarks,i.poseWorldLandmarks);i.segmentationMask&&(r.segmentation={maskValueToLabel:wne,mask:new vne(i.segmentationMask)}),n.poses=[r]}})}return s.prototype.translateOutput=function(e,t){var n=this,i={keypoints:e.map(function(r,o){return{x:r.x*n.width,y:r.y*n.height,z:r.z,score:r.visibility,name:gh[o]}})};return t!=null&&(i.keypoints3D=t.map(function(r,o){return{x:r.x,y:r.y,z:r.z,score:r.visibility,name:gh[o]}})),i},s.prototype.estimatePoses=function(e,t,n){return Vt(this,void 0,void 0,function(){var i,r;return Wt(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Nn?(r=ImageData.bind,[4,Yv(e)]):[3,2];case 1:return i=new(r.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:i=e,o.label=3;case 3:return e=i,[4,this.poseSolution.send({image:e},n)];case 4:return o.sent(),[2,this.poses]}})})},s.prototype.dispose=function(){this.poseSolution.close()},s.prototype.reset=function(){this.poseSolution.reset()},s.prototype.initialize=function(){return this.poseSolution.initialize()},s}();function _ne(s){return Vt(this,void 0,void 0,function(){var e,t;return Wt(this,function(n){switch(n.label){case 0:return e=function(i){if(i==null)return cn({},pc);var r=cn({},i);return r.runtime="mediapipe",r.enableSegmentation==null&&(r.enableSegmentation=pc.enableSegmentation),r.enableSmoothing==null&&(r.enableSmoothing=pc.enableSmoothing),r.smoothSegmentation==null&&(r.smoothSegmentation=pc.smoothSegmentation),r.modelType==null&&(r.modelType=pc.modelType),r}(s),[4,(t=new Sne(e)).initialize()];case 1:return n.sent(),[2,t]}})})}function wu(s){return s instanceof Nn?{height:s.shape[0],width:s.shape[1]}:{height:s.height,width:s.width}}function GR(s){return s-2*Math.PI*Math.floor((s+Math.PI)/(2*Math.PI))}function Mw(s){return s instanceof Nn?s:$I(s)}function HR(s,e,t){return Wx(t,"inputResolution"),[1/t.width*s[0][0]*e.width,1/t.height*s[0][1]*e.width,s[0][3]*e.width,1/t.width*s[1][0]*e.height,1/t.height*s[1][1]*e.height,s[1][3]*e.height,0,0]}function Wx(s,e){D(s.width!==0,function(){return"".concat(e," width cannot be 0.")}),D(s.height!==0,function(){return"".concat(e," height cannot be 0.")})}function eg(s,e,t){var n=t.rotationVectorStartKeypointIndex,i=t.rotationVectorEndKeypointIndex,r=s.locationData,o=r.relativeKeypoints[n].x*e.width,a=r.relativeKeypoints[n].y*e.height,l=r.relativeKeypoints[i].x*e.width,u=r.relativeKeypoints[i].y*e.height,c=2*Math.sqrt((l-o)*(l-o)+(u-a)*(u-a)),h=function(d,f,p){var x,m=d.locationData,g=p.rotationVectorStartKeypointIndex,y=p.rotationVectorEndKeypointIndex;x=p.rotationVectorTargetAngle?p.rotationVectorTargetAngle:Math.PI*p.rotationVectorTargetAngleDegree/180;var v=m.relativeKeypoints[g].x*f.width,w=m.relativeKeypoints[g].y*f.height,_=m.relativeKeypoints[y].x*f.width,T=m.relativeKeypoints[y].y*f.height;return GR(x-Math.atan2(-(T-w),_-v))}(s,e,t);return{xCenter:o/e.width,yCenter:a/e.height,width:c/e.width,height:c/e.height,rotation:h}}function XR(s){if(s.length!==16)throw new Error("Array length must be 16 but got ".concat(s.length));return[[s[0],s[1],s[2],s[3]],[s[4],s[5],s[6],s[7]],[s[8],s[9],s[10],s[11]],[s[12],s[13],s[14],s[15]]]}function tg(s,e,t,n,i,r,o){return s[e][i]*(s[t][r]*s[n][o]-s[t][o]*s[n][r])}function Ss(s,e,t){var n=(e+1)%4,i=(e+2)%4,r=(e+3)%4,o=(t+1)%4,a=(t+2)%4,l=(t+3)%4;return tg(s,n,i,r,o,a,l)+tg(s,i,r,n,o,a,l)+tg(s,r,n,i,o,a,l)}function q_(s,e,t){t===void 0&&(t={ignoreRotation:!1});for(var n=[],i=0,r=s;i<r.length;i++){var o=r[i],a=o.x-.5,l=o.y-.5,u=t.ignoreRotation?0:e.rotation,c=Math.cos(u)*a-Math.sin(u)*l,h=Math.sin(u)*a+Math.cos(u)*l;c=c*e.width+e.xCenter,h=h*e.height+e.yCenter;var d=o.z*e.width,f=cn({},o);f.x=c,f.y=h,f.z=d,n.push(f)}return n}function qR(s,e){var t=function(n,i,r,o){var a=i-n,l=o-r,u=l/a;return{scale:u,offset:r-n*u}}(0,255,e[0],e[1]);return ht(function(){return Je(we(s,t.scale),t.offset)})}function Gx(s,e,t){var n,i,r,o,a,l,u,c,h,d,f,p,x,m,g=e.outputTensorSize,y=e.keepAspectRatio,v=e.borderMode,w=e.outputTensorFloatRange,_=wu(s),T=function(C,R){return R?{xCenter:R.xCenter*C.width,yCenter:R.yCenter*C.height,width:R.width*C.width,height:R.height*C.height,rotation:R.rotation}:{xCenter:.5*C.width,yCenter:.5*C.height,width:C.width,height:C.height,rotation:0}}(_,t),A=function(C,R,$){if($===void 0&&($=!1),!$)return{top:0,left:0,right:0,bottom:0};var W=R.height,q=R.width;Wx(R,"targetSize"),Wx(C,"roi");var O,H,Z=W/q,ee=C.height/C.width,ce=0,ne=0;return Z>ee?(O=C.width,H=C.width*Z,ne=(1-ee/Z)/2):(O=C.height/Z,H=C.height,ce=(1-Z/ee)/2),C.width=O,C.height=H,{top:ne,left:ce,right:ce,bottom:ne}}(T,g,y),M=(n=T,i=_.width,r=_.height,o=!1,a=n.width,l=n.height,u=o?-1:1,c=Math.cos(n.rotation),h=Math.sin(n.rotation),d=n.xCenter,f=n.yCenter,p=1/i,x=1/r,(m=new Array(16))[0]=a*c*u*p,m[1]=-l*h*p,m[2]=0,m[3]=(-.5*a*c*u+.5*l*h+d)*p,m[4]=a*h*u*x,m[5]=l*c*x,m[6]=0,m[7]=(-.5*l*c-.5*a*h*u+f)*x,m[8]=0,m[9]=0,m[10]=a*p,m[11]=0,m[12]=0,m[13]=0,m[14]=0,m[15]=1,XR(m));return{imageTensor:ht(function(){var C=Mw(s),R=$i(HR(M,_,g),[1,8]),$=v==="zero"?"constant":"nearest",W=La.transform(pi(hn(C,"float32")),R,"bilinear",$,0,[g.height,g.width]);return w!=null?qR(W,w):W}),padding:A,transformationMatrix:M}}function K_(s,e,t,n){return n===1?.5*(s+e):s+(e-s)*t/(n-1)}function Cne(s){return ht(function(){var e=function(i){return ht(function(){return[Nt(i,[0,0,0],[1,-1,1]),Nt(i,[0,0,1],[1,-1,-1])]})}(s),t=e[0],n=e[1];return{boxes:nn(n),logits:nn(t)}})}function KR(s){return s!=null&&s.currentTime!=null}function j_(s){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,n=Number.MIN_SAFE_INTEGER,i=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,o=0;o<s.length;++o){var a=s[o];t=Math.min(t,a.x),n=Math.max(n,a.x),i=Math.min(i,a.y),r=Math.max(r,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:i,xMax:n,yMax:r,width:n-t,height:r-i},e}function Tne(s,e,t,n){return Vt(this,void 0,void 0,function(){var i,r,o,a,l;return Wt(this,function(u){switch(u.label){case 0:return s.sort(function(c,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,c.score)}),i=$i(s.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),r=ps(s.map(function(c){return c.score[0]})),[4,La.nonMaxSuppressionAsync(i,r,e,t)];case 1:return[4,(o=u.sent()).array()];case 2:return a=u.sent(),l=s.filter(function(c,h){return a.indexOf(h)>-1}),Jt([i,r,o]),[2,l]}})})}function jR(s,e){return s.map(function(t){var n=cn(cn({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(n.z=t.z*e.width),n})}function Ene(s,e,t){return Vt(this,void 0,void 0,function(){var n,i,r,o,a,l,u,c,h,d,f,p,x,m,g,y,v,w,_,T,A,M,C,R;return Wt(this,function($){switch($.label){case 0:if(n=nn(e,[0]),i=n.shape,r=i[0],o=i[1],a=i[2],s.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(s.length,", heatmap length: ").concat(a));return l=[],[4,n.buffer()];case 1:for(u=$.sent(),c=0;c<s.length;c++)if(h=s[c],d=cn({},h),l.push(d),f=Math.trunc(d.x*o),p=Math.trunc(d.y*r),!(f<0||f>=o||p<0||f>=r)){for(x=Math.trunc((t.kernelSize-1)/2),m=Math.max(0,f-x),g=Math.min(o,f+x+1),y=Math.max(0,p-x),v=Math.min(r,p+x+1),w=0,_=0,T=0,A=0,M=y;M<v;++M)for(C=m;C<g;++C)R=u.get(M,C,c),w+=R,A=Math.max(A,R),_+=C*R,T+=M*R;A>=t.minConfidenceToRefine&&w>0&&(d.x=_/o/w,d.y=T/r/w)}return n.dispose(),[2,l]}})})}function Y_(s,e){var t=e.left,n=e.top,i=e.left+e.right,r=e.top+e.bottom;return s.map(function(o){return cn(cn({},o),{x:(o.x-t)/(1-i),y:(o.y-n)/(1-r),z:o.z/(1-i)})})}function Ane(s,e,t){return sh()==="webgl"?function(n,i,r){var o=r.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:n.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(o,`);

      setOutput(outputValue);
    }
`)},l=xu();return ht(function(){var u=l.compileAndRun(a,[n,i]);return Ys().makeTensorFromDataId(u.dataId,u.shape,u.dtype)})}(s,e,t):ht(function(){var n=St(e,.5),i=ki(n),r=St(1,uh(1,we(i,Je(5.68842,we(i,Je(-.748699,we(i,Je(-57.8051,we(i,Je(291.309,we(i,-624.717)))))))))));return Je(e,we(St(s,e),we(r,t.combineWithPreviousRatio)))})}function Ine(s,e,t){return Vt(this,void 0,void 0,function(){var n,i,r,o,a;return Wt(this,function(l){switch(l.label){case 0:return n=s[0],i=s[1],r=function(u,c,h){return ht(function(){var d,f,p,x;h.reverseOutputOrder?(f=nn(Nt(u,[0,h.boxCoordOffset+0],[-1,1])),d=nn(Nt(u,[0,h.boxCoordOffset+1],[-1,1])),x=nn(Nt(u,[0,h.boxCoordOffset+2],[-1,1])),p=nn(Nt(u,[0,h.boxCoordOffset+3],[-1,1]))):(d=nn(Nt(u,[0,h.boxCoordOffset+0],[-1,1])),f=nn(Nt(u,[0,h.boxCoordOffset+1],[-1,1])),p=nn(Nt(u,[0,h.boxCoordOffset+2],[-1,1])),x=nn(Nt(u,[0,h.boxCoordOffset+3],[-1,1]))),f=Je(we(Dt(f,h.xScale),c.w),c.x),d=Je(we(Dt(d,h.yScale),c.h),c.y),h.applyExponentialOnBoxSize?(p=we(no(Dt(p,h.hScale)),c.h),x=we(no(Dt(x,h.wScale)),c.w)):(p=we(Dt(p,h.hScale),c.h),x=we(Dt(x,h.wScale),c.h));var m=St(d,Dt(p,2)),g=St(f,Dt(x,2)),y=Je(d,Dt(p,2)),v=Je(f,Dt(x,2)),w=ts([he(m,[h.numBoxes,1]),he(g,[h.numBoxes,1]),he(y,[h.numBoxes,1]),he(v,[h.numBoxes,1])],1);if(h.numKeypoints)for(var _=0;_<h.numKeypoints;++_){var T=h.keypointCoordOffset+_*h.numValuesPerKeypoint,A=void 0,M=void 0;h.reverseOutputOrder?(A=nn(Nt(u,[0,T],[-1,1])),M=nn(Nt(u,[0,T+1],[-1,1]))):(M=nn(Nt(u,[0,T],[-1,1])),A=nn(Nt(u,[0,T+1],[-1,1])));var C=Je(we(Dt(A,h.xScale),c.w),c.x),R=Je(we(Dt(M,h.yScale),c.h),c.y);w=ts([w,he(C,[h.numBoxes,1]),he(R,[h.numBoxes,1])],1)}return w})}(i,e,t),o=ht(function(){var u=n;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(u=WA(n,-t.scoreClippingThresh,t.scoreClippingThresh)),u=Gr(u)):u}),[4,Rne(r,o,t)];case 1:return a=l.sent(),Jt([r,o]),[2,a]}})})}function Rne(s,e,t){return Vt(this,void 0,void 0,function(){var n,i,r,o,a,l,u,c,h,d,f,p;return Wt(this,function(x){switch(x.label){case 0:return n=[],[4,s.data()];case 1:return i=x.sent(),[4,e.data()];case 2:for(r=x.sent(),o=0;o<t.numBoxes;++o)if(!(t.minScoreThresh!=null&&r[o]<t.minScoreThresh||(a=o*t.numCoords,l=Mne(i[a+0],i[a+1],i[a+2],i[a+3],r[o],t.flipVertically,o),(u=l.locationData.relativeBoundingBox).width<0||u.height<0))){if(t.numKeypoints>0)for((c=l.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)f=a+t.keypointCoordOffset+d,p={x:i[f+0],y:t.flipVertically?1-i[f+1]:i[f+1]},c.relativeKeypoints.push(p);n.push(l)}return[2,n]}})})}function Mne(s,e,t,n,i,r,o){return{score:[i],ind:o,locationData:{relativeBoundingBox:{xMin:e,yMin:r?1-t:s,xMax:n,yMax:r?1-s:t,width:n-e,height:t-s}}}}function Nne(s,e){return s==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Z_(s,e,t,n){return Vt(this,void 0,void 0,function(){var i,r,o,a,l,u,c,h;return Wt(this,function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,n=n||e.flipVertically||!1,i=s.size,r=i/e.numLandmarks,[4,s.data()];case 1:for(o=d.sent(),a=[],l=0;l<e.numLandmarks;++l)u=l*r,(h={x:0,y:0}).x=t?e.inputImageWidth-o[u]:o[u],r>1&&(h.y=n?e.inputImageHeight-o[u+1]:o[u+1]),r>2&&(h.z=o[u+2]),r>3&&(h.score=Nne(e.visibilityActivation,o[u+3])),a.push(h);for(c=0;c<a.length;++c)(h=a[c]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function J_(s,e,t){var n=s.width,i=s.height,r=s.rotation;if(t.rotation==null&&t.rotationDegree==null||(r=function(u,c){return c.rotation!=null?u+=c.rotation:c.rotationDegree!=null&&(u+=Math.PI*c.rotationDegree/180),GR(u)}(r,t)),r===0)s.xCenter=s.xCenter+n*t.shiftX,s.yCenter=s.yCenter+i*t.shiftY;else{var o=(e.width*n*t.shiftX*Math.cos(r)-e.height*i*t.shiftY*Math.sin(r))/e.width,a=(e.width*n*t.shiftX*Math.sin(r)+e.height*i*t.shiftY*Math.cos(r))/e.height;s.xCenter=s.xCenter+o,s.yCenter=s.yCenter+a}{var l=Math.max(n*e.width,i*e.height);n=l/e.width,i=l/e.height}return s.width=n*t.scaleX,s.height=i*t.scaleY,s}function Pne(s,e){return s.map(function(t){var n=cn(cn({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),n})}var Ro=function(){function s(e){this.alpha=e,this.initialized=!1}return s.prototype.apply=function(e,t){var n;return this.initialized?n=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},s.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},s.prototype.hasLastRawValue=function(){return this.initialized},s.prototype.lastRawValue=function(){return this.rawValue},s.prototype.reset=function(){this.initialized=!1},s}(),ng=function(){function s(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Ro(this.getAlpha(this.minCutOff)),this.dx=new Ro(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return s.prototype.apply=function(e,t,n){if(e==null)return e;var i=Math.trunc(t);if(this.lastTimestamp>=i)return e;this.lastTimestamp!==0&&i!==0&&(this.frequency=1/(1e-6*(i-this.lastTimestamp))),this.lastTimestamp=i;var r=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,o=this.dx.applyWithAlpha(r,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(o),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(a),l)},s.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},s}(),Hx=function(){function s(e){this.config=e}return s.prototype.apply=function(e,t,n){var i=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return Na([],e,!0);r=1/n}return e.map(function(o,a){var l=cn(cn({},o),{x:i.xFilters[a].apply(o.x,t,r),y:i.yFilters[a].apply(o.y,t,r)});return o.z!=null&&(l.z=i.zFilters[a].apply(o.z,t,r)),l})},s.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},s.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(n){return new ng(t.config)}),this.yFilters=e.map(function(n){return new ng(t.config)}),this.zFilters=e.map(function(n){return new ng(t.config)}))},s}(),sg=function(){function s(e){this.config=e,this.window=[],this.lowPassFilter=new Ro(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return s.prototype.apply=function(e,t,n){if(e==null)return e;var i,r=Math.trunc(t);if(this.lastTimestamp>=r)return e;if(this.lastTimestamp===-1)i=1;else{for(var o=e*n-this.lastValue*this.lastValueScale,a=r-this.lastTimestamp,l=o,u=a,c=(1+this.window.length)*(1e6/30),h=0,d=this.window;h<d.length;h++){var f=d[h];if(u+f.duration>c)break;l+=f.distance,u+=f.duration}var p=l/(1e-6*u);i=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:o,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=r,this.lowPassFilter.applyWithAlpha(e,i)},s}(),kne=function(){function s(e){this.config=e}return s.prototype.apply=function(e,t,n){var i=this;if(e==null)return this.reset(),null;var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return Na([],e,!0);r=1/n}return this.initializeFiltersIfEmpty(e),e.map(function(o,a){var l=cn(cn({},o),{x:i.xFilters[a].apply(o.x,t,r),y:i.yFilters[a].apply(o.y,t,r)});return o.z!=null&&(l.z=i.zFilters[a].apply(o.z,t,r)),l})},s.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},s.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(n){return new sg(t.config)}),this.yFilters=e.map(function(n){return new sg(t.config)}),this.zFilters=e.map(function(n){return new sg(t.config)}))},s}(),ig=function(){function s(e){if(e.velocityFilter!=null)this.keypointsFilter=new kne(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new Hx(e.oneEuroFilter)}}return s.prototype.apply=function(e,t,n,i,r){if(i===void 0&&(i=!1),e==null)return this.keypointsFilter.reset(),null;var o=r!=null?function(u,c){return(u.width*c.width+u.height*c.height)/2}(r,n):1,a=i?jR(e,n):e,l=this.keypointsFilter.apply(a,t,o);return i?Pne(l,n):l},s}(),Q_=function(){function s(e){this.alpha=e.alpha}return s.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(a){return new Ro(t.alpha)}));for(var n=[],i=0;i<e.length;++i){var r=e[i],o=cn({},r);o.score=this.visibilityFilters[i].apply(r.score),n.push(o)}return n},s}(),$ne={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Hl={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},Dne={maxPoses:1,flipHorizontal:!1},Lne={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},One=.3,eC={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Fne={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Une={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Bne={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},zne={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Vne={kernelSize:7,minConfidenceToRefine:.5},tC={alpha:.1},Wne={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Gne={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Hne={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Xne={activation:"none"},qne={combineWithPreviousRatio:.7},Kne=function(){function s(e){this.mask=e}return s.prototype.toCanvasImageSource=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,zR(this.mask)]})})},s.prototype.toImageData=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,VR(this.mask)]})})},s.prototype.toTensor=function(){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,this.mask]})})},s.prototype.getUnderlyingType=function(){return"tensor"},s}();function jne(s){return WR(s),"person"}var Yne=function(){function s(e,t,n,i,r,o){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=i,this.smoothSegmentation=r,this.modelType=o,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(h){h.reduceBoxesInLowestLayer==null&&(h.reduceBoxesInLowestLayer=!1),h.interpolatedScaleAspectRatio==null&&(h.interpolatedScaleAspectRatio=1),h.fixedAnchorSize==null&&(h.fixedAnchorSize=!1);for(var d=[],f=0;f<h.numLayers;){for(var p=[],x=[],m=[],g=[],y=f;y<h.strides.length&&h.strides[y]===h.strides[f];){var v=K_(h.minScale,h.maxScale,y,h.strides.length);if(y===0&&h.reduceBoxesInLowestLayer)m.push(1),m.push(2),m.push(.5),g.push(.1),g.push(v),g.push(v);else{for(var w=0;w<h.aspectRatios.length;++w)m.push(h.aspectRatios[w]),g.push(v);if(h.interpolatedScaleAspectRatio>0){var _=y===h.strides.length-1?1:K_(h.minScale,h.maxScale,y+1,h.strides.length);g.push(Math.sqrt(v*_)),m.push(h.interpolatedScaleAspectRatio)}}y++}for(var T=0;T<m.length;++T){var A=Math.sqrt(m[T]);p.push(g[T]/A),x.push(g[T]*A)}var M=0,C=0;if(h.featureMapHeight.length>0)M=h.featureMapHeight[f],C=h.featureMapWidth[f];else{var R=h.strides[f];M=Math.ceil(h.inputSizeHeight/R),C=Math.ceil(h.inputSizeWidth/R)}for(var $=0;$<M;++$)for(var W=0;W<C;++W)for(var q=0;q<p.length;++q){var O={xCenter:(W+h.anchorOffsetX)/C,yCenter:($+h.anchorOffsetY)/M,width:0,height:0};h.fixedAnchorSize?(O.width=1,O.height=1):(O.width=x[q],O.height=p[q]),d.push(O)}f=y}return d}($ne);var a=ps(this.anchors.map(function(h){return h.width})),l=ps(this.anchors.map(function(h){return h.height})),u=ps(this.anchors.map(function(h){return h.xCenter})),c=ps(this.anchors.map(function(h){return h.yCenter}));this.anchorTensor={x:u,y:c,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?$i([],[0,0]):null}return s.prototype.estimatePoses=function(e,t,n){return Vt(this,void 0,void 0,function(){var i,r,o,a,l,u,c,h,d,f,p,x,m,g,y,v,w,_,T,A,M,C,R;return Wt(this,function($){switch($.label){case 0:return i=function(W){var q;if((q=W==null?Dne:cn({},W)).maxPoses==null&&(q.maxPoses=1),q.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(q.maxPoses,". Should be > 0."));if(q.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return q}(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=i.maxPoses,this.timestamp=n!=null?1e3*n:KR(e)?1e6*e.currentTime:null,r=wu(e),o=ht(function(){return hn(Mw(e),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(o)]);case 1:if((l=$.sent()).length===0)return this.reset(),o.dispose(),[2,[]];u=l[0],a=this.poseDetectionToRoi(u,r),$.label=2;case 2:return[4,this.poseLandmarksByRoi(a,o)];case 3:return c=$.sent(),o.dispose(),c==null?(this.reset(),[2,[]]):(h=c.landmarks,d=c.auxiliaryLandmarks,f=c.poseScore,p=c.worldLandmarks,x=c.segmentationMask,m=this.poseLandmarkFiltering(h,d,p,r),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,v=m.actualWorldLandmarksFiltered,w=this.poseLandmarksToRoi(y,r),this.regionOfInterest=w,_=this.smoothSegmentation&&x!=null?this.poseSegmentationFiltering(x):x,(T=g!=null?jR(g,r):null)!=null&&T.forEach(function(W,q){W.name=gh[q]}),(A=v)!=null&&A.forEach(function(W,q){W.name=gh[q]}),M={score:f,keypoints:T,keypoints3D:A},_!==null&&(C=ht(function(){var W=pi(_,2),q=Wo(W,[[0,0],[0,0],[0,1]]);return lI(q,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Jt(_),R={maskValueToLabel:jne,mask:new Kne(C)},M.segmentation=R),[2,[M]])}})})},s.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=Ane(t,e,qne),Jt(e)),Jt(t),this.prevFilteredSegmentationMask},s.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Jt([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},s.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Jt(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=$i([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},s.prototype.detectPose=function(e){return Vt(this,void 0,void 0,function(){var t,n,i,r,o,a,l,u,c,h;return Wt(this,function(d){switch(d.label){case 0:return t=Gx(e,Fne),n=t.imageTensor,i=t.padding,r=this.detectorModel.predict(n),o=Cne(r),a=o.boxes,[4,Ine([l=o.logits,a],this.anchorTensor,Lne)];case 1:return(u=d.sent()).length===0?(Jt([n,r,l,a]),[2,u]):[4,Tne(u,this.maxPoses,One)];case 2:return c=d.sent(),h=function(f,p){f===void 0&&(f=[]);for(var x=p.left,m=p.top,g=p.left+p.right,y=p.top+p.bottom,v=0;v<f.length;v++){var w=f[v],_=w.locationData.relativeBoundingBox,T=(_.xMin-x)/(1-g),A=(_.yMin-m)/(1-y),M=_.width/(1-g),C=_.height/(1-y);_.xMin=T,_.yMin=A,_.width=M,_.height=C,_.xMax=T+M,_.yMax=A+C;var R=w.locationData.relativeKeypoints;R&&R.forEach(function($){var W=($.x-x)/(1-g),q=($.y-m)/(1-y);$.x=W,$.y=q})}return f}(c,i),Jt([n,r,l,a]),[2,h]}})})},s.prototype.poseDetectionToRoi=function(e,t){return J_(eg(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,eC)},s.prototype.poseLandmarksByRoi=function(e,t){return Vt(this,void 0,void 0,function(){var n,i,r,o,a,l,u,c,h,d,f,p,x,m;return Wt(this,function(g){switch(g.label){case 0:if(n=wu(t),i=Gx(t,Une,e),r=i.imageTensor,o=i.padding,a=i.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),u=this.landmarkModel.execute(r,l),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return(c=g.sent())==null?(Jt(u),Jt(r),[2,null]):(h=c.landmarks,d=c.auxiliaryLandmarks,f=c.poseScore,p=c.worldLandmarks,x=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,o,a,h,d,p,x)]);case 2:return m=g.sent(),Jt(u),Jt(r),[2,cn({poseScore:f},m)]}})})},s.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,i,r,o,a,l){return Vt(this,void 0,void 0,function(){var u,c,h,d,f,p;return Wt(this,function(x){return u=Y_(r,n),c=Y_(o,n),h=q_(u,t),d=q_(c,t),f=function(m,g){for(var y=[],v=0,w=m;v<w.length;v++){var _=w[v],T=_.x,A=_.y,M=g.rotation,C=Math.cos(M)*T-Math.sin(M)*A,R=Math.sin(M)*T+Math.cos(M)*A,$=cn({},_);$.x=C,$.y=R,y.push($)}return y}(a,t),p=null,this.enableSegmentation&&(p=ht(function(){var m=l.shape,g=m[0],y=m[1],v=function(T){var A=XR(new Array(16).fill(0));A[0][0]=Ss(T,0,0),A[1][0]=-Ss(T,0,1),A[2][0]=Ss(T,0,2),A[3][0]=-Ss(T,0,3),A[0][2]=Ss(T,2,0),A[1][2]=-Ss(T,2,1),A[2][2]=Ss(T,2,2),A[3][2]=-Ss(T,2,3),A[0][1]=-Ss(T,1,0),A[1][1]=Ss(T,1,1),A[2][1]=-Ss(T,1,2),A[3][1]=Ss(T,1,3),A[0][3]=-Ss(T,3,0),A[1][3]=Ss(T,3,1),A[2][3]=-Ss(T,3,2),A[3][3]=Ss(T,3,3);for(var M=T[0][0]*A[0][0]+T[1][0]*A[0][1]+T[2][0]*A[0][2]+T[3][0]*A[0][3],C=0;C<A.length;C++)for(var R=0;R<A.length;R++)A[C][R]/=M;return A}(i),w=$i(HR(v,{width:y,height:g},e),[1,8]),_=[1,g,y,1];return nn(La.transform(he(l,_),w,"bilinear","constant",0,[e.height,e.width]),[0,3])}),Jt(l)),[2,{landmarks:h,auxiliaryLandmarks:d,worldLandmarks:f,segmentationMask:p}]})})},s.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return Vt(this,void 0,void 0,function(){var t,n,i,r,o,a,l,u,c,h,d,f,p;return Wt(this,function(x){switch(x.label){case 0:return t=e[0],n=e[1],i=e[2],r=e[3],o=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(a=x.sent()[0])<.5?[2,null]:[4,Z_(t,Bne)];case 2:return[4,Ene(x.sent(),i,Vne)];case 3:return l=x.sent(),u=l.slice(0,33),c=l.slice(33,35),[4,Z_(r,zne)];case 4:return h=x.sent(),d=h.slice(0,33),f=function(m,g,y){for(var v=[],w=0;w<m.length;w++){var _=cn({},g[w]);_.score=m[w].score,v.push(_)}return v}(u,d),p=this.enableSegmentation?function(m,g,y){return ht(function(){var v=nn(m,[0]),w=v.shape[2];if(w===1){var _=v;switch(g.activation){case"none":break;case"sigmoid":_=Gr(_);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(g.activation,")"))}var T=_;return nn(T,[2])}throw new Error("Unsupported number of tensor channels ".concat(w))})}(o,Xne):null,[2,{landmarks:u,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:f,segmentationMask:p}]}})})},s.prototype.poseLandmarksToRoi=function(e,t){return J_(eg(j_(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,eC)},s.prototype.poseLandmarkFiltering=function(e,t,n,i){var r,o,a;if(this.timestamp!=null&&this.enableSmoothing){var l=eg(j_(t),i,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new Q_(tC)),r=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new Q_(tC)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(n),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new ig(Wne)),r=this.landmarksSmoothingFilterActual.apply(r,this.timestamp,i,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new ig(Gne)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,i,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new ig(Hne)),a=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else r=e,o=t,a=n;return{actualLandmarksFiltered:r,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:a}},s}();function Zne(s){return Vt(this,void 0,void 0,function(){var e,t,n,i,r,o;return Wt(this,function(a){switch(a.label){case 0:return e=function(l){var u=cn({},l??Hl);if(u.enableSmoothing==null&&(u.enableSmoothing=Hl.enableSmoothing),u.enableSegmentation==null&&(u.enableSegmentation=Hl.enableSegmentation),u.smoothSegmentation==null&&(u.smoothSegmentation=Hl.smoothSegmentation),u.modelType==null&&(u.modelType=Hl.modelType),u.detectorModelUrl==null&&(u.detectorModelUrl=Hl.detectorModelUrl),u.landmarkModelUrl==null)switch(u.modelType){case"lite":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:u.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return u}(s),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,n=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([bu(e.detectorModelUrl,{fromTFHub:t}),bu(e.landmarkModelUrl,{fromTFHub:n})])];case 1:return i=a.sent(),r=i[0],o=i[1],[2,new Yne(r,o,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var Fa,br,YR=function(){function s(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var n=0,i=t.keypointTrackerParams.keypointFalloff;n<i.length;n++){var r=i[n];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(r))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return s.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},s.prototype.getTracks=function(){return this.tracks.slice()},s.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},s.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(n){return e-n.lastTimestamp<=t.maxAge})},s.prototype.assignTracks=function(e,t,n){for(var i=Array.from(Array(t[0].length).keys()),r=[],o=0,a=Array.from(Array(e.length).keys());o<a.length;o++){var l=a[o];if(i.length!==0){for(var u=-1,c=-1,h=0,d=i;h<d.length;h++){var f=d[h],p=t[l][f];p>=this.minSimilarity&&p>c&&(u=f,c=p)}if(u>=0){var x=this.tracks[u];x=Object.assign(x,this.createTrack(e[l],n,x.id)),e[l].id=x.id;var m=i.indexOf(u);i.splice(m,1)}else r.push(l)}else r.push(l)}for(var g=0,y=r;g<y.length;g++){l=y[g];var v=this.createTrack(e[l],n);this.tracks.push(v),e[l].id=v.id}},s.prototype.updateTracks=function(e){this.tracks.sort(function(t,n){return n.lastTimestamp-t.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},s.prototype.createTrack=function(e,t,n){var i={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:Na([],e.keypoints,!0).map(function(r){return cn({},r)})};return e.box!==void 0&&(i.box=cn({},e.box)),i},s.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},s.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(n){return!e.includes(n.id)})},s.prototype.reset=function(){this.tracks=[]},s}(),Jne=function(s){function e(t){return s.call(this,t)||this}return BR(e,s),e.prototype.computeSimilarity=function(t){var n=this;return t.length===0||this.tracks.length===0?[[]]:t.map(function(i){return n.tracks.map(function(r){return n.iou(i,r)})})},e.prototype.iou=function(t,n){var i=Math.max(t.box.xMin,n.box.xMin),r=Math.max(t.box.yMin,n.box.yMin),o=Math.min(t.box.xMax,n.box.xMax),a=Math.min(t.box.yMax,n.box.yMax);if(i>=o||r>=a)return 0;var l=(o-i)*(a-r);return l/(t.box.width*t.box.height+n.box.width*n.box.height-l)},e}(YR),Qne=function(s){function e(t){var n=s.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return BR(e,s),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var n=[],i=0,r=t;i<r.length;i++){for(var o=r[i],a=[],l=0,u=this.tracks;l<u.length;l++){var c=u[l];a.push(this.oks(o,c))}n.push(a)}return n},e.prototype.oks=function(t,n){for(var i=this.area(n.keypoints)+1e-6,r=0,o=0,a=0;a<t.keypoints.length;++a){var l=t.keypoints[a],u=n.keypoints[a];if(!(l.score<this.keypointThreshold||u.score<this.keypointThreshold)){o+=1;var c=Math.pow(l.x-u.x,2)+Math.pow(l.y-u.y,2),h=2*this.keypointFalloff[a];r+=Math.exp(-1*c/(2*i*Math.pow(h,2)))}}return o<this.minNumKeyoints?0:r/o},e.prototype.area=function(t){var n=this,i=t.filter(function(l){return l.score>n.keypointThreshold}),r=Math.min.apply(Math,Na([1],i.map(function(l){return l.x}),!1)),o=Math.max.apply(Math,Na([0],i.map(function(l){return l.x}),!1)),a=Math.min.apply(Math,Na([1],i.map(function(l){return l.y}),!1));return(o-r)*(Math.max.apply(Math,Na([0],i.map(function(l){return l.y}),!1))-a)},e}(YR);function ese(s){switch(s){case br.BlazePose:return gh.reduce(function(e,t,n){return e[t]=n,e},{});case br.PoseNet:case br.MoveNet:return Er.reduce(function(e,t,n){return e[t]=n,e},{});default:throw new Error("Model ".concat(s," is not supported."))}}(function(s){s.Keypoint="keypoint",s.BoundingBox="boundingBox"})(Fa||(Fa={})),function(s){s.MoveNet="MoveNet",s.BlazePose="BlazePose",s.PoseNet="PoseNet"}(br||(br={}));var nC=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],ZR={modelType:"SinglePose.Lightning",enableSmoothing:!0},sC={},iC={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},rg={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},rC={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function tse(s,e,t,n){for(var i={},r=0,o=Er;r<o.length;r++){var a=o[r];i[a]=[e[t[a]].y*n.height,e[t[a]].x*n.width]}if(function(y,v){return(y[v.left_hip].score>.2||y[v.right_hip].score>.2)&&(y[v.left_shoulder].score>.2||y[v.right_shoulder].score>.2)}(e,t)){var l=(i.left_hip[0]+i.right_hip[0])/2,u=(i.left_hip[1]+i.right_hip[1])/2,c=function(y,v,w,_,T){for(var A=["left_shoulder","right_shoulder","left_hip","right_hip"],M=0,C=0,R=0;R<A.length;R++)(H=Math.abs(_-w[A[R]][0]))>M&&(M=H),(Z=Math.abs(T-w[A[R]][1]))>C&&(C=Z);for(var $=0,W=0,q=0,O=Object.keys(w);q<O.length;q++){var H,Z,ee=O[q];y[v[ee]].score<.2||((H=Math.abs(_-w[ee][0]))>$&&($=H),(Z=Math.abs(T-w[ee][1]))>W&&(W=Z))}return[M,C,$,W]}(e,t,i,l,u),h=c[0],d=c[1],f=c[2],p=c[3],x=Math.max(1.9*d,1.9*h,1.2*f,1.2*p),m=[l-(x=Math.min(x,Math.max(u,n.width-u,l,n.height-l))),u-x];if(x>Math.max(n.width,n.height)/2)return Xx(s==null,n);var g=2*x;return{yMin:m[0]/n.height,xMin:m[1]/n.width,yMax:(m[0]+g)/n.height,xMax:(m[1]+g)/n.width,height:(m[0]+g)/n.height-m[0]/n.height,width:(m[1]+g)/n.width-m[1]/n.width}}return Xx(s==null,n)}function Xx(s,e){var t,n,i,r;return s?e.width>e.height?(t=1,n=e.height/e.width,i=0,r=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,n=1,i=(e.height/2-e.width/2)/e.height,r=0):e.width>e.height?(t=e.width/e.height,n=1,i=(e.height/2-e.width/2)/e.height,r=0):(t=1,n=e.height/e.width,i=0,r=(e.width/2-e.height/2)/e.width),{yMin:i,xMin:r,yMax:i+t,xMax:r+n,height:t,width:n}}function nse(s){var e,t=s==null?ZR:cn({},s);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(nC.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(nC));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=Fa.BoundingBox),t.trackerType===Fa.Keypoint)t.trackerConfig!=null?t.trackerConfig=function(n){var i=oC(rg,n);return i.keypointTrackerParams=cn({},rg.keypointTrackerParams),n.keypointTrackerParams!=null&&(n.keypointTrackerParams.keypointConfidenceThreshold!=null&&(i.keypointTrackerParams.keypointConfidenceThreshold=n.keypointTrackerParams.keypointConfidenceThreshold),n.keypointTrackerParams.keypointFalloff!=null&&(i.keypointTrackerParams.keypointFalloff=n.keypointTrackerParams.keypointFalloff),n.keypointTrackerParams.minNumberOfKeypoints!=null&&(i.keypointTrackerParams.minNumberOfKeypoints=n.keypointTrackerParams.minNumberOfKeypoints)),i}(t.trackerConfig):t.trackerConfig=rg;else{if(t.trackerType!==Fa.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,oC(rC,e)):t.trackerConfig=rC}return t}function oC(s,e){var t={maxTracks:s.maxTracks,maxAge:s.maxAge,minSimilarity:s.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var sse=function(){function s(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=ese(br.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new Hx(iC),this.cropRegionFilterYMin=new Ro(.9),this.cropRegionFilterXMin=new Ro(.9),this.cropRegionFilterYMax=new Ro(.9),this.cropRegionFilterXMax=new Ro(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===Fa.Keypoint?this.tracker=new Qne(t.trackerConfig):t.trackerType===Fa.BoundingBox&&(this.tracker=new Jne(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return s.prototype.runSinglePersonPoseModel=function(e){return Vt(this,void 0,void 0,function(){var t,n,i,r,o;return Wt(this,function(a){switch(a.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return sh()==="webgpu"?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=a.sent(),a.label=3;case 3:for(t.dispose(),i={keypoints:[],score:0},r=0,o=0;o<17;++o)i.keypoints[o]={y:n[3*o],x:n[3*o+1],score:n[3*o+2]},i.keypoints[o].score>.2&&(++r,i.score+=i.keypoints[o].score);return r>0&&(i.score/=r),[2,i]}})})},s.prototype.runMultiPersonPoseModel=function(e){return Vt(this,void 0,void 0,function(){var t,n,i,r,o,a,l,u;return Wt(this,function(c){switch(c.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return sh()==="webgpu"?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=c.sent(),c.label=3;case 3:for(t.dispose(),i=[],r=n.length/56,o=0;o<r;++o)for(i[o]={keypoints:[]},a=56*o+51,i[o].box={yMin:n[a],xMin:n[a+1],yMax:n[a+2],xMax:n[a+3],width:n[a+3]-n[a+1],height:n[a+2]-n[a]},l=56*o+55,i[o].score=n[l],i[o].keypoints=[],u=0;u<17;++u)i[o].keypoints[u]={y:n[56*o+3*u],x:n[56*o+3*u+1],score:n[56*o+3*u+2]};return[2,i]}})})},s.prototype.estimatePoses=function(e,t,n){return t===void 0&&(t=sC),Vt(this,void 0,void 0,function(){var i,r,o,a,l,u;return Wt(this,function(c){switch(c.label){case 0:return t=function(h){return h==null?sC:cn({},h)}(t),e==null?(this.reset(),[2,[]]):(n==null?KR(e)&&(n=1e6*e.currentTime):n*=1e3,i=Mw(e),r=wu(i),o=pi(i,0),e instanceof Nn||i.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(o,r,n)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(o,r,n)];case 3:a=c.sent(),c.label=4;case 4:for(l=0;l<a.length;++l)for(u=0;u<a[l].keypoints.length;++u)a[l].keypoints[u].name=Er[u],a[l].keypoints[u].y*=r.height,a[l].keypoints[u].x*=r.width;return[2,a]}})})},s.prototype.estimateSinglePose=function(e,t,n){return Vt(this,void 0,void 0,function(){var i,r,o,a,l=this;return Wt(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Xx(this.cropRegion==null,t)),i=ht(function(){var c=$i([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),h=io([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return hn(La.cropAndResize(e,c,h,d,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(i)];case 1:if(r=u.sent(),i.dispose(),r.score<this.minPoseScore)return this.reset(),[2,[]];for(o=0;o<r.keypoints.length;++o)r.keypoints[o].y=this.cropRegion.yMin+r.keypoints[o].y*this.cropRegion.height,r.keypoints[o].x=this.cropRegion.xMin+r.keypoints[o].x*this.cropRegion.width;return n!=null&&this.enableSmoothing&&(r.keypoints=this.keypointFilter.apply(r.keypoints,n,1)),a=tse(this.cropRegion,r.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[r]]}})})},s.prototype.estimateMultiplePoses=function(e,t,n){return Vt(this,void 0,void 0,function(){var i,r,o,a,l,u,c,h,d,f,p,x=this;return Wt(this,function(m){switch(m.label){case 0:return t.width>t.height?(r=this.multiPoseMaxDimension,o=Math.round(this.multiPoseMaxDimension*t.height/t.width),i=La.resizeBilinear(e,[o,r]),l=r,u=32*Math.ceil(o/32),a=Wo(i,[[0,0],[0,u-o],[0,0],[0,0]])):(r=Math.round(this.multiPoseMaxDimension*t.width/t.height),o=this.multiPoseMaxDimension,i=La.resizeBilinear(e,[o,r]),l=32*Math.ceil(r/32),u=o,a=Wo(i,[[0,0],[0,0],[0,l-r],[0,0]])),i.dispose(),e.dispose(),c=hn(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(h=m.sent(),c.dispose(),h=h.filter(function(g){return g.score>=x.minPoseScore}),f=0;f<h.length;++f)for(d=0;d<h[f].keypoints.length;++d)h[f].keypoints[d].y*=u/o,h[f].keypoints[d].x*=l/r;if(this.enableTracking&&(this.tracker.apply(h,n),this.enableSmoothing)){for(f=0;f<h.length;++f)this.keypointFilterMap.has(h[f].id)||this.keypointFilterMap.set(h[f].id,new Hx(iC)),h[f].keypoints=this.keypointFilterMap.get(h[f].id).apply(h[f].keypoints,n,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(g,y){p.has(y)||x.keypointFilterMap.delete(y)})}return[2,h]}})})},s.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),i=this.cropRegionFilterYMax.apply(e.yMax),r=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:i,xMax:r,height:i-t,width:r-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},s.prototype.dispose=function(){this.moveNetModel.dispose()},s.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},s.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},s}();function ise(s){return s===void 0&&(s=ZR),Vt(this,void 0,void 0,function(){var e,t,n,i;return Wt(this,function(r){switch(r.label){case 0:return e=nse(s),n=!0,e.modelUrl?(n=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,bu(e.modelUrl,{fromTFHub:n})]):[3,2];case 1:return t=r.sent(),[3,4];case 2:return i=void 0,e.modelType==="SinglePose.Lightning"?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?i="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(i="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,bu(i,{fromTFHub:n})];case 3:t=r.sent(),r.label=4;case 4:return sh()==="webgl"&&J().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new sse(t,e)]}})})}var aC={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},lC=["MobileNetV1","ResNet50"],uC={MobileNetV1:[8,16],ResNet50:[16]},rse=[8,16,32],cC={MobileNetV1:[.5,.75,1],ResNet50:[1]},hC=[1,2,4],dC={maxPoses:1,flipHorizontal:!1},ose={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},ase=[-123.15,-115.9,-103.06];function og(s){return Math.floor(s/2)}var lse=function(){function s(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return s.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},s.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},s.prototype.empty=function(){return this.numberOfElements===-1},s.prototype.size=function(){return this.numberOfElements+1},s.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},s.prototype.max=function(){return this.priorityQueue[0]},s.prototype.swim=function(e){for(;e>0&&this.less(og(e),e);)this.exchange(e,og(e)),e=og(e)},s.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},s.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},s.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},s.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},s}();function use(s,e,t,n,i,r){for(var o=r.shape,a=o[0],l=o[1],u=!0,c=Math.max(t-i,0),h=Math.min(t+i+1,a),d=c;d<h;++d){for(var f=Math.max(n-i,0),p=Math.min(n+i+1,l),x=f;x<p;++x)if(r.get(d,x,s)>e){u=!1;break}if(!u)break}return u}function cse(s){return Vt(this,void 0,void 0,function(){return Wt(this,function(e){return[2,Promise.all(s.map(function(t){return t.buffer()}))]})})}function JR(s,e,t,n){return{y:n.get(s,e,t),x:n.get(s,e,t+17)}}function QR(s,e,t){var n=JR(s.heatmapY,s.heatmapX,s.id,t),i=n.y,r=n.x;return{x:s.heatmapX*e+r,y:s.heatmapY*e+i}}function eM(s,e,t,n){var i=t.x,r=t.y;return s.some(function(o){var a,l,u,c,h,d,f=o.keypoints;return a=r,l=i,u=f[n].y,c=f[n].x,(h=u-a)*h+(d=c-l)*d<=e})}var fC=Er.reduce(function(s,e,t){return s[e]=t,s},{}),tM=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(s){var e=s[0],t=s[1];return[fC[e],fC[t]]}),ag=tM.map(function(s){return s[1]}),pC=tM.map(function(s){return s[0]});function mC(s,e,t){return s<e?e:s>t?t:s}function lg(s,e,t,n){return{y:mC(Math.round(s.y/e),0,t-1),x:mC(Math.round(s.x/e),0,n-1)}}function gC(s,e){return{x:s.x+e.x,y:s.y+e.y}}function xC(s,e,t,n,i,r,o,a){a===void 0&&(a=2);for(var l=n.shape,u=l[0],c=l[1],h={y:e.y,x:e.x},d=gC(h,function(y,v,w){var _=w.shape[2]/2;return{y:w.get(v.y,v.x,y),x:w.get(v.y,v.x,_+y)}}(s,lg(h,r,u,c),o)),f=0;f<a;f++){var p=lg(d,r,u,c),x=JR(p.y,p.x,t,i);d=gC({x:p.x*r,y:p.y*r},{x:x.x,y:x.y})}var m=lg(d,r,u,c),g=n.get(m.y,m.x,t);return{y:d.y,x:d.x,name:Er[t],score:g}}function hse(s,e,t,n,i,r){var o=e.shape[2],a=ag.length,l=new Array(o),u=s.part,c=s.score,h=QR(u,n,t);l[u.id]={score:c,name:Er[u.id],y:h.y,x:h.x};for(var d=a-1;d>=0;--d){var f=ag[d],p=pC[d];l[f]&&!l[p]&&(l[p]=xC(d,l[f],p,e,t,n,r))}for(d=0;d<a;++d)f=pC[d],p=ag[d],l[f]&&!l[p]&&(l[p]=xC(d,l[f],p,e,t,n,i));return l}function dse(s,e,t){return t.reduce(function(n,i,r){var o=i.y,a=i.x,l=i.score;return eM(s,e,{y:o,x:a},r)||(n+=l),n},0)/t.length}function fse(s,e,t,n,i,r,o,a){return o===void 0&&(o=.5),a===void 0&&(a=20),Vt(this,void 0,void 0,function(){var l,u,c,h,d,f,p,x,m,g,y,v;return Wt(this,function(w){switch(w.label){case 0:return[4,cse([s,e,t,n])];case 1:for(l=w.sent(),u=l[0],c=l[1],h=l[2],d=l[3],f=[],p=function(_,T,A){for(var M=A.shape,C=M[0],R=M[1],$=M[2],W=new lse(C*R*$,function(ee){return ee.score}),q=0;q<C;++q)for(var O=0;O<R;++O)for(var H=0;H<$;++H){var Z=A.get(q,O,H);Z<_||use(H,Z,q,O,T,A)&&W.enqueue({score:Z,part:{heatmapY:q,heatmapX:O,id:H}})}return W}(o,1,u),x=a*a;f.length<r&&!p.empty();)m=p.dequeue(),g=QR(m.part,i,c),eM(f,x,g,m.part.id)||(y=hse(m,u,c,i,h,d),v=dse(f,x,y),f.push({keypoints:y,score:v}));return[2,f]}})})}function nM(){for(var s,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:s="fn main() ";break;case 1:s="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return s}var pse=function(){function s(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Ue(this.outputShape),this.dispatch=Re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return s.prototype.getUserCode=function(){return`
        `.concat(nM("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},s}();function mse(s,e){if(xu()instanceof Ou)return function(t,n){var i=xu(),r=new pse(n.shape),o=i.runWebGPUProgram(r,[t,n],"float32");return Ys().makeTensorFromTensorInfo(o)}(s,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var gse=function(){function s(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Ue(t),this.dispatch=Re(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return s.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(nM("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},s}();function xse(s,e){if(xu()instanceof Ou)return function(t,n){var i=xu(),r=new gse(t.shape),o=i.runWebGPUProgram(r,[t,n],"float32");return Ys().makeTensorFromTensorInfo(o)}(s,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function sM(s){var e=s.shape,t=e[0],n=e[1],i=e[2];return ht(function(){var r,o,a=he(s,[t*n,i]),l=UA(a,0),u=pi(Dt(l,Pt(n,"int32")),1),c=pi((r=l,o=n,ht(function(){var h=Dt(r,Pt(o,"int32"));return St(r,we(h,Pt(o,"int32")))})),1);return ts([u,c],1)})}function yse(s,e,t){return ht(function(){var n=function(i,r){for(var o=[],a=0;a<Er.length;a++){var l=i.get(a,0).valueOf(),u=i.get(a,1).valueOf(),c=bse(l,u,a,r),h=c.x,d=c.y;o.push(d),o.push(h)}return $i(o,[Er.length,2])}(s,t);return Je(hn(we(s.toTensor(),Pt(e,"int32")),"float32"),n)})}function bse(s,e,t,n){return{y:n.get(s,e,t),x:n.get(s,e,t+Er.length)}}function vse(s,e,t){return Vt(this,void 0,void 0,function(){var n,i,r,o,a,l,u,c,h,d;return Wt(this,function(f){switch(f.label){case 0:return n=0,i=sM(s),[4,Promise.all([s.buffer(),e.buffer(),i.buffer()])];case 1:return r=f.sent(),o=r[0],a=r[1],l=r[2],[4,(u=yse(l,t,a)).buffer()];case 2:return c=f.sent(),h=Array.from(function(p,x){for(var m=x.shape[0],g=new Float32Array(m),y=0;y<m;y++){var v=x.get(y,0),w=x.get(y,1);g[y]=p.get(v,w,y)}return g}(o,l)),d=h.map(function(p,x){return n+=p,{y:c.get(x,0),x:c.get(x,1),score:p,name:Er[x]}}),i.dispose(),u.dispose(),[2,{keypoints:d,score:n/d.length}]}})})}function wse(s,e,t){return Vt(this,void 0,void 0,function(){var n,i,r;return Wt(this,function(o){return n=sM(s),i=function(a,l,u){return ht(function(){var c=xse(a,u);return Je(hn(we(a,Pt(l,"int32")),"float32"),c)})}(n,t,e),r=mse(s,n),[2,[i,r]]})})}function yC(s,e){return(s-1)%e==0}var bC="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",vC="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function wC(s,e){return function(t,n){return(t-1)%n==0}(s,e)?s:Math.floor(s/e)*e+1}var SC=function(){function s(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;D(n[1]===-1&&n[2]===-1,function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"});var i,r,o=(i=t.inputResolution,r=t.outputStride,{height:wC(i.height,r),width:wC(i.width,r)});(function(a){D(rse.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(t.outputStride),function(a,l){D(yC(a.height,l),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")}),D(yC(a.width,l),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")})}(o,t.outputStride),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return s.prototype.estimatePoses=function(e,t){return t===void 0&&(t=dC),Vt(this,void 0,void 0,function(){return Wt(this,function(n){return[2,this.estimatePosesGPU(e,t,!1)]})})},s.prototype.estimatePosesGPU=function(e,t,n){return t===void 0&&(t=dC),n===void 0&&(n=!1),Vt(this,void 0,void 0,function(){var i,r,o,a,l,u,c,h,d,f,p,x,m,g,y,v,w,_;return Wt(this,function(T){switch(T.label){case 0:return i=function(A){var M=A;if(M.maxPoses==null&&(M.maxPoses=1),M.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(M.maxPoses,". Should be > 0."));if(M.maxPoses>1){if((M=cn(cn({},ose),M)).scoreThreshold<0||M.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(M.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(M.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(M.nmsRadius,"."))}return M}(t),e==null?[2,n?[[],[]]:[]]:(this.maxPoses=i.maxPoses,r=Gx(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),o=r.imageTensor,a=r.padding,l=this.architecture==="ResNet50"?Je(o,ase):qR(o,[-1,1]),u=this.posenetModel.predict(l),this.architecture==="ResNet50"?(c=nn(u[2],[0]),h=nn(u[3],[0]),d=nn(u[0],[0]),f=nn(u[1],[0])):(c=nn(u[0],[0]),h=nn(u[1],[0]),d=nn(u[2],[0]),f=nn(u[3],[0])),p=Gr(h),this.maxPoses!==1?[3,5]:n?[4,wse(p,c,this.outputStride)]:[3,2]);case 1:return m=T.sent(),y=m[0],g=m[1],x=[y,g],[3,4];case 2:return[4,vse(p,c,this.outputStride)];case 3:y=T.sent(),x=[y],T.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,fse(p,c,d,f,this.outputStride,this.maxPoses,i.scoreThreshold,i.nmsRadius)];case 6:x=T.sent(),T.label=7;case 7:if(n){if(i.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");v=this.getCanvasInfo(wu(e),this.inputResolution,a)}else _=wu(e),w=function(A,M,C,R){var $=M.height,W=M.width,q=$/(C.height*(1-R.top-R.bottom)),O=W/(C.width*(1-R.left-R.right)),H=-R.top*C.height,Z=-R.left*C.width;if(O===1&&q===1&&H===0&&Z===0)return A;for(var ee=0,ce=A;ee<ce.length;ee++)for(var ne=0,fe=ce[ee].keypoints;ne<fe.length;ne++){var pe=fe[ne];pe.x=(pe.x+Z)*O,pe.y=(pe.y+H)*q}return A}(x,_,this.inputResolution,a),i.flipHorizontal&&(w=function(A,M){for(var C=0,R=A;C<R.length;C++)for(var $=0,W=R[C].keypoints;$<W.length;$++){var q=W[$];q.x=M.width-1-q.x}return A}(w,_));return o.dispose(),l.dispose(),Jt(u),c.dispose(),h.dispose(),d.dispose(),f.dispose(),p.dispose(),[2,n?[x,v]:w]}})})},s.prototype.getCanvasInfo=function(e,t,n){var i=e.height,r=e.width,o=i/(t.height*(1-n.top-n.bottom)),a=r/(t.width*(1-n.left-n.right)),l=-n.top*t.height;return[-n.left*t.width,l,a,o,e.width,e.height]},s.prototype.dispose=function(){this.posenetModel.dispose()},s.prototype.reset=function(){},s}();function Sse(s){return s===void 0&&(s=aC),Vt(this,void 0,void 0,function(){var e,t,n,i,r;return Wt(this,function(o){switch(o.label){case 0:return(e=function(c){var h=c||aC;if(h.architecture==null&&(h.architecture="MobileNetV1"),lC.indexOf(h.architecture)<0)throw new Error("Invalid architecture ".concat(h.architecture,". ")+"Should be one of ".concat(lC));if(h.inputResolution==null&&(h.inputResolution={height:257,width:257}),h.outputStride==null&&(h.outputStride=16),uC[h.architecture].indexOf(h.outputStride)<0)throw new Error("Invalid outputStride ".concat(h.outputStride,". ")+"Should be one of ".concat(uC[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.multiplier==null&&(h.multiplier=1),cC[h.architecture].indexOf(h.multiplier)<0)throw new Error("Invalid multiplier ".concat(h.multiplier,". ")+"Should be one of ".concat(cC[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.quantBytes==null&&(h.quantBytes=4),hC.indexOf(h.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(h.quantBytes,". ")+"Should be one of ".concat(hC," ")+"for architecture ".concat(h.architecture,"."));if(h.architecture==="MobileNetV1"&&h.outputStride===32&&h.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return h}(s)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,l=e.quantBytes,u="model-stride".concat(a,".json"),t=l===4?vC+"float/"+u:vC+"quant".concat(l,"/")+u,[4,bu(e.modelUrl||t)]);case 1:return n=o.sent(),[2,new SC(n,e)];case 2:return i=function(c,h,d){var f={1:"100",.75:"075",.5:"050"},p="model-stride".concat(c,".json");return d===4?bC+"float/".concat(f[h],"/")+p:bC+"quant".concat(d,"/").concat(f[h],"/")+p}(e.outputStride,e.multiplier,e.quantBytes),[4,bu(e.modelUrl||i)];case 3:return r=o.sent(),[2,new SC(r,e)]}var a,l,u})})}function _se(s,e){return Vt(this,void 0,void 0,function(){var t,n;return Wt(this,function(i){switch(s){case br.PoseNet:return[2,Sse(e)];case br.BlazePose:if(n=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,Zne(e)];if(t.runtime==="mediapipe")return[2,_ne(e)];n=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(n));case br.MoveNet:return[2,ise(e)];default:throw new Error("".concat(s," is not a supported model name."))}})})}var Cse={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a={},jd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Tse(s,e){_a[s]=e}function tr(s,e){if(!(s in _a)||e!=null){const n=Ase(s,e);if(n!==null)_a[s]=n;else return console.log("Could not get context for WebGL version",s),null}const t=_a[s];return t==null||t.isContextLost()?(delete _a[s],tr(s)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),_a[s])}function Ese(s){if(!J().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Ase(s,e){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Ese(s);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete _a[s]},!1),J().getBool("SOFTWARE_WEBGL_ENABLED")&&(jd.failIfMajorPerformanceCaveat=!1),s===1?t.getContext("webgl",jd)||t.getContext("experimental-webgl",jd):t.getContext("webgl2",jd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xh;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(xh||(xh={}));var gi;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(gi||(gi={}));var us;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(us||(us={}));function Wh(s,e){return[e,s]}function Ise(s,e){return s*e}function Yd(s){const e=ae(s),t=Math.ceil(e/4);return ox(t)}function Bu(s,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(s/2))]}function Rse(s,e){const[t,n]=Bu(s,e);return t*n*4}function Nw(s,e){const t=s;let n,i,r,o,a,l,u,c,h,d;return J().getNumber("WEBGL_VERSION")===2?(n=t.R32F,i=t.R16F,r=t.RGBA16F,o=t.RGBA32F,a=t.RED,u=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=t.RGBA,a=s.RGBA,u=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(s,e){const t=e();return J().getBool("DEBUG")&&Mse(s),t}function Mse(s){const e=s.getError();if(e!==s.NO_ERROR)throw new Error("WebGL Error: "+$se(s,e))}const Nse=596e-10,Pse=65504;function kse(s){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||Nse<Math.abs(s)&&Math.abs(s)<Pse)}function $se(s,e){switch(e){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Zd(s,e){return mo(s,()=>s.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Dse(s,e){const t=mo(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Be(s,()=>s.shaderSource(t,e)),Be(s,()=>s.compileShader(t)),s.getShaderParameter(t,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function Lse(s,e){const t=mo(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Be(s,()=>s.shaderSource(t,e)),Be(s,()=>s.compileShader(t)),J().get("ENGINE_COMPILE_ONLY"))return t;if(s.getShaderParameter(t,s.COMPILE_STATUS)===!1)throw iM(e,s.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const Ose=/ERROR: [0-9]+:([0-9]+):/g;function iM(s,e){const t=Ose.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(s);return}const n=+t[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>iu((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),u=o.slice(n-1,n),c=o.slice(n);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${iu(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function Fse(s){return mo(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function Use(s,e){if(Be(s,()=>s.linkProgram(e)),!J().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(e,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function ug(s,e){if(Be(s,()=>s.validateProgram(e)),s.getProgramParameter(e,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Bse(s,e){const t=mo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Be(s,()=>s.bindBuffer(s.ARRAY_BUFFER,t)),Be(s,()=>s.bufferData(s.ARRAY_BUFFER,e,s.STATIC_DRAW)),t}function zse(s,e){const t=mo(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Be(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t)),Be(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,e,s.STATIC_DRAW)),t}function Vse(s){return mo(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function Wse(s,e){const t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||e<=0){const n=`[${s}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>t||e>t){const n=`[${s}x${e}]`,i=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function Gse(s){return mo(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function _C(s,e,t,n,i,r,o){const a=s.getAttribLocation(e,t);return a===-1?!1:(Be(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),Be(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),Be(s,()=>s.enableVertexAttribArray(a)),!0)}function Hse(s,e,t){Yse(s,t),Be(s,()=>s.activeTexture(s.TEXTURE0+t)),Be(s,()=>s.bindTexture(s.TEXTURE_2D,e))}function Xse(s,e,t){return mo(s,()=>s.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function qse(s,e,t){return s.getUniformLocation(e,t)}function Kse(s,e,t,n){Be(s,()=>Hse(s,e,n)),Be(s,()=>s.uniform1i(t,n))}function cg(s,e,t){Be(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),Be(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0))}function CC(s,e){Be(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),Be(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function Jd(s){const e=s.checkFramebufferStatus(s.FRAMEBUFFER);if(e!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+jse(s,e))}function jse(s,e){switch(e){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function mo(s,e,t){const n=Be(s,()=>e());if(n==null)throw new Error(t);return n}function Yse(s,e){const t=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+s.TEXTURE0;if(n<s.TEXTURE0||n>t){const i=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${i}.`)}}function Su(s,e=2){return ae(s.slice(0,s.length-e))}function _u(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function Qd(s){let e=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(e=[Su(s),..._u(s)]),e}function Zse(s,e=!1){let t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=J().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&J().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=t/2),e&&(t=t*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?Wy(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=jo(s).newShape);let i=ae(s),r=null;s.length<=1&&i<=t?r=[1,i]:s.length===2&&s[0]<=t&&s[1]<=t?r=s:s.length===3&&s[0]*s[1]<=t&&s[2]<=t?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=t&&s[1]*s[2]<=t?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=t&&s[3]<=t?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=t&&s[1]*s[2]*s[3]<=t&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||o)if(e){const a=Su(s);let l=2,u=2;s.length&&([l,u]=_u(s)),i=a*(l/2)*(u/2),r=ox(i).map(c=>c*2)}else r=ox(i);return r}function ef(s){return s%2===0}function Gf(s,e){if(s=s.slice(-2),e=e.slice(-2),en(s,e)||!s.length||!e.length||s[0]===0||s[1]===0||e[0]===0||e[1]===0)return!0;if(s.length!==e.length){const t=s[s.length-1],n=e[e.length-1];if(t===n||ef(t)&&ef(n)&&(s[0]===1||e[0]===1))return!0}return s[1]===e[1]&&ef(s[0])&&ef(e[0])}let hg,dg;function Jse(s){if(hg==null){const e=tr(s);hg=e.getParameter(e.MAX_TEXTURE_SIZE)}return hg}function Qse(s){if(dg==null){const e=tr(s);dg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dg)}function eie(s){if(s===0)return 0;let e;const t=tr(s);return Pi(t,"EXT_disjoint_timer_query_webgl2")&&s===2?e=2:Pi(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Pi(s,e){return s.getExtension(e)!=null}function TC(s){try{if(tr(s)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function tie(s){if(s===0)return!1;const e=tr(s);if(s===1){if(!Pi(e,"OES_texture_float"))return!1}else if(!Pi(e,"EXT_color_buffer_float"))return!1;return qx(e)}function nie(s){if(s===0)return!1;const e=tr(s);if(s===1){if(!Pi(e,"OES_texture_float")||!Pi(e,"WEBGL_color_buffer_float"))return!1}else{if(Pi(e,"EXT_color_buffer_float"))return qx(e);const n="EXT_color_buffer_half_float";if(Pi(e,n)){const i=e.getExtension(n);return sie(e,i)}return!1}return qx(e)}function qx(s){const e=Nw(s),t=s.createTexture();s.bindTexture(s.TEXTURE_2D,t),s.texImage2D(s.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(t),s.deleteFramebuffer(r),o}function sie(s,e){const t=Nw(s,e),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n),s.texImage2D(s.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function iie(s){return s!==2?!1:tr(s).fenceSync!=null}function Gh(s,e){Array.isArray(s)||(s=[s]),s.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze=J();Ze.registerFlag("HAS_WEBGL",()=>Ze.getNumber("WEBGL_VERSION")>0);Ze.registerFlag("WEBGL_VERSION",()=>TC(2)?2:TC(1)?1:0);Ze.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ze.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ze.get("WEBGL_VERSION")===2);Ze.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ze.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ze.registerFlag("WEBGL_PACK",()=>Ze.getBool("HAS_WEBGL"));Ze.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_CLIP",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_REDUCE",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_CONV_IM2COL",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ze.getBool("WEBGL_PACK"));Ze.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Jse(Ze.getNumber("WEBGL_VERSION")));Ze.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Qse(Ze.getNumber("WEBGL_VERSION")));Ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=Ze.getNumber("WEBGL_VERSION");return s===0?0:eie(s)});Ze.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ze.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vA());Ze.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>tie(Ze.getNumber("WEBGL_VERSION")));Ze.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ze.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ze.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ze.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>nie(Ze.getNumber("WEBGL_VERSION")));Ze.registerFlag("WEBGL_FENCE_API_ENABLED",()=>iie(Ze.getNumber("WEBGL_VERSION")));Ze.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ze.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ze.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(typeof s!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${s}.`);if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});Ze.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>vA()?1:-1,s=>{if(typeof s!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${s}.`);if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});Ze.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ze.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ze.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ze.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ze.registerFlag("WEBGL_EXP_CONV",()=>!1);Ze.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ze.getBool("IS_TEST"));Ze.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ze.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ze.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ze.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(){let s,e,t,n,i,r,o,a,l,u;return J().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",e="in",t="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=J().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",e="attribute",t="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:e,varyingVs:t,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(s,e,t="index"){const n=kn(e);return n.map((i,r)=>{const o=`int ${s[r]} = ${t} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${t} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function qp(s,e,t="index"){const n=kn(e);return n.map((i,r)=>{const o=`int ${s[r]} = ${t} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${t} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function rie(s,e){const t=s.length,n=s.map(r=>`${e}[${r}]`),i=new Array(t-1);i[t-2]=n[t-1];for(let r=t-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function oie(s,e,t="index"){const n=s.map((r,o)=>o),i=rie(n,e);return i.map((r,o)=>{const a=`int ${s[o]} = ${t} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${t} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function Pw(s){const e=kn(s).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function kw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const rM=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:oM}=QX;function aie(s,e,t){const n=[];if(s.forEach(f=>{const p=ae(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:x}=$w(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>lie(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,a=Ps(),l=hie(a);let u,c,h=pie(a);return e.isPacked?(u=uie(e.logicalShape,o,t.enableShapeUniforms),c=fie(a)):(u=cie(e.logicalShape,o,t.enableShapeUniforms),c=die(a)),t.packedInputs&&(h+=yie),[h,l,c,i,u,r,t.userCode].join(`
`)}function zu(s,e=!1){const t=s.shapeInfo.logicalShape;switch(t.length){case 0:return Mie(s,e);case 1:return Pie(s,e);case 2:return $ie(s,e);case 3:return Lie(s,e);case 4:return Fie(s,e);case 5:return Uie(s);case 6:return Bie(s);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function aM(s,e){switch(s.shapeInfo.logicalShape.length){case 0:return Rie(s);case 1:return Nie(s,e);case 2:return kie(s,e);case 3:return Die(s,e);default:return Oie(s,e)}}function lie(s,e,t=!1,n){let i="";t?i+=aM(s,n):i+=zu(s,n);const r=s.shapeInfo.logicalShape,o=e.logicalShape;return r.length<=o.length&&(t?i+=zie(s,e):i+=Vie(s,e)),i}function uie(s,e,t){switch(s.length){case 0:return lM();case 1:return bie(s,e,t);case 2:return Aie(s,e,t);case 3:return wie(s,e,t);default:return _ie(s,e,t)}}function cie(s,e,t){switch(s.length){case 0:return lM();case 1:return vie(s,e,t);case 2:return Iie(s,e,t);case 3:return Sie(s,e,t);case 4:return Cie(s,e,t);case 5:return Tie(s,e);case 6:return Eie(s,e);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function hie(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function die(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function fie(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function pie(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${mie}
    ${gie}
    ${xie}
  `}const mie=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,gie=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xie=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yie=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function lM(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function bie(s,e,t){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function vie(s,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function wie(s,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function Sie(s,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${qp(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=cl(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function _ie(s,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let u=2;u<s.length-1;u++)o*=s[s.length-u-1],a=`
      int b${u} = index / ${o};
      index -= b${u} * ${o};
    `+a,l=`b${u}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function Cie(s,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${qp(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=cl(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Tie(s,e){const t=cl(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Eie(s,e){const t=cl(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Aie(s,e,t){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(en(s,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function Iie(s,e,t){return en(s,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:s[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function hl(s){return`offset${s}`}function Rie(s){const e=s.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Ps();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function Mie(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=hl(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Nie(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),i=s.shapeInfo.texShape,r=Ps();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function Pie(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Vu(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=hl(t);return o===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function kie(s,e){const t=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=Ps();if(r!=null&&en(t,r))return e?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function $ie(s,e){const t=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&en(t,r)){if(e)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=jo(t),l=o;if(l.length<t.length){const d=Wu(s,l),f=["row","col"];return`
      ${zu(d,e)}
      float ${i}(int row, int col) {
        return ${i}(${Gu(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Vu(s)}
      }
    `;const u=r[0],c=r[1],h=hl(n);return c===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?e?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function Die(s,e){const t=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),f=[1,2],p=Wu(s,d),x=["b","row","col"];return`
        ${aM(p,e)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${Gu(x,f)});
        }
      `}const a=Ps();if(e)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],u=o[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Lie(s,e){const t=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],o=t[2],{newShape:a,keptDims:l}=jo(t),u=a;if(u.length<t.length){const x=Wu(s,u),m=["row","col","depth"];return`
        ${zu(x,e)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${Gu(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${Vu(s)}
      }
    `;const c=s.shapeInfo.texShape,h=c[0],d=c[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return e?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return e?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=hl(n);return e?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function Oie(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),i=Ps();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${t}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let x=2;x<o-1;x++)f=`int b${x}, `+f,d*=r[o-x-1],p=`b${x} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${i.texture2D}(${t}, uv);
    }
  `}function Fie(s,e){const t=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:u}=jo(t);if(l.length<t.length){const y=Wu(s,l),v=["row","col","depth","depth2"];return`
      ${zu(y,e)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${Gu(v,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${Vu(s)}
      }
    `;const c=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,x=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&c==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${x}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&c==null)return e?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const g=hl(n);return e?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${x}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${g});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${g});
      return sampleTexture(${n}, uv);
    }
  `}function Uie(s){const e=s.shapeInfo.logicalShape,t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),i=e[4],r=e[3]*i,o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:u}=jo(e);if(l.length<e.length){const x=Wu(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${zu(x)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Gu(m,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${Vu(s)}
      }
    `;const c=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const p=hl(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Bie(s){const e=s.shapeInfo.logicalShape,t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:i,keptDims:r}=jo(e);if(i.length<e.length){const m=Wu(s,i),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${zu(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Gu(g,r)});
      }
    `}const o=e[5],a=e[4]*o,l=e[3]*a,u=e[2]*l,c=e[1]*u;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Vu(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===c&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=hl(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${x};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Vu(s){const e=s.name,t=ae(s.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function zie(s,e){const t=s.name,n=t.charAt(0).toUpperCase()+t.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=oM(s.shapeInfo.logicalShape,e.logicalShape),l=an(o),u=o-r;let c;const h=["x","y","z","w","u","v"];r===0?c="":o<2&&a.length>=1?c="coords = 0;":c=a.map(y=>`coords.${h[y+u]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((y,v)=>`coords.${h[v+u]}`).join(", ");let f="return outputValue;";const x=ae(s.shapeInfo.logicalShape)===1,g=ae(e.logicalShape)===1;if(r===1&&!x&&!g)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!g)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const y=r-2,v=r-1;a.indexOf(y)>-1&&a.indexOf(v)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function Vie(s,e){const t=s.name,n=t.charAt(0).toUpperCase()+t.slice(1),i="get"+n+"AtOutCoords",r=e.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&en(o,r))return`
      float ${i}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=an(l),c=oM(s.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&c.length>=1?d="coords = 0;":d=c.map(x=>`coords.${f[x+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((x,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${u} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function an(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function $w(s,e,t){const{newShape:n,keptDims:i}=jo(e),r=e.length,o=s&&r===3&&e[0]===1,a=o?e.slice(1):n,l=!s&&r>1&&!en(e,t)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:i}}function Wu(s,e){const t=JSON.parse(JSON.stringify(s));return t.shapeInfo.logicalShape=e,t}function Gu(s,e){return e.map(t=>s[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(s,e,t,n){const i=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=i.map(c=>c.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=aie(i,o,e),l=Lse(s.gl,a),u=s.createProgram(l);return J().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:r,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(s.buildVao(u),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:r,outShapeInfo:o},uM(s,e,u)))}function uM(s,e,t){const n=[],i=[];let r,o,a,l=null,u=null;u=s.getUniformLocation(t,"NAN",!1),J().getNumber("WEBGL_VERSION")===1&&(l=s.getUniformLocation(t,"INFINITY",!1));const c=!1;for(const h of e.variableNames){const d={name:h,uniform:s.getUniformLocation(t,h,c),offset:s.getUniformLocation(t,`offset${h}`,c)};e.enableShapeUniforms&&(d.shape=s.getUniformLocation(t,`${h}Shape`,c),d.texShape=s.getUniformLocation(t,`${h}TexShape`,c)),n.push(d)}if(e.enableShapeUniforms&&(r=s.getUniformLocation(t,"outShape",c),a=s.getUniformLocation(t,"outShapeStrides",c),o=s.getUniformLocation(t,"outTexShape",c)),e.customUniforms)for(const h of e.customUniforms)i.push(s.getUniformLocation(t,h.name,c));return{variablesLocations:n,customUniformLocations:i,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:o}}function EC(s,e){if(s.length!==e.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${e.length} inputs`);s.forEach((t,n)=>{const i=t.logicalShape,r=e[n],o=r.shape;if(!en(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!en(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function Gie(s,e,t,n,i){e.program.enableShapeUniforms||(EC(e.inShapeInfos,t),EC([e.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(e.webGLProgram),s.bindVertexArray(e.webGLProgram.vao),J().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&s.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&s.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:c,offset:h,shape:d,texShape:f}=e.variablesLocations[l];if(d){const{uniformShape:p}=$w(e.program.packedInputs,u.shape,u.texData.texShape);switch(p.length){case 1:s.gl.uniform1iv(d,new Int32Array(p));break;case 2:s.gl.uniform2iv(d,new Int32Array(p));break;case 3:s.gl.uniform3iv(d,new Int32Array(p));break;case 4:s.gl.uniform4iv(d,new Int32Array(p));break}}if(f&&s.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(ae(u.shape)<2)s.gl.uniform1f(c,u.uniformValues[0]);else{let p=u.uniformValues;p instanceof Float32Array||(p=new Float32Array(p)),s.gl.uniform1fv(c,p)}continue}u.texData.slice!=null&&h!=null&&s.gl.uniform1i(h,u.texData.slice.flatOffset),s.setInputMatrixTexture(u.texData.texture.texture,c,l)}}const a=e.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(e.outShapeStridesLocation){const l=kn(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&s.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&i)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],c=e.customUniformLocations[l],h=i[l];if(u.type==="float")s.gl.uniform1fv(c,h);else if(u.type==="vec2")s.gl.uniform2fv(c,h);else if(u.type==="vec3")s.gl.uniform3fv(c,h);else if(u.type==="vec4")s.gl.uniform4fv(c,h);else if(u.type==="int")s.gl.uniform1iv(c,h);else if(u.type==="ivec2")s.gl.uniform2iv(c,h);else if(u.type==="ivec3")s.gl.uniform3iv(c,h);else if(u.type==="ivec4")s.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}s.executeProgram()}function Hie(s,e,t){let n="";e.concat(t).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:h}=$w(s.packedInputs,o.shape,l);let d="",f="",p="";if(c.length===1&&s.packedInputs){const _=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${_[0]>1}_${_[1]>1}`}else if(c.length===2&&!s.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!s.packedInputs){const _=kn(c);p=`${_[0]===l[1]}_${_[_.length-1]===l[1]}`}const x=o.shape.length,m=c.length===2&&en(o.shape,l),g=ae(o.shape)===1,y=yu(o.shape,t.shape),v=!s.packedInputs&&x===t.shape.length&&en(l,t.texData.texShape),w=s.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${x}_${v}_${u?h:""}_${c.length}_${g}_${y}_${m}_${d}_${f}_${p}_${w}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${J().getNumber("WEBGL_VERSION")}`,r}function xs(s){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xie{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ps();this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?qp(["r","c","d"],e):cl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Ps();this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?qp(["r","c","d"],e):cl(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kie{constructor(e){this.variableNames=["A"],this.outTexUsage=gi.DOWNLOAD;const t=Ps();this.outputShape=e,this.userCode=`
      ${rM}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jie{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=gi.DOWNLOAD;const t=Ps();this.outputShape=e,this.userCode=`
      ${rM}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yie={R:0,G:1,B:2,A:3};class AC{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=Ps();this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${Yie[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?kw():Pw(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zie{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Ps();this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length);let i="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?kw():Pw(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jie(s){const e=Ps(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Dse(s,t)}function Qie(s){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Bse(s,e)}function ere(s){const e=new Uint16Array([0,1,2,2,1,3]);return zse(s,e)}function Hh(s,e,t,n,i,r){Wse(e,t);const o=Vse(s),a=s.TEXTURE_2D;return Be(s,()=>s.bindTexture(a,o)),Be(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),Be(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),Be(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),Be(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),J().getNumber("WEBGL_VERSION")===1?Be(s,()=>s.texImage2D(a,0,n,e,t,0,i,r,null)):Be(s,()=>s.texStorage2D(a,1,n,e,t)),Be(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function cM(s){return s.internalFormatFloat}function tre(s,e,t,n){const[i,r]=Wh(e,t);return Hh(s,i,r,cM(n),n.textureFormatFloat,s.FLOAT)}function hM(s){return s.internalFormatHalfFloat}function nre(s,e,t,n){const[i,r]=Wh(e,t);return Hh(s,i,r,hM(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function dM(s){return s.downloadTextureFormat}function sre(s,e,t,n){const[i,r]=Wh(e,t);return Hh(s,i,r,dM(n),s.RGBA,s.UNSIGNED_BYTE)}function fM(s){return s.internalFormatPackedFloat}function ire(s,e,t,n){const[i,r]=Bu(e,t);return Hh(s,i,r,fM(n),s.RGBA,s.FLOAT)}function pM(s){return s.internalFormatPackedHalfFloat}function rre(s,e,t,n){const[i,r]=Bu(e,t);return Hh(s,i,r,pM(n),s.RGBA,n.textureTypeHalfFloat)}function ore(s,e,t){return Be(s,()=>s.bindBuffer(s.ARRAY_BUFFER,t)),_C(s,e,"clipSpacePos",t,3,20,0)&&_C(s,e,"uv",t,2,20,12)}function are(s,e,t,n,i,r){Be(s,()=>s.bindTexture(s.TEXTURE_2D,e));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(t*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(t*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),J().getNumber("WEBGL_VERSION")===2?Be(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,t,n,s.RGBA,a,o)):Be(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,t,n,0,s.RGBA,a,o)),Be(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function lre(s,e,t){Be(s,()=>s.bindTexture(s.TEXTURE_2D,e)),t.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?Be(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,t.width,t.height,s.RGBA,s.UNSIGNED_BYTE,t.data)):Be(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,t.width,t.height,0,s.RGBA,s.UNSIGNED_BYTE,t.data)):J().getNumber("WEBGL_VERSION")===2?Be(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,t)):Be(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,t)),Be(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function ure(s,e,t,n){const i=s.createBuffer();Be(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*e*t;return Be(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),Be(s,()=>s.readPixels(0,0,t,e,s.RGBA,s.FLOAT,0)),Be(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function cre(s,e,t){const n=s,i=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function hre(s,e,t,n){const[i,r]=Wh(e,t),o=4,a=new Uint8Array(Ise(e*t,o));return Be(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function dre(s,e,t,n,i,r,o,a){const l=s,u=new Float32Array(Rse(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function fre(s,e,t){const n=new Float32Array(e*t*4);return Be(s,()=>s.readPixels(0,0,t,e,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=J().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Tse(t,e)):this.gl=tr(t),e=this.gl,J().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>Be(r,()=>r.createVertexArray()),this.bindVertexArray=o=>Be(r,()=>r.bindVertexArray(o)),this.deleteVertexArray=o=>Be(r,()=>r.deleteVertexArray(o)),this.getVertexArray=()=>Be(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Be(e,()=>r.createVertexArrayOES()),this.bindVertexArray=o=>Be(e,()=>r.bindVertexArrayOES(o)),this.deleteVertexArray=o=>Be(e,()=>r.deleteVertexArrayOES(o)),this.getVertexArray=()=>Be(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),J().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Zd(this.gl,r),Pi(this.gl,o))this.textureHalfFloatExtension=Zd(this.gl,o);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Pi(this.gl,i))this.colorBufferHalfFloatExtension=Zd(this.gl,i);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Pi(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Pi(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Qie(this.gl),this.indexBuffer=ere(this.gl),this.framebuffer=Gse(this.gl),this.textureConfig=Nw(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Be(e,()=>e.finish()),Be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Be(e,()=>e.deleteFramebuffer(this.framebuffer)),Be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Be(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),tre(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),nre(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),sre(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),lre(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,i){this.throwIfDisposed(),are(this.gl,e,t,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),rre(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),ire(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(CC(this.gl,this.framebuffer),this.outputTexture=null),Be(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>hre(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,i,r,o){return dre(this.gl,e,t,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return cre(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const i=ure(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(J().getBool("WEBGL_FENCE_API_ENABLED")){const i=e,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},t=r}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>fre(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=Jie(t));const n=Fse(t);Be(t,()=>t.attachShader(n,this.vertexShader)),Be(t,()=>t.attachShader(n,e)),Use(t,n);const i=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&ug(t,i),i}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Be(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),ore(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Be(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&ug(this.gl,this.program),Be(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?Xse(this.gl,e,t):qse(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Be(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Kse(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[i,r]=Bu(t,n);this.setOutputMatrixTextureDriver(e,i,r)}setOutputMatrixWriteRegion(e,t,n,i){this.setOutputMatrixWriteRegionDriver(n,e,i,t)}setOutputPackedMatrixWriteRegion(e,t,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&ug(this.gl,this.program),Jd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Be(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Be(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Zd(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await qS(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=pre(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in J().platform&&(n=J().platform.setTimeoutCustom.bind(J().platform)),qS(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),cg(this.gl,e,this.framebuffer),this.debug&&Jd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(cg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Jd(this.gl)):CC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const i=this.gl;cg(i,e,this.framebuffer),this.debug&&Jd(i),this.outputTexture=e,Be(i,()=>i.viewport(0,0,t,n)),Be(i,()=>i.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,i){this.throwIfDisposed(),Be(this.gl,()=>this.gl.scissor(e,t,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function pre(s){let e=0;for(;e<s.length&&s[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:mre,bincountImpl:mM,bincountReduceImpl:gre,bitwiseAndImpl:xre,castImpl:yre,ceilImpl:bre,concatImpl:vre,equalImpl:wre,expImpl:Sre,expm1Impl:_re,floorImpl:Cre,gatherNdImpl:Tre,gatherV2Impl:Ere,greaterImpl:Are,greaterEqualImpl:Ire,lessImpl:Rre,lessEqualImpl:Mre,linSpaceImpl:Nre,logImpl:Pre,maxImpl:kre,maximumImpl:$re,minimumImpl:Dre,multiplyImpl:Lre,negImpl:Ore,notEqualImpl:Fre,prodImpl:Ure,raggedGatherImpl:Bre,raggedRangeImpl:zre,raggedTensorToTensorImpl:Vre,rangeImpl:Wre,rsqrtImpl:Gre,scatterImpl:Hre,sigmoidImpl:Xre,simpleAbsImpl:gM,sliceImpl:qre,sparseFillEmptyRowsImpl:Kre,sparseReshapeImpl:jre,sparseSegmentReductionImpl:xM,sqrtImpl:Yre,staticRegexReplaceImpl:Zre,stridedSliceImpl:Jre,stringNGramsImpl:Qre,stringSplitImpl:eoe,stringToHashBucketFastImpl:toe,subImpl:noe,tileImpl:soe,topKImpl:ioe,transposeImpl:Dw,uniqueImpl:roe}=xR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(s,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${s}.${t}`)}function As(s,e){return e===1?[s]:yM(s,e)}function ooe(s,e){if(s===1)return"rc";let t="";for(let n=0;n<s;n++)t+=e[n],n<s-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aoe{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=xs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=As("rc",this.rank),n=an(this.rank),i=this.getOutOfBoundsCondition(t),r=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${e[e.length-1-o]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${loe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?kw():Pw(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}}function loe(s,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?oie(["r","c","d"],"inputShape"):cl(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uoe{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const i=RC(t,n),r=MC(e,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=IC(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let a;return i===us.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):i===us.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):i===us.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):i===us.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):i===us.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(e,t,n,i){if(this.freeTextures==null)return;const r=RC(n,i),o=MC(t,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=IC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=J().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[o],c=u&&u.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function coe(s,e){const t=s;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===s.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function IC(s,e,t,n,i){const r=hoe(e,n);let o;if(i){const[l,u]=Bu(s[0],s[1]);o=l*u}else{const[l,u]=Wh(s[0],s[1]);o=l*u}const a=coe(t,r);return o*a}function hoe(s,e){switch(s){case us.PACKED_2X2_FLOAT32:return fM(e);case us.PACKED_2X2_FLOAT16:return pM(e);case us.UNPACKED_FLOAT32:return cM(e);case us.UNPACKED_FLOAT16:return hM(e);case us.PACKED_4X1_UNSIGNED_BYTE:return dM(e);default:throw new Error(`Unknown physical texture type ${s}`)}}function doe(s){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?us.PACKED_2X2_FLOAT32:us.UNPACKED_FLOAT32:s?us.PACKED_2X2_FLOAT16:us.UNPACKED_FLOAT16}function RC(s,e){if(s===gi.UPLOAD)return us.PACKED_2X2_FLOAT32;if(s===gi.RENDER||s==null)return doe(e);if(s===gi.DOWNLOAD||s===gi.PIXELS)return us.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function MC(s,e,t){return`${s[0]}_${s[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Bi="if (isnan(x)) return x;",foe="return x;",NC="return abs(x);",poe="return (x >= 0.0) ? x : (exp(x) - 1.0);",moe=Bi+`
  return (x < 0.0) ? 0.0 : x;
`,goe=Bi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Eo="return x;",xoe="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yoe="return x;",boe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,voe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,woe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Soe="return 1.0 / (1.0 + exp(-1.0 * x));";class Mo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _oe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length);const t=e.length,n=As("rc",t),i=an(t),r=ooe(t,n),o=n.slice(-2),a=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Coe=wI,Toe=1e-7,Eoe=1e-4,tf={};function Aoe(s){return s in tf||(tf[s]={}),tf[s]}const Ioe=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Roe=600;function Moe(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*Roe/1024/1024}class Kp extends Vy{nextDataId(){return Kp.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof fg)t=e;else{const n=tr(J().getNumber("WEBGL_VERSION"),e);t=new fg(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=tr(J().getNumber("WEBGL_VERSION"));t=new fg(n),this.binaryCache=Aoe(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new uoe(this.gpgpu),this.numMBBeforeWarning=Moe(),this.texData=new EE(this,Ys())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,i,r,o){const a=this.makeTensorInfo(t,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[i,r]},l.texShape=[i,r];const u=Qd(t),c=new AC(u,!1,o),h=this.runWebGLProgram(c,[a],n,[[i,r]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,n){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:t,dtype:n,values:e,usage:gi.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,i,r){if(J().getBool("DEBUG")&&this.checkNumericalProblems(t),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:i,values:t,usage:gi.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=t;if(o!=null){let d;l?d=new Mo(a,Eo):d=new fr(a,Eo);const f=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(e);if(i==="string")return n;const u=this.activeTimers!=null;let c;u&&(c=Xi());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=fh(d,f)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Xi()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const p=this.pendingRead.get(e);return new Promise(x=>p.push(x))}const t=this.texData.get(e),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=t;if(r!=null){let p;l?p=new Mo(i,Eo):p=new fr(i,Eo);const x=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:o}],o),m=this.read(x.dataId);return this.disposeIntermediateTensorInfo(x),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(o!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const p=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(p.texture.texture,...Yd(i))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),x=p[0],m=p[1];h=fh(x,m)}else if(u==null)h=this.getValuesFromTexture(e);else{const p=ae(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,p)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){const p=this.gpgpu.gl;Be(p,()=>p.deleteBuffer(u))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ys().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:u}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new Mo(r,Eo):f=new fr(r,Eo);const p=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),x=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),x}if(u==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=Ys().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const n=t.map(i=>Qr(i));return tn(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return tn(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const n=e[t];if(!kse(n))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:i}=this.texData.get(e),r=ae(t);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Yd(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=J().getBool("WEBGL_PACK")&&i===!0,a=o?Qd(t):t,l=o?new jie(a):new Kie(a),u=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=eo(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=eo(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=AE(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:o[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xi(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xi(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(t,i,r,o)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Ioe){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&ae(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Zi("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Coe(e.shape,t)}packedUnaryOp(e,t,n){const i=new Mo(e.shape,t),r=this.compileAndRun(i,[e],n);return Ys().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const i=gM(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,NC,e.dtype);const t=new fr(e.shape,NC),n=this.compileAndRun(t,[e]);return Ys().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let i;if(t==="string"&&n!=null&&n.length>0&&$h(n[0])){const r=n.map(o=>Do(o));i=this.write(r,e,t)}else i=this.write(n,e,t);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:t}}makeOutput(e,t,n){return Ys().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new _oe(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new aoe(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Su(e.shape),..._u(e.shape)],i={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Su(t),..._u(t)],o=new bM(r,n),a=!0,l=[n],u=this.runWebGLProgram(o,[i],e.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:i,shape:r,dtype:o}=n;if(t!=null){const d=ae(r),f=t[0]*t[1]*4;D(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Qd(r);let l;i?l=new qie(a):l=new Xie(a);const u=!0,c=[t??Yd(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:e}],o,c,u,t);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,n,i,r=!1,o){const a=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===xh.DENSE){const g=o??Yd(e.outputShape);l.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),ae(a.shape)===0)return l.values=Cr(a.dtype,0),a;const u=[],c=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&ae(g.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!Gf(y.shape,g.shape)){const v=g,w=g.shape;g.shape=y.shape,g=this.packedReshape(g,w),u.push(g),y=this.texData.get(g.dataId),v.shape=w}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=Hie(e,c,h),f=this.getAndSaveBinary(d,()=>Wie(this.gpgpu,e,c,h)),p=this.activeTimers!=null;let x;p&&(x=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||Gie(this.gpgpu,f,c,h,i),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const m=J().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const g=Xi();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,n,i,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,i,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ht(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=J().getBool("DEBUG");J().set("DEBUG",!1);const t=this.abs(Pt(1e-8)).dataSync()[0];if(J().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Toe:Eoe}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=t;if(o!=null)return;const u=this.activeTimers!=null;let c;u&&(c=Xi());let h=t.texShape;if(h==null&&(h=Zse(n,l),t.texShape=h),r!=null){const d=Qd(n);let f,p=h[1],x=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,x]=Bu(h[0],h[1])),l?f=new Zie(d,m):f=new AC(d,m);const g=m?[x,p]:h,y=this.makeTensorInfo(g,i),v=this.texData.get(y.dataId);m?v.usage=gi.PIXELS:v.usage=gi.UPLOAD,v.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),p,x,r);const w=[[x,p]],T=this.runWebGLProgram(f,[y],i,w,!0),A=this.texData.get(T.dataId);t.texShape=A.texShape,t.isPacked=A.isPacked,t.usage=A.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData(T.dataId):(t.texture=A.texture,t.values=null,this.texData.delete(T.dataId)),this.disposeIntermediateTensorInfo(y),u&&(this.uploadWaitMs+=Xi()-c)}else{const d=this.acquireTexture(h,a,i,l);t.texture=d}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:i}=n;return t!=null&&(n.values=Noe(t,i)),n.values}acquireTexture(e,t,n,i){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,i)}computeBytes(e,t){return e[0]*e[1]*Cf(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(t),i(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await VX(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(iM(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:i,nanLoc:r,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:l}=uM(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=i,e.nanLoc=r,e.outShapeLocation=o,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:i,height:r,width:o,channels:a}=e,l=Ys().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(i,t,n,r,o,a);return Ys().makeTensorFromDataId(u,t,n,l)}}Kp.nextDataId=0;function Noe(s,e){if(e==="float32"||e==="complex64")return s;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<t.length;++n)t[n]=Math.round(s[n]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */wA()&&CA("webgl",()=>new Kp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ja{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=It(t,n),this.enableShapeUniforms=xs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dl=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Hu{constructor(e,t,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=It(t,n);const r=this.outputShape.length;this.enableShapeUniforms=xs(r);let o="";if(i)if(r===0||ae(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${an(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=As("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ri(s){const{inputs:e,backend:t}=s,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Poe={kernelName:Ap,backendName:"webgl",kernelFunc:ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(s){const{inputs:e,backend:t}=s,{real:n,imag:i}=e,r=t.makeTensorInfo(n.shape,"complex64"),o=t.texData.get(r.dataId),a=ri({inputs:{x:n},backend:t}),l=ri({inputs:{x:i},backend:t});return o.complexTensorInfos={real:a,imag:l},r}const koe={kernelName:f0,backendName:"webgl",kernelFunc:ea};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM="return (a < 0.) ? b * a : a;",wM=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function $oe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{alpha:r}=n,o=t.makeTensorInfo([],"float32",Du(r,"float32")),a=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hu(wM,i.shape,o.shape):new Ja(vM,i.shape,o.shape),l=t.runWebGLProgram(a,[i,o],"float32");return t.disposeIntermediateTensorInfo(o),l}const Doe={kernelName:nb,backendName:"webgl",kernelFunc:$oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM="return (a < 0.) ? b * a : a;",_M=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Loe(s){const{inputs:e,backend:t}=s,{x:n,alpha:i}=e,r=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hu(_M,n.shape,i.shape):new Ja(SM,n.shape,i.shape);return t.runWebGLProgram(r,[n,i],"float32")}const Ooe={kernelName:kb,backendName:"webgl",kernelFunc:Loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xu="if (isnan(x)) return x;";function Ht({opSnippet:s,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&t!=null){const h=a.texData.get(o.dataId),d=t(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const u=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return u?c=new Mo(o.shape,e):c=new fr(o.shape,s),a.runWebGLProgram(c,[o],l)}}function hs({opSnippet:s,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:u}=o,c=a;if(n&&l.dtype==="complex64"){const p=c.texData.get(l.dataId),x=c.texData.get(u.dataId),[m,g]=[[p.complexTensorInfos.real,x.complexTensorInfos.real],[p.complexTensorInfos.imag,x.complexTensorInfos.imag]].map(v=>{const[w,_]=v,T={dataId:w.dataId,dtype:w.dtype,shape:l.shape},A={dataId:_.dataId,dtype:_.dtype,shape:u.shape},M=new Ja(s,l.shape,u.shape);return c.runWebGLProgram(M,[T,A],zs(w.dtype,_.dtype))}),y=ea({inputs:{real:m,imag:g},backend:c});return c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(g),y}const h=r||zs(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&i!=null){const p=c.texData.get(l.dataId).values,x=c.texData.get(u.dataId).values,m=l.dtype==="string"?Go(p):p,g=l.dtype==="string"?Go(x):x,[y,v]=i(l.shape,u.shape,m,g,h),w=c.makeTensorInfo(v,h),_=c.texData.get(w.dataId);return _.values=y,w}const d=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new Hu(e,l.shape,u.shape,t):f=new Ja(s,l.shape,u.shape),c.runWebGLProgram(f,[l,u],h)}}function yh(s,e=!1){if(s==="linear")return e?yoe:foe;if(s==="relu")return e?voe:moe;if(s==="elu")return e?boe:poe;if(s==="relu6")return e?woe:goe;if(s==="prelu")return e?_M:SM;if(s==="leakyrelu")return e?wM:vM;if(s==="sigmoid")return e?Soe:xoe;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CM{constructor(e,t,n,i=!1,r=!1,o=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=xs(this.outputShape.length);const c=i?e[1]:e[2],h=Math.ceil(c/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],x=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",w="rc.x";e[0]<t[0]?v=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(w=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${w};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${x[0]});
          result += (${p[1]} * ${x[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class kC{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=It(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C="return a * b;";function Ow(s){const{inputs:e,backend:t}=s,{a:n,b:i}=e,r=zs(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=t.texData.get(n.dataId),l=t.texData.get(i.dataId),u=new kC(PC.REAL,n.shape,i.shape),c=new kC(PC.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=t.runWebGLProgram(u,h,"float32"),f=t.runWebGLProgram(c,h,"float32"),p=ea({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}if(t.shouldExecuteOnCPU([n,i])){const a=t.texData.get(n.dataId),l=t.texData.get(i.dataId),[u,c]=Lre(n.shape,i.shape,a.values,l.values,r),h=t.makeTensorInfo(c,r),d=t.texData.get(h.dataId);return d.values=u,h}let o;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Hu($C,n.shape,i.shape):o=new Ja($C,n.shape,i.shape),t.runWebGLProgram(o,[n,i],r)}const Foe={kernelName:_b,backendName:"webgl",kernelFunc:Ow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uoe(s,e,t){const n=[Su(s.shape),..._u(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[Su(e),..._u(e)],o=new bM(r,n),a=!0,l=[n],u=t.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{shape:r}=n,o=t,a=ae(i.shape),l=IE(r,a),u=ae(l);D(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(i.dataId);return c.isPacked&&!Gf(i.shape,l)&&!(c.texture!==null&&Gf(c.shape,l))?Uoe(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const Boe={kernelName:Ub,backendName:"webgl",kernelFunc:Pe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DC{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=e;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${fu(h)?h.toPrecision(2):h}, ones);`}let c="";r%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zoe{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=e;this.outputShape=[i,o];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const c=Math.floor(n/4)*4,h=n%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Voe(s){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:s[1],n=Vp(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function fl(s,e,t,n){const i=Voe(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:u}=i[o];let c,h;t==="mean"?c=o===0?new DC({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:u},a):new DC({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:u}):c=new zoe({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:u},t),h=r,r=n.runWebGLProgram(c,[r],e),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Woe{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const i=an(this.rank),r=Goe(t);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Goe(s){const e=s.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let i=0;i<s.length;i++)n[s[i]]=t[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hoe{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=an(this.rank),r=yM("rc",this.rank),o=new Array(this.rank);for(let c=0;c<t.length;c++)o[t[c]]=r[c];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(s,e,t){const n=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Hoe(s.shape,e):new Woe(s.shape,e);return t.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xoe(s,e,t,n){const i=e,r=s.shape.length,o=wn(i,s.shape);let a=o;const l=ms(a,r),u=l!=null;let c=s;u&&(c=jp(s,l,n),a=gs(a.length,r)),ci("sum",a,r);const[h,d]=vi(c.shape,a);let f=h;t&&(f=ui(h,o));const p=ae(d),m=ae(s.shape)/p,g=Pe({inputs:{x:c},attrs:{shape:[m,p]},backend:n}),y=Np(s.dtype),v=fl(g,y,"sum",n),w=Pe({inputs:{x:v},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(v),u&&n.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yp(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n;return Xoe(i,r,o,t)}const qoe={kernelName:iv,backendName:"webgl",kernelFunc:Yp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{perm:r}=n,o=t,a=i.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=i.shape[r[c]];let u;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=Dw(h,i.shape,i.dtype,r,l);u=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(u.dataId);f.values=d}else u=jp(i,r,o);return u}const Koe={kernelName:Ac,backendName:"webgl",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM=1e3;function Hf({a:s,b:e,transposeA:t,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const u=s.shape.length,c=e.shape.length,h=t?s.shape[u-2]:s.shape[u-1],d=n?e.shape[c-1]:e.shape[c-2],f=t?s.shape[u-1]:s.shape[u-2],p=n?e.shape[c-2]:e.shape[c-1],x=s.shape.slice(0,-2),m=e.shape.slice(0,-2),g=ae(x),y=ae(m),w=It(s.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);D(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);const _=t?[g,h,f]:[g,f,h],T=n?[y,p,d]:[y,d,p],A=Pe({inputs:{x:s},backend:i,attrs:{shape:_}}),M=Pe({inputs:{x:e},backend:i,attrs:{shape:T}}),C=[A,M],R=Math.max(g,y),$=t?A.shape[1]:A.shape[2],W=r!=null,q=o!=null,O=l==="leakyrelu",H=l!=null?yh(l,!0):null,Z=W||q||O||H!=null;let ee;if((f===1||p===1)&&$>TM&&Z===!1){let ne=A,fe=M;t&&(ne=Rs({inputs:{x:A},backend:i,attrs:{perm:[0,2,1]}}),C.push(ne)),n&&(fe=Rs({inputs:{x:M},backend:i,attrs:{perm:[0,2,1]}}),C.push(fe));const pe=p!==1,Oe=p===1;let le=ne;pe&&(le=Pe({inputs:{x:ne},backend:i,attrs:{shape:[R,$,1]}}),C.push(le));const ge=p===1?2:1;let Fe=fe;Oe&&(Fe=Pe({inputs:{x:fe},backend:i,attrs:{shape:[R,1,$]}}),C.push(Fe));const Qe=Ow({inputs:{a:le,b:Fe},backend:i});ee=Yp({inputs:{x:Qe},backend:i,attrs:{axis:ge,keepDims:!0}}),C.push(Qe)}else{const ne=zs(s.dtype,e.dtype),fe=new CM(_,T,[R,f,p],t,n,W,H,q,O),pe=[A,M];if(r!=null&&pe.push(r),q&&pe.push(o),O){const Oe=i.makeTensorInfo([],"float32",Du(a,"float32"));pe.push(Oe),C.push(Oe)}ee=i.runWebGLProgram(fe,pe,ne)}const ce=Pe({inputs:{x:ee},backend:i,attrs:{shape:w}});C.push(ee);for(const ne of C)i.disposeIntermediateTensorInfo(ne);return ce}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function joe(s){const{inputs:e,backend:t,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=n;return Hf({a:i,b:r,transposeA:l,transposeB:u,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const Yoe={kernelName:Ef,backendName:"webgl",kernelFunc:joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC="return abs(x);";function Zoe(s){const{inputs:e,backend:t}=s,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=t.texData.get(n.dataId),o=gM(r.values);return t.makeTensorInfo(n.shape,n.dtype,o)}let i;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Mo(n.shape,LC):i=new fr(n.shape,LC),t.runWebGLProgram(i,[n],n.dtype)}const Joe={kernelName:Xy,backendName:"webgl",kernelFunc:Zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qoe=Bi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,eae=Ht({opSnippet:Qoe}),tae={kernelName:qy,backendName:"webgl",kernelFunc:eae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nae=Bi+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,sae=Ht({opSnippet:nae}),iae={kernelName:Ky,backendName:"webgl",kernelFunc:sae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC="return a + b;",rae=hs({opSnippet:OC,packedOpSnippet:OC,supportsComplex:!0,cpuKernelImpl:mre}),oae={kernelName:Tp,backendName:"webgl",kernelFunc:rae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aae{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lae{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mf(s){const{inputs:e,backend:t}=s,n=e;if(n.length===1)return ri({inputs:{x:n[0]},backend:t});if(n.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),u=mf({inputs:n.slice(0,l),backend:t}),c=mf({inputs:n.slice(l),backend:t});return mf({inputs:[u,c],backend:t})}const i=n.map(l=>l.dtype).reduce((l,u)=>zs(l,u)),r=n.map(l=>l.shape),a=J().getBool("WEBGL_PACK")?new lae(n[0].shape,r):new aae(n[0].shape,r);return t.runWebGLProgram(a,n,i)}const uae={kernelName:jy,backendName:"webgl",kernelFunc:mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n,a=i.shape.length,l=wn(r,i.shape);let u=l;const c=ms(u,a);let h=i;c!=null&&(h=Rs({inputs:{x:i},backend:t,attrs:{perm:c}}),u=gs(u.length,a)),ci("all",u,a);const[d,f]=vi(h.shape,u),p=ae(f),x=Pe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=fl(x,x.dtype,"all",t);let g;if(o){const y=ui(d,l);g=Pe({inputs:{x:m},backend:t,attrs:{shape:y}})}else g=Pe({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),g}const hae={kernelName:Yy,backendName:"webgl",kernelFunc:cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n,a=i.shape.length,l=wn(r,i.shape);let u=l;const c=ms(u,a);let h=i;c!=null&&(h=Rs({inputs:{x:i},backend:t,attrs:{perm:c}}),u=gs(u.length,a)),ci("any",u,a);const[d,f]=vi(h.shape,u),p=ae(f),x=Pe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=fl(x,x.dtype,"any",t);let g;if(o){const y=ui(d,l);g=Pe({inputs:{x:m},backend:t,attrs:{shape:y}})}else g=Pe({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),g}const fae={kernelName:Zy,backendName:"webgl",kernelFunc:dae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pae{constructor(e,t,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=t==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mae{constructor(e,t,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],o=Math.ceil(r/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,u=an(l),c=As("coords",l);let h,d;if(o===1){d=l+1;const M=an(d);h=`
        ${M} sourceLocR = ${M}(${c.join()}, 0);
        ++${c[l-1]};
        ${M} sourceLocG = ${M}(${c.join()}, 0);
        ++${c[l-2]};
        ${M} sourceLocA = ${M}(${c.join()}, 0);
        --${c[l-1]};
        ${M} sourceLocB = ${M}(${c.join()}, 0);
        --${c[l-2]};`}else d=l,h=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],x=f.map(M=>"int "+M),m=As("sourceLocR",d-1).concat("inIdx.r"),g=As("sourceLocG",d-1).concat("inIdx.g"),y=As("sourceLocB",d-1).concat("inIdx.b"),v=As("sourceLocA",d-1).concat("inIdx.a"),w=n==="max"?"greaterThan":"lessThan",_=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()})));`,T=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,A=i?"":`
      float getBestIndicesAChannel(${x.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${x.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${T};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${_}
          vec4 candidate = ${T};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(s,e,t,n=null){let i=e.shape[0],r=e.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=Vp(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new pae(a,t,n==null),u=[e];n!=null&&u.push(n);const c=s.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;const h=EM(s,e,t,c);return s.disposeIntermediateTensorInfo(c),h}function AM(s,e,t,n=null){const i=n!=null?n.shape:e.shape,r=i[i.length-1],o=Vp(r),a=new mae(i,o,t,n==null),l=n==null?[e]:[e,n],u=s.runWebGLProgram(a,l,"int32");if(u.shape.length===e.shape.length){const c=AM(s,e,t,u);return s.disposeIntermediateTensorInfo(u),c}return u}function IM(s,e,t,n){const i=[t];if(ci("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,e.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],o=s.texData.get(e.dataId),a=o!==null&&o.isPacked;let l=e;a&&(l=s.unpackTensor(e),r.push(l));const[u,c]=vi(l.shape,i),h=ae(c),d=Pe({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=EM(s,d,n);r.push(f);const p=Pe({inputs:{x:f},backend:s,attrs:{shape:u}});return r.forEach(x=>s.disposeIntermediateTensorInfo(x)),p}return AM(s,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r}=n;let o=wn(r,i.shape);const a=ms(o,i.shape.length);let l=i;const u=[];a!=null&&(l=Rs({inputs:{x:i},backend:t,attrs:{perm:a}}),u.push(l),o=gs(o.length,l.shape.length)),ci("argMax",[o[0]],l.shape.length);const c=IM(t,l,o[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const xae={kernelName:Jy,backendName:"webgl",kernelFunc:gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r}=n;let o=wn(r,i.shape);const a=ms(o,i.shape.length);let l=i;const u=[];a!=null&&(l=Rs({inputs:{x:i},backend:t,attrs:{perm:a}}),u.push(l),o=gs(o.length,l.shape.length)),ci("argMin",[o[0]],l.shape.length);const c=IM(t,l,o[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const bae={kernelName:Qy,backendName:"webgl",kernelFunc:yae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vae=Bi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,wae=Ht({opSnippet:vae}),Sae={kernelName:e0,backendName:"webgl",kernelFunc:wae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ae=Bi+"return log(x + sqrt(x * x + 1.0));",Cae=Ht({opSnippet:_ae}),Tae={kernelName:t0,backendName:"webgl",kernelFunc:Cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae=Bi+`
  return atan(x);
`,Aae=Ht({opSnippet:Eae}),Iae={kernelName:n0,backendName:"webgl",kernelFunc:Aae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=Lw+`
  return atan(a, b);
`,Mae=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+dl+`
  return result;
`,Nae=hs({opSnippet:Rae,packedOpSnippet:Mae}),Pae={kernelName:i0,backendName:"webgl",kernelFunc:Nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae=Bi+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,$ae=Ht({opSnippet:kae}),Dae={kernelName:s0,backendName:"webgl",kernelFunc:$ae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bh{constructor(e,t,n,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const x=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const M=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${M} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");const _=Math.floor(o/4)*4,T=o%4,A=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${_}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${_};
          if (${T===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${T===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${T===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${w});
      }
    `}}class Fw{constructor(e,t,n,i=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,p=e.effectiveFilterHeight,x=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let w="0.0";if(v||(w="-1.0 / 1e-20"),n){const R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${x};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${x} +
                      wR * ${x} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const _="max";let T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(T="avgValue / max(count, 1.0)");const A=Math.floor(o/4)*4,M=o%4,C=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${_}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${C}
            }

            int xC = xCCorner + ${A};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${C}
            }
          }
        }
        setOutput(${T});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e;Gh(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,u=1;D(Ns(o,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Fi(i.shape,r,o,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&en(c.inShape,c.outShape))return ri({inputs:{x:i},backend:t});const h=new bh(c,"avg",!1);return t.runWebGLProgram(h,[i],"float32")}const Oae={kernelName:r0,backendName:"webgl",kernelFunc:Lae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fae(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:u}=n,c=[1,1,1],h=co(i.shape,r,o,c,a,l,u),d=new Fw(h,"avg",!1);return t.runWebGLProgram(d,[i],"float32")}const Uae={kernelName:o0,backendName:"webgl",kernelFunc:Fae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bae{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,h=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class zae{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,i=e.filterWidth,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=h-1-e.padInfo.front,x=d-1-e.padInfo.top,m=f-1-e.padInfo.left,g=1/(t*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${x}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vae(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,h=[1,1,1],d=co(o.shape,a,l,h,u,c),f=new zae(d);return t.runWebGLProgram(f,[i],o.dtype)}const Wae={kernelName:DE,backendName:"webgl",kernelFunc:Vae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gae(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r;Gh([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:u}=n,c=Fi(o.shape,a,l,1,u),h=new Bae(c);return t.runWebGLProgram(h,[i],o.dtype)}const Hae={kernelName:$E,backendName:"webgl",kernelFunc:Gae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xae(s){const{inputs:e,backend:t,attrs:n}=s,{a:i,b:r}=e,{transposeA:o,transposeB:a}=n;return Hf({a:i,b:r,transposeA:o,transposeB:a,backend:t})}const qae={kernelName:a0,backendName:"webgl",kernelFunc:Xae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kae{constructor(e,t,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],It(e,t),It(e,n);let a="0.0";i!=null&&(It(e,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(It(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jae{constructor(e,t,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],It(e,t),It(e,n);let a="vec4(0.0)";i!=null&&(It(e,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(It(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yae=({inputs:s,backend:e,attrs:t})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;D(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[n,i,r];let c=null;o!=null&&(c=o.shape,u.push(o));let h=null;a!=null&&(h=a.shape,u.push(a));const d=J().getBool("WEBGL_PACK_NORMALIZATION")?new jae(n.shape,i.shape,r.shape,c,h,l):new Kae(n.shape,i.shape,r.shape,c,h,l);return e.runWebGLProgram(d,u,u[0].dtype)},Zae={kernelName:X0,backendName:"webgl",kernelFunc:Yae};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jae{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=an(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Qae(this.rank);let i;const r=e.map((o,a)=>`sourceLoc.${Kx[a]} = start[${a}] + coords.${Kx[a]};`);i=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const Kx=["x","y","z","w","u","v"];function Qae(s){if(s===1)return"sourceLoc";if(s<=6)return Kx.slice(0,s).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ele{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=an(this.rank),n=As("coords",this.rank),i=As("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tle(s,e,t,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(t,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=t,o.dtype=s.dtype;let a=tw(e,kn(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function qu(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{begin:r,size:o}=n,[a,l]=nw(i,r,o);if(Jv(i,a,l),ae(l)===0)return t.makeTensorInfo(l,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=t.texData.get(i.dataId),d=qre(h.values,a,l,i.shape,i.dtype);return t.makeTensorInfo(l,i.dtype,d)}const{isPacked:u}=t.texData.get(i.dataId),c=ew(i.shape,a,l);if(u||!c){const h=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ele(l):new Jae(l),d=[a];return t.runWebGLProgram(h,[i],i.dtype,d)}return t.uploadToGPU(i.dataId),tle(i,a,l,t)}const nle={kernelName:Zb,backendName:"webgl",kernelFunc:qu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sle=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockShape:r,crops:o}=n;D(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((y,v)=>y*v),l=Uh(i.shape,r,a),u=Bh(l.length,r.length),c=zh(i.shape,r,a),h=aw(o,r.length),d=lw(c,o,r.length),f=[],p=Pe({inputs:{x:i},backend:t,attrs:{shape:l}}),x=Rs({inputs:{x:p},backend:t,attrs:{perm:u}}),m=Pe({inputs:{x},backend:t,attrs:{shape:c}}),g=qu({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return f.push(p),f.push(x),f.push(m),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),g},ile={kernelName:l0,backendName:"webgl",kernelFunc:sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rle(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,weights:r}=e,{size:o}=n,a=t.readSync(i.dataId),l=t.readSync(r.dataId),u=mM(a,l,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,u)}const ole={kernelName:u0,backendName:"webgl",kernelFunc:rle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ale=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,lle=`
  return float(int(a.r) & int(b.r));
`;function ule(s){const{inputs:e,backend:t}=s,{a:n,b:i}=e,r=J().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=J().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([n,i])||o===1){const l=t.texData.get(n.dataId).values,u=t.texData.get(i.dataId).values,[c,h]=xre(n.shape,i.shape,l,u,n.dtype),d=t.makeTensorInfo(h,n.dtype),f=t.texData.get(d.dataId);return f.values=c,d}let a;return r?a=new Hu(ale,n.shape,i.shape,!1):a=new Ja(lle,n.shape,i.shape),t.runWebGLProgram(a,[n,i],n.dtype)}const cle={kernelName:LE,backendName:"webgl",kernelFunc:ule};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hle(s){const{inputs:e,backend:t}=s,{s0:n,s1:i}=e,r=t.readSync(n.dataId),o=t.readSync(i.dataId),a=It(Array.from(r),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const dle={kernelName:c0,backendName:"webgl",kernelFunc:hle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fle="return float(a != b);",RM=hs({opSnippet:fle,cpuKernelImpl:Fre,dtype:"bool"}),ple={kernelName:Tb,backendName:"webgl",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xh(s){const{inputs:e,backend:t}=s,{input:n}=e,i=t.texData.get(n.dataId);return ri({inputs:{x:i.complexTensorInfos.real},backend:t})}const mle={kernelName:Lb,backendName:"webgl",kernelFunc:Xh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gle="return float(int(x));";function xle(s,e){const t=new fr(s.shape,gle),n=e.runWebGLProgram(t,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return ri({inputs:{x:i},backend:t});const o=io(i.shape),a=jx({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),l=ea({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=Xh({inputs:{input:i},backend:t}),a=jx({inputs:{x:o},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(o),a}if(!RE(i.dtype,r)){const o=ri({inputs:{x:i},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(t.shouldExecuteOnCPU([i])){const o=t.texData.get(i.dataId).values,[a,l,u]=yre(o,i.shape,i.dtype,r);return t.makeTensorInfo(a,l,u)}if(r==="int32")return xle(i,t);if(r==="bool"){const o=t.makeTensorInfo([],"bool",Cr("bool",1)),l=RM({inputs:{a:i,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const yle={kernelName:Ep,backendName:"webgl",kernelFunc:jx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC="return ceil(x);",ble=Ht({opSnippet:FC,packedOpSnippet:FC,cpuKernelImpl:bre}),vle={kernelName:h0,backendName:"webgl",kernelFunc:ble};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wle{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sle{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _le(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{clipValueMin:r,clipValueMax:o}=n;let a;J().getBool("WEBGL_PACK_CLIP")?a=new Sle(i.shape):a=new wle(i.shape);const l=[[r],[o]];return t.runWebGLProgram(a,[i],i.dtype,l)}const Cle={kernelName:d0,backendName:"webgl",kernelFunc:_le};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tle{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(s,e){return{dataId:e.dataId,dtype:e.dtype,shape:s.shape}}function Ele(s){const{inputs:e,backend:t}=s,{x:n}=e,i=t.texData.get(n.dataId),r=new Tle(n.shape),o=[UC(n,i.complexTensorInfos.real),UC(n,i.complexTensorInfos.imag)];return t.runWebGLProgram(r,o,o[0].dtype)}const Ale={kernelName:p0,backendName:"webgl",kernelFunc:Ele};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ile{constructor(e){this.outputShape=[],this.outputShape=Li(e,1),this.variableNames=e.map((o,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const a=t[o-1];n.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=t.length,r=t[t.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rle{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Li(e,t);const n=this.outputShape,i=n.length,r=an(i),o=As("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=e.map((x,m)=>`T${m}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let x=1;x<l.length;x++)l[x]=l[x-1]+e[x][t];const u=a[t],c=a.slice(-2),h=a.join();let d=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let x=1;x<l.length;x++){const m=l[x-1];d+=`
        if (${u} < ${l[x]}  && ${u} >= ${l[x-1]}) {
          return getChannel(
            getT${x}(${nf(a,u,m)}),
            vec2(${nf(c,u,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${nf(a,u,p)}),
          vec2(${nf(c,u,p)}));`,this.userCode=`
      float getValue(${a.map(x=>"int "+x)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function nf(s,e,t){const n=s.indexOf(e);return s.map((r,o)=>o===n?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(s){const{inputs:e,backend:t}=s,{input:n}=e,i=t.texData.get(n.dataId);return ri({inputs:{x:i.complexTensorInfos.imag},backend:t})}const Mle={kernelName:J0,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wc(s,e,t){const n=s[0].dtype;if(n==="complex64"){const f=s.map(y=>Xh({inputs:{input:y},backend:t})),p=s.map(y=>Zp({inputs:{input:y},backend:t})),x=wc(f,e,t),m=wc(p,e,t),g=ea({inputs:{real:x,imag:m},backend:t});return f.forEach(y=>t.disposeIntermediateTensorInfo(y)),p.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),g}let i=t.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const f=s.map(w=>{const T=[-1,ae(w.shape.slice(e))];return Pe({inputs:{x:w},backend:t,attrs:{shape:T}})}),p=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),x=Li(f.map(w=>w.shape),1),m=f[0].shape[0]===1,g=vre(p,x,n,m),y=Li(s.map(w=>w.shape),e),v=t.makeTensorInfo(y,n,g);return f.forEach(w=>t.disposeIntermediateTensorInfo(w)),v}const r=s.filter(f=>ae(f.shape)>0),o=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const f=o?new fr(s[0].shape,Eo):new Mo(s[0].shape,Eo);return t.runWebGLProgram(f,s,n)}const a=J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>a){const f=[];for(let x=0;x<r.length;x+=a){const m=r.slice(x,x+a);f.push(wc(m,e,t))}const p=wc(f,e,t);for(const x of f)t.disposeIntermediateTensorInfo(x);return p}if(o){const f=new Rle(r.map(p=>p.shape),e);return t.runWebGLProgram(f,r,n)}const{tensors2D:l,outShape:u}=Nle(r,e,t),c=new Ile(l.map(f=>f.shape)),h=t.runWebGLProgram(c,l,n);l.forEach(f=>t.disposeIntermediateTensorInfo(f));const d=Pe({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),d}function Nle(s,e,t){const n=Li(s.map(r=>r.shape),e);return{tensors2D:s.map(r=>Pe({inputs:{x:r},attrs:{shape:[-1,ae(r.shape.slice(e))]},backend:t})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(s){const{inputs:e,backend:t,attrs:n}=s,{axis:i}=n,r=wn(i,e[0].shape)[0],o=e.map(u=>u.shape);iw(o,r);const a=Li(e.map(u=>u.shape),r);if(ae(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(u=>ae(u.shape)>0);return l.length===1?ri({inputs:{x:l[0]},backend:t}):wc(l,r,t)}const Ple={kernelName:m0,backendName:"webgl",kernelFunc:MM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NM{constructor(e,t=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,x=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,v=m?3:1;let w="",_="";n&&(i?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:w=`
          float activation(float x) {
            ${n}
          }
        `,_="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${x===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${x===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${x===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${T}
        ${_}
        setOutput(result);
      }
    `}}class kle{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,i=e.padInfo.left,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,x=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${t}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${x===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${x===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${x===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PM{constructor(e,t=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xs(this.outputShape.length);const o=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<c;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<c;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const g=m*2;if(d+=`
           xC = xCCorner + ${g*l};
           `,a===1){if(g<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const y=o%2===0?Wy(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${x}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $le{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=xs(this.outputShape.length);const{dataFormat:n}=t,i=Ps(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(s,e){const t=s.length;return t>=3?e?[...s.slice(0,-3),s[t-3]*s[t-2],s[t-1]]:[...s.slice(0,-3),s[t-3],s[t-2]*s[t-1]]:!e&&t===1&&s[0]>1?[s[0],1]:null}function kM({x:s,filter:e,convInfo:t,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,u=n.texData.get(s.dataId),c=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,f=t.dataFormat==="channelsLast",p=!1,x=!1;let m;const g=[];if(r!=null){const w=Xf(r.shape,f);w!=null&&(r=Pe({inputs:{x:r},backend:n,attrs:{shape:w}}),g.push(r))}if(i!=null){const w=Xf(i.shape,f);w!=null&&(i=Pe({inputs:{x:i},backend:n,attrs:{shape:w}}),g.push(i))}if(!((h===1||d===1)&&c>TM)&&u.isPacked&&f&&u.texture!=null&&l[2]%2!==0&&en(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),_={dataId:s.dataId,shape:[1,w,t.inChannels],dtype:s.dtype},T=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,D(Gf(u.shape,_.shape),()=>`packed reshape ${u.shape} to ${_.shape} isn't free`);const A=Pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});g.push(A);const M=Hf({a:_,b:A,backend:n,transposeA:p,transposeB:x,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),C=n.texData.get(M.dataId);D(C.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=T,C.shape=t.outShape,m=ri({inputs:{x:M},backend:n}),m.shape=t.outShape,g.push(M)}else{const w=t.outHeight*t.outWidth,_=Pe({inputs:{x:s},backend:n,attrs:{shape:f?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),T=Pe({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=Hf({a:f?_:T,b:f?T:_,transposeA:!f,transposeB:x,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=Pe({inputs:{x:A},backend:n,attrs:{shape:t.outShape}}),g.push(_),g.push(T),g.push(A)}for(const w of g)n.disposeIntermediateTensorInfo(w);return m}function $M({x:s,filter:e,convInfo:t,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:f}=t,p=f==="channelsLast",x=l*u*c,m=d*h,g=[t.batchSize,x,m],y=!0,v=!1,w=[];if(r!=null){const ce=Xf(r.shape,p);ce!=null&&(r=Pe({inputs:{x:r},backend:n,attrs:{shape:ce}}),w.push(r))}if(i!=null){const ce=Xf(i.shape,p);ce!=null&&(i=Pe({inputs:{x:i},backend:n,attrs:{shape:ce}}),w.push(i))}const _=Pe({inputs:{x:e},backend:n,attrs:{shape:[1,x,ae(e.shape)/x]}});w.push(_);const T=new $le(g,t),A=[s.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],M=n.runWebGLProgram(T,[s],"float32",A),C=Pe({inputs:{x:M},backend:n,attrs:{shape:g}});w.push(M),w.push(C);const R=i!=null,$=r!=null,W=a==="leakyrelu",q=a?yh(a,!0):null,O=new CM(p?C.shape:_.shape,p?_.shape:C.shape,p?[t.batchSize,m,t.outChannels]:[t.batchSize,t.outChannels,m],y,v,R,q,$,W),H=p?[C,_]:[_,C];if(i&&H.push(i),$&&H.push(r),W){const ce=n.makeTensorInfo([],"float32",Du(o,"float32"));H.push(ce),w.push(ce)}const Z=n.runWebGLProgram(O,H,"float32"),ee=Pe({inputs:{x:Z},backend:n,attrs:{shape:t.outShape}});w.push(Z);for(const ce of w)n.disposeIntermediateTensorInfo(ce);return ee}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dle(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=n,h=or(l),d=Gn(i.shape,r.shape,o,u,a,c,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=kM({x:i,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const x=new PM(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=t.runWebGLProgram(x,[i,r],"float32",m)}else if(J().getBool("WEBGL_CONV_IM2COL"))f=$M({x:i,filter:r,convInfo:d,backend:t});else{const x=new NM(d);f=t.runWebGLProgram(x,[i,r],"float32")}const p=Pe({inputs:{x:f},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(f),p}const Lle={kernelName:g0,backendName:"webgl",kernelFunc:Dle};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ole{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Fle{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=n-1-e.padInfo.left,u=o?1:2,c=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ule{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,i=e.strideWidth,r=e.padInfo.front,o=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ble{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,i=e.filterWidth,r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=i-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zle(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,h=or(l),d=Gn(i.shape,c,o,1,a,u,!1,h),f=new Ole(d);return t.runWebGLProgram(f,[i,r],"float32")}const Vle={kernelName:x0,backendName:"webgl",kernelFunc:zle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wle{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=xs(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,i=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gle(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{inputShape:o,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=n,h=or(u),d=Gn(o,r.shape,a,1,l,c,!1,h);if(J().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],p=new Wle(d);return t.runWebGLProgram(p,[i,r],"float32",f)}else{const f=new Fle(d);return t.runWebGLProgram(f,[i,r],"float32")}}const Hle={kernelName:y0,backendName:"webgl",kernelFunc:Gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xle(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=n,u=Jo(i.shape,r.shape,o,l,a),c=new kle(u);return t.runWebGLProgram(c,[i,r],"float32")}const qle={kernelName:b0,backendName:"webgl",kernelFunc:Xle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kle(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,pad:a,filterShape:l}=n,u=Jo(i.shape,l,o,1,a),c=new Ule(u);return t.runWebGLProgram(c,[i,r],"float32")}const jle={kernelName:OE,backendName:"webgl",kernelFunc:Kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yle(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{pad:o,strides:a,inputShape:l}=n,u=Jo(l,r.shape,a,1,o),c=new Ble(u);return t.runWebGLProgram(c,[i,r],"float32")}const Zle={kernelName:v0,backendName:"webgl",kernelFunc:Yle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jle=Xu+`
  return cos(x);
`,Qle=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${dl}
  return result;
`,eue=Ht({opSnippet:Jle,packedOpSnippet:Qle}),tue={kernelName:w0,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nue=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,sue=Ht({opSnippet:nue}),iue={kernelName:S0,backendName:"webgl",kernelFunc:sue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rue{constructor(e,t,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,u]=e,[c]=t,[h,d]=n;this.outputShape=[c,h,d,u];const f=i==="bilinear"?1:0,[p,x]=[`${a-1}.0`,`${l-1}.0`],[m,g,y]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,w,_]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${x} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${x}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${w};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${_};
        if( in_x < 0.0 || in_x > ${x} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oue=s=>{const{inputs:e,backend:t,attrs:n}=s,{image:i,boxes:r,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:u}=n,c=new rue(i.shape,r.shape,a,l,u);return t.runWebGLProgram(c,[i,r,o],"float32")},aue={kernelName:T0,backendName:"webgl",kernelFunc:oue};var vh;(function(s){s.Prod="*",s.Sum="+"})(vh||(vh={}));class BC{constructor(e,t,n,i){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===vh.Prod?"1.0":"0.0",a=n?o:`getX(${zC(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",c="";n?(u=i?`end != ${l-1}`:"end != 0",c=i?"end + 1":"end - 1"):(u=i?`end + pow2 < ${l}`:"end >= pow2",c=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${an(r)} coords = getOutputCoords();
        int end = ${VC(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${VC(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${zC(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function zC(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.x, ${e}.y`;if(s===3)return`${e}.x, ${e}.y, ${e}.z`;if(s===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${s} is not yet supported`)}function VC(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.y`;if(s===3)return`${e}.z`;if(s===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(s,e,t,n,i,r){const o=e.shape.length,a=ms([n],o);let l=e;a!=null&&(l=Rs({inputs:{x:e},backend:t,attrs:{perm:a}}));const u=gs(1,o)[0];if(u!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);const c=l.shape[u];let h=ri({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const f=new BC(s,l.shape,!1,r),p=[[d]],x=h;h=t.runWebGLProgram(f,[h],h.dtype,p),t.disposeIntermediateTensorInfo(x)}if(i){const d=new BC(s,l.shape,i,r),f=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Fh(a),f=Rs({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,exclusive:o,reverse:a}=n;return DM(vh.Prod,i,t,r,o,a)}const uue={kernelName:_0,backendName:"webgl",kernelFunc:lue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,exclusive:o,reverse:a}=n;return DM(vh.Sum,i,t,r,o,a)}const hue={kernelName:C0,backendName:"webgl",kernelFunc:cue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function due(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,weights:r}=e,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=t.readSync(i.dataId),u=t.readSync(r.dataId),c=mM(l,u,r.dtype,r.shape,o);return t.makeTensorInfo([o],r.dtype,c)}else if(i.shape.length===2){const l=t.bufferSync(i),u=t.bufferSync(r),c=gre(l,u,o,a);return t.makeTensorInfo(c.shape,r.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const fue={kernelName:E0,backendName:"webgl",kernelFunc:due};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pue{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],u=o==="NHWC"?i.shape[2]:i.shape[3],c=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=u*r,f=c/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],x=new pue(p,r,o);return t.runWebGLProgram(x,[i],i.dtype)}const gue={kernelName:A0,backendName:"webgl",kernelFunc:mue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LM{constructor(e,t=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xs(this.outputShape.length);const o=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let u="",c="";n&&(i?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OM{constructor(e,t=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xs(this.outputShape.length);const o=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)f+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<h;g++)f+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const y=g*2;if(f+=`
          xC = xCCorner + ${y*u};
          `,l===1){if(y<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const v=a%2===0?Wy(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):v===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",x="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,x="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:u}=n;let c=l;c==null&&(c=[1,1]),D(Ns(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Gn(i.shape,r.shape,o,c,a,u,!0);let d;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new OM(h):d=new LM(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[i,r],"float32",f)}const yue={kernelName:I0,backendName:"webgl",kernelFunc:xue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bue{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,i=e.padInfo.top,r=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${i};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class vue{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,i=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.top,a=n-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,dy:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=n,h=Gn(i.shape,c,o,a,l,u,!0),d=new bue(h);return t.runWebGLProgram(d,[i,r],"float32")}const Sue={kernelName:R0,backendName:"webgl",kernelFunc:wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ue(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,filter:r}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=n,h=Gn(c,r.shape,o,a,l,u,!0),d=new vue(h);return t.runWebGLProgram(d,[i,r],"float32")}const Cue={kernelName:M0,backendName:"webgl",kernelFunc:_ue};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tue{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eue(s){const{inputs:e,backend:t}=s,{x:n}=e,i=[...n.shape,...n.shape],r=ae(n.shape),o=Pe({inputs:{x:n},backend:t,attrs:{shape:[r]}}),a=new Tue(r),l=t.runWebGLProgram(a,[o],o.dtype),u=Pe({inputs:{x:l},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const Aue={kernelName:N0,backendName:"webgl",kernelFunc:Eue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iue{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rue(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r}=e,{strides:o,pad:a,dilations:l}=n,u=Lh(i.shape,r.shape,o,a,"NHWC",l);let c;const h=new Iue(u);c=t.runWebGLProgram(h,[i,r],"float32");const d=Pe({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),d}const Mue={kernelName:P0,backendName:"webgl",kernelFunc:Rue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nue(s){const{inputs:e,backend:t,attrs:n}=s,{equation:i}=n,r=e,{allDims:o,summedDims:a,idDims:l}=xw(i,r.length);bw(o.length,l,r);const{path:u,steps:c}=vw(a,l),h=c.length;let d=null,f=o.length;const p=[];for(let x=0;x<h;++x){for(const m of c[x]){const{permutationIndices:g,expandDims:y}=yw(f,l[m]);let v;ww(g)?v=r[m]:(v=Rs({inputs:{x:r[m]},backend:t,attrs:{perm:g}}),p.push(v));const w=v.shape.slice();for(let _=0;_<y.length;++_)w.splice(y[_],0,1);en(v.shape,w)||(v=Pe({inputs:{x:v},backend:t,attrs:{shape:w}}),p.push(v)),d===null?d=v:(d=Ow({inputs:{a:v,b:d},backend:t}),p.push(d))}x<h-1&&(u[x]>=0&&(d=Yp({inputs:{x:d},backend:t,attrs:{axis:u[x]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const x of p)x!==d&&t.disposeIntermediateTensorInfo(x);return d}const Pue={kernelName:$0,backendName:"webgl",kernelFunc:Nue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kue="return (x >= 0.0) ? x : (exp(x) - 1.0);",$ue=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Due=Ht({opSnippet:kue,packedOpSnippet:$ue}),Lue={kernelName:D0,backendName:"webgl",kernelFunc:Due};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oue="return (b >= 0.0) ? a : a * (b + 1.0);",Fue=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Uue=s=>{const{inputs:e,backend:t}=s,{dy:n,y:i}=e,r=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hu(Fue,n.shape,i.shape):new Ja(Oue,n.shape,i.shape);return t.runWebGLProgram(r,[n,i],n.dtype)},Bue={kernelName:UE,backendName:"webgl",kernelFunc:Uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zue=`
  return vec4(equal(a, b));
`,Vue="return float(a == b);",Wue=hs({opSnippet:Vue,packedOpSnippet:zue,dtype:"bool",cpuKernelImpl:wre}),Gue={kernelName:O0,backendName:"webgl",kernelFunc:Wue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hue=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${hw};
  float a1 = ${dw};
  float a2 = ${fw};
  float a3 = ${pw};
  float a4 = ${mw};
  float a5 = ${gw};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Xue=Ht({opSnippet:Hue}),que={kernelName:L0,backendName:"webgl",kernelFunc:Xue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kue=Xu+`
  return exp(x);
`,jue=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FM=Ht({opSnippet:Kue,packedOpSnippet:jue,cpuKernelImpl:Sre,dtype:"float32"}),Yue={kernelName:F0,backendName:"webgl",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yx(s){const{inputs:e,attrs:t,backend:n}=s,{dim:i}=t,{input:r}=e,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(D(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),Pe({inputs:{x:r},backend:n,attrs:{shape:a}})}const Zue={kernelName:U0,backendName:"webgl",kernelFunc:Yx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC="return exp(x) - 1.0;",Jue=Ht({opSnippet:WC,packedOpSnippet:WC,cpuKernelImpl:_re}),Que={kernelName:B0,backendName:"webgl",kernelFunc:Jue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GC{constructor(e,t,n){this.variableNames=["real","imag"];const i=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(s,e,t){const n=t.texData.get(s.dataId),i=ae(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=Pe({inputs:{x:s},backend:t,attrs:{shape:[o,r]}}),l=a.shape,u=new GC("real",l,e),c=new GC("imag",l,e),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(u,h,"float32"),f=t.runWebGLProgram(c,h,"float32"),p=ea({inputs:{real:d,imag:f},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f);const x=Pe({inputs:{x:p},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ece(s){const{inputs:e,backend:t}=s,{input:n}=e;return UM(n,!1,t)}const tce={kernelName:z0,backendName:"webgl",kernelFunc:ece};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nce{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qh(s){const{backend:e,attrs:t}=s,{shape:n,value:i}=t;let{dtype:r}=t;if(r=r||$u(i),r==="string"){const o=Yn(r,ae(n));return o.fill(i),e.makeTensorInfo(n,r,o)}else{const o=new nce(n,i),a=[[i]];return e.runWebGLProgram(o,[],r,a)}}const sce={kernelName:V0,backendName:"webgl",kernelFunc:qh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ice{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rce={kernelName:W0,backendName:"webgl",kernelFunc:({inputs:s,backend:e})=>{const{image:t}=s,n=e,i=new ice(t.shape);return n.runWebGLProgram(i,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC="return floor(x);",oce=Ht({opSnippet:HC,packedOpSnippet:HC,cpuKernelImpl:Cre}),ace={kernelName:G0,backendName:"webgl",kernelFunc:oce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lce=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,uce=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,cce=hs({opSnippet:lce,packedOpSnippet:uce,dtype:"int32"}),hce={kernelName:H0,backendName:"webgl",kernelFunc:cce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dce{constructor(e){this.variableNames=["A"];const t=Ps(),[n,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fce{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Ps(),[n,i]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pce={kernelName:Tf,backendName:"webgl",kernelFunc:mce};let Xl,pg=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function mce(s){const{inputs:e,backend:t,attrs:n}=s;let{pixels:i}=e;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,u]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],c=[u,l],h=[u,l,r];if(a||o){const x=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Xl==null||x!==pg)&&(pg=x,Xl=document.createElement("canvas").getContext("2d",{willReadFrequently:pg})),Xl.canvas.width=l,Xl.canvas.height=u,Xl.drawImage(i,0,0,l,u),i=Xl.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=gi.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),i);const f=J().getBool("WEBGL_PACK")?new fce(h):new dce(h),p=t.runWebGLProgram(f,[d],"int32");return t.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gce(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,x=or(c),m=Gn(i.shape,r.shape,l,h,u,d,!1,x);let g;const y=[],v=o!=null,w=a!=null,_=f==="leakyrelu",T=()=>{const M=[i,r],C=(R,$)=>{if($==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){const W=Pe({inputs:{x:R},backend:t,attrs:{shape:[R.shape[0],1,1]}});return y.push(W),W}return R};if(v&&M.push(C(o,c)),w&&M.push(C(a,c)),_){const R=t.makeTensorInfo([],"float32",Du(p,"float32"));M.push(R),y.push(R)}return M};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))g=kM({x:i,filter:r,convInfo:m,backend:t,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&x==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const M=f?yh(f,!0):null,C=new PM(m,v,M,w,_),R=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=T();g=t.runWebGLProgram(C,$,"float32",R)}else if(J().getBool("WEBGL_CONV_IM2COL"))g=$M({x:i,filter:r,convInfo:m,backend:t,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const M=f?yh(f,!1):null,C=new NM(m,v,M,w,_),R=T();g=t.runWebGLProgram(C,R,"float32")}const A=Pe({inputs:{x:g},backend:t,attrs:{shape:m.outShape}});return y.push(g),y.forEach(M=>t.disposeIntermediateTensorInfo(M)),A}const xce={kernelName:Af,backendName:"webgl",kernelFunc:gce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yce(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let x=c;x==null&&(x=[1,1]),D(Ns(l,x),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${x}'`);const m=Gn(i.shape,r.shape,l,x,u,h,!0),g=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,y=d?yh(d,g):null,v=[i,r],w=o!=null,_=a!=null,T=d==="leakyrelu";if(w&&v.push(o),_&&v.push(a),T){const R=t.makeTensorInfo([],"float32",Du(f,"float32"));v.push(R),p.push(R)}let A;g?A=new OM(m,w,y,_,T):A=new LM(m,w,y,_,T);const M=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],C=t.runWebGLProgram(A,v,"float32",M);return p.forEach(R=>t.disposeIntermediateTensorInfo(R)),C}const bce={kernelName:If,backendName:"webgl",kernelFunc:yce};class vce{constructor(e,t,n,i){this.sliceDim=e,this.strides=t,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=an(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wce(s){const{inputs:e,backend:t}=s,{params:n,indices:i}=e,r=i.shape,o=r[r.length-1],a=ae(n.shape),[l,u,c,h]=Zv(n,i),d=Pe({inputs:{x:i},backend:t,attrs:{shape:[u,o]}}),f=Pe({inputs:{x:n},backend:t,attrs:{shape:[ae(n.shape)/c,c]}});if(t.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const g=t.readSync(i.dataId),y=t.bufferSync(n),v=Tre(g,y,n.dtype,u,o,c,h,n.shape,a);return t.makeTensorInfo(l,n.dtype,v.values)}const p=new vce(o,h,[u,c],n.shape),x=t.runWebGLProgram(p,[f,d],f.dtype),m=Pe({inputs:{x},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),m}const Sce={kernelName:K0,backendName:"webgl",kernelFunc:wce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ce{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=an(this.rank),i=Cce(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function Cce(s,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${t[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,indices:r}=e,{axis:o,batchDims:a}=n,l=wn(o,i.shape)[0];if(J().get("DEBUG")){const y=t.readSync(r.dataId),v=i.shape[l];for(let w=0;w<y.length;++w){const _=y[w];D(_<=v-1&&_>=0,()=>`GatherV2: the index value ${_} is not in [0, ${v-1}]`)}}const u=Cw(i,r,l,a),c=ae(r.shape),h=[],d=Pe({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=Pe({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(f);const p=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const y=t.bufferSync(f),v=t.bufferSync(d),w=Ere(v,y,p);return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.makeTensorInfo(u.outputShape,w.dtype,w.values)}const x=new _ce(d.shape,p),m=t.runWebGLProgram(x,[d,f],d.dtype);h.push(m);const g=Pe({inputs:{x:m},backend:t,attrs:{shape:u.outputShape}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const Tce={kernelName:q0,backendName:"webgl",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ece="return float(a > b);",Ace=`
  return vec4(greaterThan(a, b));
`,Ice=hs({opSnippet:Ece,packedOpSnippet:Ace,cpuKernelImpl:Are,dtype:"bool"}),Rce={kernelName:j0,backendName:"webgl",kernelFunc:Ice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mce="return float(a >= b);",Nce=`
  return vec4(greaterThanEqual(a, b));
`,Pce=hs({opSnippet:Mce,packedOpSnippet:Nce,dtype:"bool",cpuKernelImpl:Ire}),kce={kernelName:Y0,backendName:"webgl",kernelFunc:Pce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ce(s){const{inputs:e,backend:t}=s,{input:n}=e;return UM(n,!0,t)}const Dce={kernelName:Z0,backendName:"webgl",kernelFunc:$ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lce="return float(!isnan(x) && !isinf(x));",Oce=Ht({opSnippet:Lce,dtype:"bool"}),Fce={kernelName:Q0,backendName:"webgl",kernelFunc:Oce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uce="return float(isinf(x));",Bce=Ht({opSnippet:Uce,dtype:"bool"}),zce={kernelName:eb,backendName:"webgl",kernelFunc:Bce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vce="return float(isnan(x));",Wce=Ht({opSnippet:Vce,dtype:"bool"}),Gce={kernelName:tb,backendName:"webgl",kernelFunc:Wce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hce="return float(a < b);",Xce=`
  return vec4(lessThan(a, b));
`,qce=hs({opSnippet:Hce,packedOpSnippet:Xce,cpuKernelImpl:Rre,dtype:"bool"}),Kce={kernelName:sb,backendName:"webgl",kernelFunc:qce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jce="return float(a <= b);",Yce=`
  return vec4(lessThanEqual(a, b));
`,Zce=hs({opSnippet:jce,packedOpSnippet:Yce,cpuKernelImpl:Mre,dtype:"bool"}),Jce={kernelName:ib,backendName:"webgl",kernelFunc:Zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qce(s){const{backend:e,attrs:t}=s,{start:n,stop:i,num:r}=t,o=Nre(n,i,r);return e.makeTensorInfo([o.length],"float32",o)}const ehe={kernelName:rb,backendName:"webgl",kernelFunc:Qce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const the=Xu+`
  return x < 0.0 ? 0./0. : log(x);
`,nhe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,she=Ht({opSnippet:the,packedOpSnippet:nhe,cpuKernelImpl:Pre}),ihe={kernelName:ob,backendName:"webgl",kernelFunc:she};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rhe=Xu+`
  return log(1.0 + x);
`,ohe=Ht({opSnippet:rhe}),ahe={kernelName:ab,backendName:"webgl",kernelFunc:ohe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lhe="return float(a >= 1.0 && b >= 1.0);",uhe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,che=hs({opSnippet:lhe,packedOpSnippet:uhe,dtype:"bool"}),hhe={kernelName:lb,backendName:"webgl",kernelFunc:che};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dhe="return float(!(x >= 1.0));",fhe=Ht({opSnippet:dhe}),phe={kernelName:ub,backendName:"webgl",kernelFunc:fhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mhe="return float(a >= 1.0 || b >= 1.0);",ghe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,xhe=hs({opSnippet:mhe,packedOpSnippet:ghe,dtype:"bool"}),yhe={kernelName:cb,backendName:"webgl",kernelFunc:xhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bhe{constructor(e,t,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vhe{constructor(e,t,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,a=e[3]-1;this.outputShape=e;let l;const u=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${u})`:r===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whe=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{depthRadius:r,bias:o,alpha:a,beta:l}=n,u=J().getBool("WEBGL_PACK_NORMALIZATION")?new vhe(i.shape,r,o,a,l):new bhe(i.shape,r,o,a,l);return t.runWebGLProgram(u,[i],i.dtype)},She={kernelName:hb,backendName:"webgl",kernelFunc:whe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _he{constructor(e,t,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Che=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i,y:r,dy:o}=e,{depthRadius:a,bias:l,alpha:u,beta:c}=n,h=new _he(i.shape,a,l,u,c);return t.runWebGLProgram(h,[i,r,o],i.dtype)},The={kernelName:BE,backendName:"webgl",kernelFunc:Che};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ehe(s,e,t,n){const i=ae(e),o=ae(s.shape)/i,a=Pe({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=fl(a,s.dtype,"max",n),u=Pe({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=wn(r,i.shape);let u=l;const c=ms(u,a),h=c!=null,d=t.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const v=t.texData.get(f.dataId).values,w=new Array(a);for(let A=0;A<w.length;A++)w[A]=i.shape[c[A]];const _=Dw(v,i.shape,i.dtype,c,w);f=t.makeTensorInfo(w,i.dtype);const T=t.texData.get(f.dataId);T.values=_}else f=jp(i,c,t);u=gs(u.length,a)}ci("max",u,a);const[p,x]=vi(f.shape,u);let m=p;o&&(m=ui(p,l));let g;if(d){const v=t.texData.get(f.dataId).values,w=kre(v,ae(x),m,i.dtype);g=t.makeTensorInfo(m,i.dtype);const _=t.texData.get(g.dataId);_.values=w}else g=Ehe(f,x,m,t);return h&&t.disposeIntermediateTensorInfo(f),g}const Ahe={kernelName:db,backendName:"webgl",kernelFunc:zM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ihe=Lw+`
  return max(a, b);
`,Rhe=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+dl+`
  return result;
`,Mhe=hs({opSnippet:Ihe,packedOpSnippet:Rhe,cpuKernelImpl:$re}),Nhe={kernelName:fb,backendName:"webgl",kernelFunc:Mhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Phe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e;Gh(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,u=1;D(Ns(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Fi(i.shape,r,o,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&en(c.inShape,c.outShape))return ri({inputs:{x:i},backend:t});const h=new bh(c,"max",!1);return t.runWebGLProgram(h,[i],i.dtype)}const khe={kernelName:pb,backendName:"webgl",kernelFunc:Phe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $he(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],h=co(i.shape,r,o,c,a,u,l),d=new Fw(h,"max",!1);return t.runWebGLProgram(d,[i],i.dtype)}const Dhe={kernelName:mb,backendName:"webgl",kernelFunc:$he};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lhe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,i=e.dilationHeight,r=e.effectiveFilterHeight,o=e.effectiveFilterWidth,a=r-1-e.padInfo.top,l=o-1-e.padInfo.left,u=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Ohe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,i=e.strideWidth,r=e.dilationDepth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=u-1-e.padInfo.top,f=c-1-e.padInfo.left,p=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fhe(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r}=e,o=r,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,h=[1,1,1],d=co(o.shape,a,l,h,u,c),f=new Fw(d,"max",!0),p=t.runWebGLProgram(f,[o],o.dtype),x=new Ohe(d),m=t.runWebGLProgram(x,[i,p],o.dtype);return t.disposeIntermediateTensorInfo(p),m}const Uhe={kernelName:VE,backendName:"webgl",kernelFunc:Fhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bhe(s){const{inputs:e,backend:t,attrs:n}=s,{dy:i,input:r,output:o}=e,a=r;Gh([r,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=n,d=Fi(a.shape,l,u,1,c,h),f=!0,p=new bh(d,"max",f),x=t.runWebGLProgram(p,[a],a.dtype),m=new Lhe(d),g=t.runWebGLProgram(m,[i,x],a.dtype);return t.disposeIntermediateTensorInfo(x),g}const zhe={kernelName:zE,backendName:"webgl",kernelFunc:Bhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vhe(s,e,t,n){let i=new bh(t,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new bh(t,"max",!0,!0,e);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Whe={kernelName:gb,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=e,l=t;D(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const u=[1,1];D(Ns(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const c=Fi(n.shape,i,r,u,o),[h,d]=Vhe(n,a,c,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ghe(s,e,t,n){const i=ae(e),o=ae(s.shape)/i,a=Pe({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=fl(a,"float32","mean",n),u=Pe({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hhe={kernelName:xb,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{keepDims:i,axis:r}=e,o=t,a=n.shape.length,l=wn(r,n.shape);let u=l;const c=ms(u,a),h=c!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const w=o.texData.get(p.dataId).values,_=new Array(a);for(let M=0;M<_.length;M++)_[M]=n.shape[c[M]];const T=Dw(w,n.shape,n.dtype,c,_);p=o.makeTensorInfo(_,n.dtype);const A=o.texData.get(p.dataId);A.values=T}else p=jp(n,c,o);f.push(p),u=gs(u.length,a)}ci("sum",u,a);const[x,m]=vi(p.shape,u);let g=x;i&&(g=ui(x,l));const y=Ghe(p,m,g,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xhe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n,a=i.shape.length,l=wn(r,i.shape);let u=l;const c=ms(u,a);let h=i;c!=null&&(h=Rs({inputs:{x:i},backend:t,attrs:{perm:c}}),u=gs(u.length,i.shape.length)),ci("min",u,a);const[d,f]=vi(h.shape,u),p=ae(f),x=Pe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=fl(x,x.dtype,"min",t);let g;if(o){const y=ui(d,l);g=Pe({inputs:{x:m},backend:t,attrs:{shape:y}})}else g=Pe({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),c!=null&&t.disposeIntermediateTensorInfo(h),g}const qhe={kernelName:yb,backendName:"webgl",kernelFunc:Xhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Khe=Lw+`
  return min(a, b);
`,jhe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+dl+`
  return result;
`,Yhe=hs({opSnippet:Khe,packedOpSnippet:jhe,cpuKernelImpl:Dre}),Zhe={kernelName:bb,backendName:"webgl",kernelFunc:Yhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jhe{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const i=e.length,r=an(i),o=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),u=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qhe{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,x)=>p[0]+e[x]+p[1]);const i=e.length,r=an(i),o=t.map(p=>p[0]).join(","),a=t.map((p,x)=>p[0]+e[x]).join(","),l=As("rc",i),u=As("source",i),c=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${u.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[i-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[i-1]} += 1;
        if(${c}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[i-1]} += 1;
          if(${c}) {
            ${p}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ede=({inputs:s,backend:e,attrs:t})=>{const{x:n}=s,{paddings:i,mode:r}=t,o=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qhe(n.shape,i,r):new Jhe(n.shape,i,r);return e.runWebGLProgram(o,[n],n.dtype)},tde={kernelName:vb,backendName:"webgl",kernelFunc:ede};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nde=`if (b == 0.0) return NAN;
  return mod(a, b);`,sde=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+dl+`
  return result;
`,ide=hs({opSnippet:nde,packedOpSnippet:sde}),rde={kernelName:wb,backendName:"webgl",kernelFunc:ide};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ode{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ade=`
if (a == b) {
  return 1.0;
};
return a / b;`,lde=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,VM=hs({opSnippet:ade,packedOpSnippet:lde,checkOutOfBounds:!0}),ude={kernelName:k0,backendName:"webgl",kernelFunc:VM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XC="return a - b;",WM=hs({opSnippet:XC,packedOpSnippet:XC,supportsComplex:!0,cpuKernelImpl:noe}),cde={kernelName:pv,backendName:"webgl",kernelFunc:WM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(s){const{inputs:e,backend:t,attrs:n}=s,{logits:i}=e,{dim:r}=n,o=wn([r],i.shape),a=zM({inputs:{x:i},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),l=ui(a.shape,o),u=Pe({inputs:{x:a},backend:t,attrs:{shape:l}}),c=WM({inputs:{a:i,b:u},backend:t}),h=FM({inputs:{x:c},backend:t}),d=Yp({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:!1}}),f=Pe({inputs:{x:d},backend:t,attrs:{shape:l}}),p=VM({inputs:{a:h,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}const hde={kernelName:av,backendName:"webgl",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dde(s){const{inputs:e,backend:t,attrs:n}=s,{logits:i}=e,{numSamples:r,seed:o,normalized:a}=n,l=a?i:GM({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new ode(u,c,r),d=[[o]],f=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),f}const fde={kernelName:Sb,backendName:"webgl",kernelFunc:dde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pde=Bi+`
  return -x;
`,mde=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function gde(s){const{inputs:e,backend:t}=s,{x:n}=e;if(t.shouldExecuteOnCPU([n])){const r=t.texData.get(n.dataId),[o,a]=Ore(r.values,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,o)}let i;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new Mo(n.shape,mde):i=new fr(n.shape,pde),t.runWebGLProgram(i,[n],n.dtype)}const xde={kernelName:Cb,backendName:"webgl",kernelFunc:gde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yde=Hv;function bde(s){Zi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,u=t.readSync(i.dataId),c=t.readSync(r.dataId),{selectedIndices:h}=yde(u,c,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const vde={kernelName:Eb,backendName:"webgl",kernelFunc:bde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wde=EI;function Sde(s){Zi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=n,c=t.readSync(i.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=wde(c,h,o,a,l,u);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const _de={kernelName:WE,backendName:"webgl",kernelFunc:Sde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cde=Xv;function Tde(s){Zi("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:i,scores:r}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=n,c=t.readSync(i.dataId),h=t.readSync(r.dataId),d=o,f=a,p=l,x=u,{selectedIndices:m,selectedScores:g}=Cde(c,h,d,f,p,x);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Ede={kernelName:Ab,backendName:"webgl",kernelFunc:Tde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ade{constructor(e,t,n,i){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ide=s=>{const{inputs:e,backend:t,attrs:n}=s,{indices:i}=e,{dtype:r,depth:o,onValue:a,offValue:l}=n,u=ae(i.shape),c=new Ade(u,o,a,l),h=Pe({inputs:{x:i},backend:t,attrs:{shape:[u]}}),d=t.runWebGLProgram(c,[h],r);t.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=Pe({inputs:{x:d},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(d),p},Rde={kernelName:Rb,backendName:"webgl",kernelFunc:Ide};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qf(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="complex64"){const i=Xh({inputs:{input:n},backend:t}),r=qf({inputs:{x:i},backend:t}),o=Zp({inputs:{input:n},backend:t}),a=qf({inputs:{x:o},backend:t}),l=ea({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return qh({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}const Mde={kernelName:wv,backendName:"webgl",kernelFunc:qf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=Xh({inputs:{input:n},backend:t}),r=HM({inputs:{x:i},backend:t}),o=Zp({inputs:{input:n},backend:t}),a=qf({inputs:{x:o},backend:t}),l=ea({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return qh({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}const Nde={kernelName:Ib,backendName:"webgl",kernelFunc:HM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pde(s){const{inputs:e,backend:t,attrs:n}=s,{axis:i}=n;if(e.length===1)return Yx({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const r=e[0].shape,o=e[0].dtype;e.forEach(c=>{ai(r,c.shape,"All tensors passed to stack must have matching shapes"),D(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(c=>{const h=Yx({inputs:{input:c},backend:t,attrs:{dim:i}});return a.push(h),h}),u=MM({inputs:l,backend:t,attrs:{axis:i}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}const kde={kernelName:Mb,backendName:"webgl",kernelFunc:Pde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $de{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);const i=e.length,r=an(i),o=t.map(u=>u[0]).join(","),a=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dde{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((x,m)=>x[0]+e[m]+x[1]);const i=e.length,r=an(i),o=t.map(x=>x[0]).join(","),a=t.map((x,m)=>x[0]+e[m]).join(","),l=As("rc",i),u=As("source",i),c=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${c}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${c}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let x=0,m=i===1?2:4;x<m;x++)p+=`
        ${d[x]}
        if (${f}) {
          result[${x}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${x}] = getChannel(getX(${u.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{paddings:r,constantValue:o}=n;if(ae(i.shape)===0){const u=r.map((c,h)=>c[0]+i.shape[h]+c[1]);return qh({backend:t,attrs:{shape:u,value:o,dtype:i.dtype}})}const a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dde(i.shape,r,o):new $de(i.shape,r,o),l=[[o]];return t.runWebGLProgram(a,[i],i.dtype,l)},Lde={kernelName:Nb,backendName:"webgl",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ode=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Fde=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+dl+`
  return result;
`,Ude=hs({opSnippet:Ode,packedOpSnippet:Fde}),Bde={kernelName:Pb,backendName:"webgl",kernelFunc:Ude};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zde(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],u=wn(r,i.shape);let c=u;const h=ms(c,a);let d=i;h!=null&&(d=Rs({inputs:{x:i},backend:t,attrs:{perm:h}}),c=gs(c.length,a),l.push(d)),ci("prod",c,a);let f;if(t.shouldExecuteOnCPU([d])){const p=t.texData.get(d.dataId).values,{outVals:x,outShape:m,outDtype:g}=Ure(d.shape,d.dtype,p,c);f=t.makeTensorInfo(m,g,x)}else{const[p,x]=vi(d.shape,c),m=ae(x),g=Pe({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),y=Np(i.dtype),v=fl(g,y,"prod",t);f=Pe({inputs:{x:v},backend:t,attrs:{shape:p}}),l.push(g),l.push(v)}if(o){l.push(f);const p=ui(f.shape,u);f=Pe({inputs:{x:f},backend:t,attrs:{shape:p}})}return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const Vde={kernelName:$b,backendName:"webgl",kernelFunc:zde};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wde(s){const{inputs:e,backend:t,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=e,{outputRaggedRank:a}=n,l=i.map(g=>t.readSync(g.dataId)),u=i.map(g=>g.shape),c=t.readSync(r.dataId),h=t.readSync(o.dataId),[d,f,p]=Bre(l,u,c,r.shape,r.dtype,h,o.shape,a),x=d.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,r.dtype,f);return x.concat([m])}const Gde={kernelName:GE,backendName:"webgl",kernelFunc:Wde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hde(s){const{inputs:e,backend:t}=s,{starts:n,limits:i,deltas:r}=e,o=t.readSync(n.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[u,c]=zre(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=t.makeTensorInfo([u.length],"int32",u),d=t.makeTensorInfo([c.length],n.dtype,c);return[h,d]}const Xde={kernelName:HE,backendName:"webgl",kernelFunc:Hde};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qde(s){const{inputs:e,backend:t,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=n,u=t.readSync(i.dataId),c=t.readSync(r.dataId),h=t.readSync(o.dataId),d=a.map(m=>t.readSync(m.dataId)),f=a.map(m=>m.shape),[p,x]=Vre(u,i.shape,c,r.shape,r.dtype,h,o.shape,d,f,l);return t.makeTensorInfo(p,r.dtype,x)}const Kde={kernelName:XE,backendName:"webgl",kernelFunc:qde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM=s=>{const{backend:e,attrs:t}=s,{start:n,stop:i,step:r,dtype:o}=t,a=Wre(n,i,r,o);return e.makeTensorInfo([a.length],o,a)},jde={kernelName:Db,backendName:"webgl",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yde="return 1.0 / x;",Zde=Ht({opSnippet:Yde}),Jde={kernelName:Ob,backendName:"webgl",kernelFunc:Zde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qde=Bi+`
  return (x < 0.0) ? 0.0 : x;
`,efe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tfe=Ht({opSnippet:Qde,packedOpSnippet:efe}),nfe={kernelName:Fb,backendName:"webgl",kernelFunc:tfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sfe=Bi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ife=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rfe=Ht({opSnippet:sfe,packedOpSnippet:ife}),ofe={kernelName:Vb,backendName:"webgl",kernelFunc:rfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class afe{constructor(e,t,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,n,u];const c=[i&&t>1?a-1:a,i&&n>1?l-1:l],h=[i&&t>1?t-1:t,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lfe{constructor(e,t,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,n,u];const c=[i&&t>1?a-1:a,i&&n>1?l-1:l],h=[i&&t>1?t-1:t,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ufe(s){const{inputs:e,backend:t,attrs:n}=s,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lfe(i.shape,l,u,r,o):new afe(i.shape,l,u,r,o);return t.runWebGLProgram(c,[i],"float32")}const cfe={kernelName:zb,backendName:"webgl",kernelFunc:ufe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hfe{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,o,a]=e,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],u=[n&&o>1?o-1:o,n&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,f=1/h,p=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dfe(s){const{inputs:e,backend:t,attrs:n}=s,{images:i,dy:r}=e,{alignCorners:o}=n,a=new hfe(r.shape,i.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const ffe={kernelName:KE,backendName:"webgl",kernelFunc:dfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pfe{constructor(e,t,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,n,u];const c=[i&&t>1?a-1:a,i&&n>1?l-1:l],h=[i&&t>1?t-1:t,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mfe{constructor(e,t,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,u]=e;this.outputShape=[o,t,n,u];const c=[i&&t>1?a-1:a,i&&n>1?l-1:l],h=[i&&t>1?t-1:t,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gfe(s){const{inputs:e,backend:t,attrs:n}=s,{images:i}=e,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,u]=a,c=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mfe(i.shape,l,u,r,o):new pfe(i.shape,l,u,r,o);return t.runWebGLProgram(c,[i],i.dtype)}const xfe={kernelName:Bb,backendName:"webgl",kernelFunc:gfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yfe{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,r]=t,[,o,a]=e,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],u=[n&&o>1?o-1:o,n&&a>1?a-1:a],c=l[0]/u[0],h=l[1]/u[1],d=1/c,f=1/h,p=Math.ceil(d)*2+2,x=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${x});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bfe(s){const{inputs:e,backend:t,attrs:n}=s,{images:i,dy:r}=e,{alignCorners:o}=n,a=new yfe(r.shape,i.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const vfe={kernelName:qE,backendName:"webgl",kernelFunc:bfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wfe{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const i=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((a,l)=>i(l)).join(","),o=an(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sfe{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const i=As("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=an(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${u(i.slice())};
          }
          if(${o}) {
            result.b = ${c(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function u(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function c(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const x=e.map((y,v)=>f(v,p)),m=x.join(","),g=x.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function f(p,x){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${x[p]} - 1`:`${x[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{dims:r}=n,o=i.shape.length,a=wn(r,i.shape);if(o===0)return ri({inputs:{x:i},backend:t});const l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sfe(i.shape,a):new wfe(i.shape,a);return t.runWebGLProgram(l,[i],i.dtype)}const Cfe={kernelName:Wb,backendName:"webgl",kernelFunc:_fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tfe{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],i=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Efe={kernelName:_v,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=e,a=t,l=new Tfe(n.shape,r),[u,c]=ow(o,n.shape[1],n.shape[2]),h=[[u,c,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Afe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ife=Ht({opSnippet:Afe}),Rfe={kernelName:Gb,backendName:"webgl",kernelFunc:Ife};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mfe="return inversesqrt(x);",Nfe=Ht({opSnippet:Mfe,cpuKernelImpl:Gre}),Pfe={kernelName:Hb,backendName:"webgl",kernelFunc:Nfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uw{constructor(e,t,n,i,r,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=an(r.length),c=an(o.length);let h="";n===1?h="i":n===2&&(h="i, j");const d=`getIndices(${h})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";l&&(x="coords[0], coords[1]");const m=`getDefaultValue(${x})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kfe{constructor(e,t,n,i,r,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const u=an(r.length),c=an(o.length);let h="";n===1?h="i":n===2&&(h="i, j");const d=`getIndices(${h})`;let f="";i===1?f="i":i===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let x="";l&&(x="coords[0], coords[1]");const m=`getDefaultValue(${x})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $fe(s){const{inputs:e,backend:t,attrs:n}=s,{indices:i,updates:r}=e,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=il(r,i,o),d=[h/u,u];if(h===0)return t.makeTensorInfo(o,i.dtype);const f=Pe({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),p=Pe({inputs:{x:r},backend:t,attrs:{shape:[l,u]}}),x=t.makeTensorInfo([],"float32",new Float32Array([0]));let m;J().getBool("WEBGL_PACK")?m=new kfe(l,a,f.shape.length,p.shape.length,c,d):m=new Uw(l,a,f.shape.length,p.shape.length,c,d);const g=t.runWebGLProgram(m,[p,f,x],p.dtype),y=Pe({inputs:{x:g},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),y}const Dfe={kernelName:Xb,backendName:"webgl",kernelFunc:$fe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lfe{constructor(e,t,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=J().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ofe(s){const{inputs:e,backend:t,attrs:n}=s,{sortedSequence:i,values:r}=e,{side:o}=n,a=new Lfe(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return t.runWebGLProgram(a,[i,r],"int32",l)}const Ffe={kernelName:Kb,backendName:"webgl",kernelFunc:Ofe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ufe{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${a[c]}`),c<e&&l.push(`${a[c]}`);i=l.join(),r=u.join()}const o=an(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bfe(s){const{inputs:e,backend:t}=s,{condition:n,t:i,e:r}=e,o=new Ufe(n.shape.length,i.shape,i.shape.length);return t.runWebGLProgram(o,[n,i,r],zs(i.dtype,r.dtype))}const zfe={kernelName:jb,backendName:"webgl",kernelFunc:Bfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vfe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${uw};
  float scale = ${cw};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Wfe=Ht({opSnippet:Vfe}),Gfe={kernelName:Yb,backendName:"webgl",kernelFunc:Wfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hfe=Xu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Xfe=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qfe=Ht({opSnippet:Hfe,packedOpSnippet:Xfe,cpuKernelImpl:Xre}),Kfe={kernelName:tv,backendName:"webgl",kernelFunc:qfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jfe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Yfe=Ht({opSnippet:jfe}),Zfe={kernelName:ev,backendName:"webgl",kernelFunc:Yfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jfe=Xu+`
  return sin(x);
`,Qfe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${dl}
  return result;
`,epe=Ht({opSnippet:Jfe,packedOpSnippet:Qfe}),tpe={kernelName:Jb,backendName:"webgl",kernelFunc:epe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const npe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,spe=Ht({opSnippet:npe}),ipe={kernelName:Qb,backendName:"webgl",kernelFunc:spe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rpe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ope=Ht({opSnippet:rpe}),ape={kernelName:nv,backendName:"webgl",kernelFunc:ope};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lpe=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{blockShape:r,paddings:o}=n;D(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((g,y)=>g*y),l=[[0,0]];l.push(...o);for(let g=1+r.length;g<i.shape.length;++g)l.push([0,0]);const u=[],c=XM({inputs:{x:i},backend:t,attrs:{paddings:l,constantValue:0}}),h=Uh(c.shape,r,a,!1),d=Bh(h.length,r.length,!1),f=zh(c.shape,r,a,!1),p=Pe({inputs:{x:c},backend:t,attrs:{shape:h}}),x=Rs({inputs:{x:p},backend:t,attrs:{perm:d}}),m=Pe({inputs:{x},backend:t,attrs:{shape:f}});return u.push(c),u.push(p),u.push(x),u.forEach(g=>t.disposeIntermediateTensorInfo(g)),m},upe={kernelName:rv,backendName:"webgl",kernelFunc:lpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cpe(s){const{inputs:e,backend:t}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.readSync(n.dataId),l=t.readSync(i.dataId),u=t.readSync(r.dataId),c=t.readSync(o.dataId)[0],[h,d,f,p,x]=Kre(a,n.shape,n.dtype,l,i.dtype,u,c);return[t.makeTensorInfo(d,n.dtype,h),t.makeTensorInfo([d[0]],i.dtype,f),t.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),t.makeTensorInfo([x.length],n.dtype,new Int32Array(x))]}const hpe={kernelName:jE,backendName:"webgl",kernelFunc:cpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dpe(s){const{inputs:e,backend:t}=s,{inputIndices:n,inputShape:i,newShape:r}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(t.readSync(i.dataId)),a=t.readSync(n.dataId),l=Array.from(t.readSync(r.dataId)),[u,c,h]=jre(a,n.shape,n.dtype,o,l);return[t.makeTensorInfo(c,n.dtype,u),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const fpe={kernelName:YE,backendName:"webgl",kernelFunc:dpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ppe(s){const{inputs:e,backend:t}=s,{data:n,indices:i,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=t.readSync(n.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[u,c]=xM(o,n.shape,n.dtype,a,l,!0);return t.makeTensorInfo(c,n.dtype,u)}const mpe={kernelName:lv,backendName:"webgl",kernelFunc:ppe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gpe(s){const{inputs:e,backend:t}=s,{data:n,indices:i,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=t.readSync(n.dataId),a=t.readSync(i.dataId),l=t.readSync(r.dataId),[u,c]=xM(o,n.shape,n.dtype,a,l);return t.makeTensorInfo(c,n.dtype,u)}const xpe={kernelName:uv,backendName:"webgl",kernelFunc:gpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ype(s){const{inputs:e,backend:t,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=e,{outputShape:a}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=il(r,i,a),f=!1;if(r.dtype==="string"){const g=t.bufferSync(i),y=t.bufferSync(r),v=Qr(t.readSync(o.dataId)[0]),w=Hre(g,y,a,d,c,u,l,h,v,f);return t.makeTensorInfo(a,w.dtype,w.values)}const p=new Uw(u,l,i.shape.length,r.shape.length,h,[d,1],f),x=t.runWebGLProgram(p,[r,i,o],r.dtype),m=Pe({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(x),m}const bpe={kernelName:cv,backendName:"webgl",kernelFunc:ype};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vpe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{numOrSizeSplits:r,axis:o}=n,a=wn(o,i.shape)[0],l=Sw(i,r,a),u=i.shape.length,c=new Array(u).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=qu({inputs:{x:i},backend:t,attrs:{begin:c,size:f}});return c[a]+=d,p})}const wpe={kernelName:ov,backendName:"webgl",kernelFunc:vpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC="return sqrt(x);",Spe=Ht({opSnippet:qC,packedOpSnippet:qC,cpuKernelImpl:Yre}),_pe={kernelName:sv,backendName:"webgl",kernelFunc:Spe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cpe="return x * x;",Tpe=Ht({opSnippet:Cpe}),Epe={kernelName:ZE,backendName:"webgl",kernelFunc:Tpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC="return (a - b) * (a - b);",Ape=hs({opSnippet:KC,packedOpSnippet:KC}),Ipe={kernelName:hv,backendName:"webgl",kernelFunc:Ape};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rpe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(i.dataId),o=Go(r),a=Zre(o,"string",n);return t.makeTensorInfo(i.shape,"string",a)}const Mpe={kernelName:JE,backendName:"webgl",kernelFunc:Rpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Npe({inputs:s,attrs:e,backend:t}){const{x:n}=s,i=Bi+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new fr(n.shape,i);return t.runWebGLProgram(r,[n],n.dtype)}const Ppe={kernelName:Sv,backendName:"webgl",kernelFunc:Npe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kpe{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=an(n.length),o=an(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((u,c)=>(l++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pe(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{begin:r,end:o,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:x,sliceDim0:m,isSimpleSlice:g,begin:y,end:v,strides:w}=sw(i.shape,r,o,a,l,u,c,h,d);let _;if(x)_=Pe({inputs:{x:i},backend:t,attrs:{shape:p}});else if(m||g){D(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const A=Qv(y,v,w),M=qu({inputs:{x:i},backend:t,attrs:{begin:y,size:A}});_=Pe({inputs:{x:M},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([i])){const M=t.readSync(i.dataId),C=tn(i.shape,i.dtype,M),R=Jre(f,C,w,y);_=t.makeTensorInfo(p,i.dtype,R.values)}else{const M=new kpe(y,w,f);_=t.runWebGLProgram(M,[i],i.dtype)}const T=Pe({inputs:{x:_},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(_),T}const Dpe={kernelName:dv,backendName:"webgl",kernelFunc:$pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpe(s){const{inputs:e,backend:t,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),f=t.readSync(h.dataId),[p,x]=Qre(d,f,i,r,o,a,l,u);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",x)]}const Ope={kernelName:fv,backendName:"webgl",kernelFunc:Lpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fpe(s){const{inputs:e,backend:t,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.readSync(r.dataId),l=t.readSync(o.dataId)[0],[u,c,h]=eoe(a,l,i),d=c.length;return[t.makeTensorInfo([d,2],"int32",u),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const Upe={kernelName:QE,backendName:"webgl",kernelFunc:Fpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bpe(s){const{inputs:e,backend:t,attrs:n}=s,{numBuckets:i}=n,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(r.dataId),a=toe(o,i);return t.makeTensorInfo(r.shape,"int32",a)}const zpe={kernelName:eA,backendName:"webgl",kernelFunc:Bpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vpe="return tan(x);",Wpe=Ht({opSnippet:Vpe}),Gpe={kernelName:mv,backendName:"webgl",kernelFunc:Wpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hpe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Xpe=Ht({opSnippet:Hpe}),qpe={kernelName:gv,backendName:"webgl",kernelFunc:Xpe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kpe(s){const{inputs:e,backend:t,attrs:n}=s,{tensor:i,indices:r,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=il(o,r,i.shape),d=[h/u,u];if(h===0)return t.makeTensorInfo(i.shape,r.dtype);const f=Pe({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),p=Pe({inputs:{x:o},backend:t,attrs:{shape:[l,u]}}),x=Pe({inputs:{x:i},backend:t,attrs:{shape:d}}),m=new Uw(l,a,f.shape.length,p.shape.length,c,d,!1,!0),g=t.runWebGLProgram(m,[p,f,x],x.dtype),y=Pe({inputs:{x:g},backend:t,attrs:{shape:i.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),y}const jpe={kernelName:qb,backendName:"webgl",kernelFunc:Kpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ype{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const i=an(this.rank),r=Zpe(e);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Zpe(s){const e=s.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${s[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${t[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=t.readSync(i.dataId),u=i.dtype==="string"?l.map(d=>Qr(d)):l,c=tn(i.shape,i.dtype,u),h=soe(c,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Ype(i.shape,r);return t.runWebGLProgram(o,[i],i.dtype)}const Jpe={kernelName:Ip,backendName:"webgl",kernelFunc:KM};class Qpe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class eme{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fa(s,e){e!==null&&s.disposeIntermediateTensorInfo(e)}function jC(s){let e=1;for(;e<s;)e*=2;return e}function tme(s){const{inputs:e,backend:t,attrs:n}=s,{x:i}=e,{k:r,sorted:o}=n,a=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=i.shape,c=u[u.length-1];if(t.shouldExecuteOnCPU([i])||c<a||r>l){const R=t.readSync(i.dataId),[$,W]=ioe(R,u,i.dtype,r,o);return[t.makeTensorInfo($.shape,$.dtype,$.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(r===0)return u[u.length-1]=0,[t.makeTensorInfo(u,i.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(c===1)return[i,qh({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?t.unpackTensor(i):i,x=ae(u)/c,m=Pe({inputs:{x:f},attrs:{shape:[x,c]},backend:t});d&&fa(t,f);const g=jC(r),y=jC(c);let v=null;const w=()=>v===null?[m,m]:[m,v],_=(R,$,W)=>{const q=w(),O=new Qpe(W),Z=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[R],[$]],ee=v;v=t.runWebGLProgram(O,q,"int32",Z),fa(t,ee)};for(let R=1;R<g;R*=2){const $=R*2;for(let W=R;W>=1;W/=2)_($,W,[x,y])}for(let R=y;R>g;R/=2){const $=w(),W=new eme([x,R/2]),O=[[c],[v===null?1:0],[g]],H=v;v=t.runWebGLProgram(W,$,"int32",O),fa(t,H);const Z=g/2,ee=Z*2;for(let ce=Z;ce>=1;ce/=2)_(ee,ce,v.shape)}let T=v;v=qu({inputs:{x:v},backend:t,attrs:{begin:0,size:[x,r]}}),fa(t,T);let A=BM({inputs:{x:m,indices:v},backend:t,attrs:{axis:1,batchDims:1}});fa(t,m);const M=u.slice(0,-1);M.push(r),T=v,v=Pe({inputs:{x:v},attrs:{shape:M},backend:t}),fa(t,T);const C=A;return A=Pe({inputs:{x:A},attrs:{shape:M},backend:t}),fa(t,C),[A,v]}const nme={kernelName:xv,backendName:"webgl",kernelFunc:tme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sme{constructor(e,t,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ime(s){const{inputs:e,backend:t,attrs:n}=s,{image:i,transforms:r}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:u}=n,[c,h,d,f]=i.shape,[p,x]=u??[h,d],m=[c,p,x,f],g=new sme(h,d,o,a,l,m);return t.runWebGLProgram(g,[i,r],"float32")}const rme={kernelName:yv,backendName:"webgl",kernelFunc:ime};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ome(s){const{inputs:e,attrs:t,backend:n}=s,{axis:i}=t,{x:r}=e;Gh(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:u}=roe(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([u.length],"int32",u)]}const ame={kernelName:tA,backendName:"webgl",kernelFunc:ome};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lme(s){const{inputs:e,backend:t,attrs:n}=s,{value:i}=e;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],u=new Array(a-1);let c=0;for(let x=0;x<a;x++)x!==r&&(u[c++]=o.shape[x]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let x=0;x<p.length;x++){d[r]=x;const m=qu({inputs:{x:o},backend:t,attrs:{begin:d,size:f}}),g=Pe({inputs:{x:m},backend:t,attrs:{shape:u}});p[x]=g,h.push(m)}return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),p}const ume={kernelName:bv,backendName:"webgl",kernelFunc:lme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cme{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,i=e.batchSize,r=e.inSize,o=e.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",u="sumValue",c=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hme(s){const{inputs:e,backend:t,attrs:n}=s,{x:i,segmentIds:r}=e,{numSegments:o}=n,a=i.shape.length,l=[];let u=0;const c=ms([u],a);let h=i;c!=null&&(h=Rs({inputs:{x:i},backend:t,attrs:{perm:c}}),l.push(h),u=gs(1,a)[0]);const d=_w(h.shape,u,o),f=ae([h.shape[u]]),p=Pe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});l.push(p);const x=Np(i.dtype),m=(w,_,T,A,M)=>{const C=w.shape[0],R=w.shape[1],$=iR(R,M),W={windowSize:$,inSize:R,batchSize:C,numSegments:M},q=new cme(W,_),O=t.compileAndRun(q,[w,T],A);if(l.push(O),O.shape[1]===M)return O;const H=qM({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),Z=KM({inputs:{x:H},backend:t,attrs:{reps:[R/$]}});return l.push(H),l.push(Z),m(O,_,Z,A,M)},g=m(p,"unsortedSegmentSum",r,x,o),y=Pe({inputs:{x:g},backend:t,attrs:{shape:d}});let v=y;if(c!=null){l.push(y);const w=Fh(c);v=Rs({inputs:{x:v},backend:t,attrs:{perm:w}})}return l.forEach(w=>t.disposeIntermediateTensorInfo(w)),v}const dme={kernelName:vv,backendName:"webgl",kernelFunc:hme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fme=[Yoe,Joe,tae,iae,oae,uae,hae,fae,xae,bae,Sae,Tae,Iae,Pae,Dae,Oae,Uae,Wae,Hae,qae,Zae,ile,ole,cle,dle,yle,vle,Cle,koe,Ale,Ple,Lle,Vle,Hle,qle,jle,Zle,tue,iue,aue,uue,hue,fue,gue,yue,Sue,Cue,Aue,Mue,Pue,Lue,Bue,Gue,que,Yue,Zue,Que,tce,sce,rce,ace,hce,pce,xce,bce,Sce,Tce,Rce,kce,Poe,Dce,Mle,Fce,zce,Gce,Doe,Kce,Jce,ehe,ihe,ahe,hhe,phe,yhe,She,The,Ahe,Nhe,khe,Dhe,Uhe,zhe,Whe,Hhe,qhe,Zhe,tde,rde,fde,Foe,xde,vde,_de,Ede,ple,Rde,Nde,kde,Lde,Bde,Ooe,Vde,Gde,Xde,Kde,jde,mle,ude,Jde,nfe,ofe,Boe,cfe,ffe,xfe,vfe,Cfe,Efe,Rfe,Pfe,Dfe,Ffe,zfe,Gfe,Kfe,Zfe,tpe,ipe,nle,hde,ape,upe,hpe,fpe,mpe,xpe,bpe,wpe,_pe,Epe,Ipe,Mpe,Ppe,Dpe,Ope,Upe,zpe,cde,qoe,Gpe,qpe,jpe,Jpe,nme,rme,Koe,ame,ume,dme,Mde];for(const s of fme)nA(s);function YC(s){let e,t,n;return{c(){e=vr("div"),t=Yl("Error: "),n=Yl(s[6]),this.h()},l(i){e=wr(i,"DIV",{class:!0});var r=Ua(e);t=Zl(r,"Error: "),n=Zl(r,s[6]),r.forEach(qt),this.h()},h(){Yi(e,"class","error svelte-15mvxzt")},m(i,r){xn(i,e,r),Ii(e,t),Ii(e,n)},p(i,r){r&64&&gg(n,i[6])},d(i){i&&qt(e)}}}function ZC(s){let e,t="Loading pose detection model...";return{c(){e=vr("div"),e.textContent=t,this.h()},l(n){e=wr(n,"DIV",{class:!0,"data-svelte-h":!0}),s2(e)!=="svelte-54ugzk"&&(e.textContent=t),this.h()},h(){Yi(e,"class","loading svelte-15mvxzt")},m(n,i){xn(n,e,i)},d(n){n&&qt(e)}}}function JC(s){let e;return{c(){e=vr("canvas"),this.h()},l(t){e=wr(t,"CANVAS",{width:!0,height:!0,class:!0}),Ua(e).forEach(qt),this.h()},h(){Yi(e,"width",s[0]),Yi(e,"height",s[1]),Yi(e,"class","svelte-15mvxzt")},m(t,n){xn(t,e,n),s[11](e)},p(t,n){n&1&&Yi(e,"width",t[0]),n&2&&Yi(e,"height",t[1])},d(t){t&&qt(e),s[11](null)}}}function pme(s){let e,t,n,i,r,o=s[6]&&YC(s),a=s[5]&&ZC(),l=s[2]&&JC(s);return{c(){e=vr("div"),o&&o.c(),t=Kn(),a&&a.c(),n=Kn(),i=vr("video"),r=Kn(),l&&l.c(),this.h()},l(u){e=wr(u,"DIV",{class:!0});var c=Ua(e);o&&o.l(c),t=jn(c),a&&a.l(c),n=jn(c),i=wr(c,"VIDEO",{style:!0}),Ua(i).forEach(qt),r=jn(c),l&&l.l(c),c.forEach(qt),this.h()},h(){i.playsInline=!0,Zs(i,"display","none"),Yi(e,"class","pose-detection svelte-15mvxzt")},m(u,c){xn(u,e,c),o&&o.m(e,null),Ii(e,t),a&&a.m(e,null),Ii(e,n),Ii(e,i),s[10](i),Ii(e,r),l&&l.m(e,null)},p(u,[c]){u[6]?o?o.p(u,c):(o=YC(u),o.c(),o.m(e,t)):o&&(o.d(1),o=null),u[5]?a||(a=ZC(),a.c(),a.m(e,n)):a&&(a.d(1),a=null),u[2]?l?l.p(u,c):(l=JC(u),l.c(),l.m(e,null)):l&&(l.d(1),l=null)},i:kc,o:kc,d(u){u&&qt(e),o&&o.d(),a&&a.d(),s[10](null),l&&l.d()}}}const QC="#00ff00",mme=2;function gme(s,e,t){let n,i,r,o,a=!0,l=null,{modelType:u="movenet"}=e,{showSkeleton:c=!0}=e,{showPoints:h=!0}=e,{width:d=640}=e,{height:f=480}=e,{showVideo:p=!0}=e;const x=n2();function m(C){if(!C)return;const R=C.map($=>({...$,x:$.x/d,y:$.y/f}));x("keypoints",{value:R})}async function g(){t(0,d=window.innerWidth*.5),t(1,f=window.innerHeight*.8);try{await RB(),await IB("webgl")}catch(C){throw new Error("Failed to initialize TensorFlow.js backend: "+C.message)}}async function y(){switch(u){case"movenet":const C=br.MoveNet,R={modelType:Cse.modelType.SINGLEPOSE_LIGHTNING,enableSmoothing:!0};r=await _se(C,R);break;default:throw new Error(`Unsupported model type: ${u}`)}}async function v(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");const C=await navigator.mediaDevices.getUserMedia({video:{width:d,height:f}});return t(3,n.srcObject=C,n),new Promise(R=>{t(3,n.onloadedmetadata=()=>{R(n)},n)})}function w(C,R){h&&C.forEach($=>{if($.score>.3){const{x:W,y:q}=$;R.beginPath(),R.arc(W,q,4,0,2*Math.PI),R.fillStyle=QC,R.fill()}})}function _(C,R){if(!c)return;[["left_shoulder","right_shoulder"],["left_shoulder","left_elbow"],["right_shoulder","right_elbow"],["left_elbow","left_wrist"],["right_elbow","right_wrist"],["left_shoulder","left_hip"],["right_shoulder","right_hip"],["left_hip","right_hip"]].forEach(([W,q])=>{const O=C.find(Z=>Z.name===W),H=C.find(Z=>Z.name===q);O&&H&&O.score>.3&&H.score>.3&&(R.beginPath(),R.moveTo(O.x,O.y),R.lineTo(H.x,H.y),R.strokeStyle=QC,R.lineWidth=mme,R.stroke())})}async function T(){var q,O;if(!r)return;let C=null;p&&(C=i.getContext("2d"),C.clearRect(0,0,d,f),C.drawImage(n,0,0,d,f));let R=await r.estimatePoses(n,{flipHorizontal:!1});const $=["left_shoulder","right_shoulder","left_wrist","right_wrist"],W=(q=R[0])==null?void 0:q.keypoints.filter(H=>$.includes(H.name));m(W),p&&W&&(w(W,C),_((O=R[0])==null?void 0:O.keypoints,C)),o=requestAnimationFrame(T)}wh(async()=>{try{t(5,a=!0),await g(),await y(),await v(),n.play(),t(5,a=!1),T()}catch(C){t(6,l=C.message),console.error("Error:",C)}}),Oi(()=>{o&&cancelAnimationFrame(o),n!=null&&n.srcObject&&n.srcObject.getTracks().forEach(C=>C.stop())});function A(C){mg[C?"unshift":"push"](()=>{n=C,t(3,n)})}function M(C){mg[C?"unshift":"push"](()=>{i=C,t(4,i)})}return s.$$set=C=>{"modelType"in C&&t(7,u=C.modelType),"showSkeleton"in C&&t(8,c=C.showSkeleton),"showPoints"in C&&t(9,h=C.showPoints),"width"in C&&t(0,d=C.width),"height"in C&&t(1,f=C.height),"showVideo"in C&&t(2,p=C.showVideo)},[d,f,p,n,i,a,l,u,c,h,A,M]}class xme extends ao{constructor(e){super(),lo(this,e,gme,pme,oo,{modelType:7,showSkeleton:8,showPoints:9,width:0,height:1,showVideo:2})}}function e2(s){let e,t,n,i,r,o,a,l,u,c;return e=new oU({props:{$$slots:{default:[yme]},$$scope:{ctx:s}}}),{c(){Tn(e.$$.fragment),t=Kn(),n=vr("div"),i=Yl("High Score: "),r=Yl(s[4]),o=Kn(),a=vr("br"),l=Yl("Total Score: "),u=Yl(s[3]),this.h()},l(h){En(e.$$.fragment,h),t=jn(h),n=wr(h,"DIV",{style:!0});var d=Ua(n);i=Zl(d,"High Score: "),r=Zl(d,s[4]),o=jn(d),a=wr(d,"BR",{}),l=Zl(d,"Total Score: "),u=Zl(d,s[3]),d.forEach(qt),this.h()},h(){Zs(n,"position","absolute"),Zs(n,"top","3%"),Zs(n,"left","3%"),Zs(n,"color","white"),Zs(n,"font-size","2em"),Zs(n,"text-align","left")},m(h,d){An(e,h,d),xn(h,t,d),xn(h,n,d),Ii(n,i),Ii(n,r),Ii(n,o),Ii(n,a),Ii(n,l),Ii(n,u),c=!0},p(h,d){const f={};d&32772&&(f.$$scope={dirty:d,ctx:h}),e.$set(f),(!c||d&16)&&gg(r,h[4]),(!c||d&8)&&gg(u,h[3])},i(h){c||(Ct(e.$$.fragment,h),c=!0)},o(h){Lt(e.$$.fragment,h),c=!1},d(h){h&&(qt(t),qt(n)),In(e,h)}}}function yme(s){let e,t;return e=new l8({props:{normalizedDistance:s[2]}}),e.$on("score",s[5]),{c(){Tn(e.$$.fragment)},l(n){En(e.$$.fragment,n)},m(n,i){An(e,n,i),t=!0},p(n,i){const r={};i&4&&(r.normalizedDistance=n[2]),e.$set(r)},i(n){t||(Ct(e.$$.fragment,n),t=!0)},o(n){Lt(e.$$.fragment,n),t=!1},d(n){In(e,n)}}}function bme(s){let e,t,n,i,r=`Clean the kettlebell.
  <br/>Refresh the page to recalibrate.`,o;e=new xme({props:{showVideo:s[0]}}),e.$on("keypoints",s[6]);let a=s[1]&&e2(s);return{c(){Tn(e.$$.fragment),t=Kn(),a&&a.c(),n=Kn(),i=vr("div"),i.innerHTML=r,this.h()},l(l){En(e.$$.fragment,l),t=jn(l),a&&a.l(l),n=jn(l),i=wr(l,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),s2(i)!=="svelte-55wk8y"&&(i.innerHTML=r),this.h()},h(){Yi(i,"class","instructions-display"),Zs(i,"position","absolute"),Zs(i,"top","3%"),Zs(i,"left","50%"),Zs(i,"transform","translateX(-50%)"),Zs(i,"color","white"),Zs(i,"font-size","2em"),Zs(i,"text-align","center")},m(l,u){An(e,l,u),xn(l,t,u),a&&a.m(l,u),xn(l,n,u),xn(l,i,u),o=!0},p(l,[u]){const c={};u&1&&(c.showVideo=l[0]),e.$set(c),l[1]?a?(a.p(l,u),u&2&&Ct(a,1)):(a=e2(l),a.c(),Ct(a,1),a.m(n.parentNode,n)):a&&($c(),Lt(a,1,1,()=>{a=null}),Dc())},i(l){o||(Ct(e.$$.fragment,l),Ct(a),o=!0)},o(l){Lt(e.$$.fragment,l),Lt(a),o=!1},d(l){l&&(qt(t),qt(n),qt(i)),In(e,l),a&&a.d(l)}}}function vme(s,e,t){let n=!0,i=0,r=0,o=0,a=0,l=null,u="initialize",c=Date.now(),h=!1,d=0,f=0,p=0,x=0;function m(y){f=y.detail,f>x&&t(4,x=f),f>0&&t(3,p+=1)}function g(y){if(!Array.isArray(y.detail.value))return;let v={};if(u=="initialize"){let C="";for(let R of y.detail.value)C+=`${R.name}: ${R.score.toFixed(2)}<br>`,v[R.name]=[R.x,R.y,R.score]}else for(let C of y.detail.value)v[C.name]=[C.x,C.y,C.score];const w=(C,R)=>{const $=C[0]-R[0],W=C[1]-R[1];return Math.sqrt($*$+W*W)},_=v.right_wrist,T=v.right_shoulder,A=v.left_wrist,M=v.left_shoulder;if(o=w(_,T),a=w(A,M),u=="initialize"&&(o<.1&&T[2]>.7&&_[2]>.5?(u="clean",l="right",c=Date.now()):a<.1&&M[2]>.7&&A[2]>.5&&(u="clean",l="left",c=Date.now())),u=="clean"&&Date.now()-c>1e3){const C=document.querySelector(".instructions-display");C.innerHTML="Press the bell!",l=="right"?i=_[1]:i=A[1],u="press",c=Date.now()}if(u=="press"&&Date.now()-c>3e3){const C=document.querySelector(".instructions-display");C.innerHTML="Press and Clean Distances Locked.<br>Game is starting.",l=="right"?r=_[1]:r=A[1],u="game",c=Date.now()}if(u=="game"&&Date.now()-c>1e3){const C=document.querySelector(".instructions-display");C.innerHTML="Score: "+f,t(1,h=!0),t(0,n=!1),l=="right"?t(2,d=Math.abs((_[1]-r)/(i-r))):t(2,d=Math.abs((A[1]-r)/(i-r)))}}return[n,h,d,p,x,m,g]}class wme extends ao{constructor(e){super(),lo(this,e,vme,bme,oo,{})}}function Sme(s){let e,t,n;return t=new wme({}),{c(){e=vr("div"),Tn(t.$$.fragment),this.h()},l(i){e=wr(i,"DIV",{class:!0});var r=Ua(e);En(t.$$.fragment,r),r.forEach(qt),this.h()},h(){Yi(e,"class","svelte-xjrkhs")},m(i,r){xn(i,e,r),An(t,e,null),n=!0},p:kc,i(i){n||(Ct(t.$$.fragment,i),n=!0)},o(i){Lt(t.$$.fragment,i),n=!1},d(i){i&&qt(e),In(t)}}}class $ge extends ao{constructor(e){super(),lo(this,e,null,Sme,oo,{})}}export{$ge as component};
